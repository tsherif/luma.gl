{"version":3,"sources":["webpack:///../node_modules/seer/dist/index.js","webpack:///../node_modules/math.gl/dist/esm/classes/base/vector.js","webpack:///../node_modules/math.gl/dist/esm/classes/vector3.js","webpack:///../node_modules/mjolnir.js/dist/esm/utils/hammer-overrides.js","webpack:///../node_modules/mjolnir.js/dist/esm/utils/hammer.browser.js","webpack:///../node_modules/mjolnir.js/dist/esm/constants.js","webpack:///../node_modules/mjolnir.js/dist/esm/inputs/wheel-input.js","webpack:///../node_modules/mjolnir.js/dist/esm/inputs/move-input.js","webpack:///../node_modules/mjolnir.js/dist/esm/inputs/key-input.js","webpack:///../node_modules/mjolnir.js/dist/esm/inputs/contextmenu-input.js","webpack:///../node_modules/mjolnir.js/dist/esm/utils/event-utils.js","webpack:///../node_modules/mjolnir.js/dist/esm/utils/event-registrar.js","webpack:///../node_modules/mjolnir.js/dist/esm/event-manager.js","webpack:///../node_modules/mjolnir.js/dist/esm/utils/hammer-manager-mock.js","webpack:///../node_modules/mjolnir.js/dist/esm/index.js","webpack:///../node_modules/hammerjs/hammer.js","webpack:///../node_modules/mjolnir.js/dist/esm/utils/globals.js"],"names":["__webpack_require__","Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","isBrowser","window","addEventListener","timers","Map","isReady","__SEER_INITIALIZED__","throttle","key","delay","time","get","now","Date","set","send","type","data","arguments","length","undefined","seen","Set","payload","JSON","stringify","has","add","toString","call","slice","includes","Array","replacer","postMessage","source","e","console","log","listeners","listener","message","_message$data","typeListeners","forEach","cb","init","__SEER_LISTENER__","list","listItem","itemKey","updateItem","path","multiUpdate","array","deleteItem","addLog","msg","listenFor","Error","push","removeListener","filter","l","clean","removeEventListener","vector_Vector","_MathArray","Vector","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","Math","sqrt","lengthSquared","len","i","ELEMENTS","mathArray","distanceSquared","dist","validators","product","magnitude","check","_len","vectors","_key","_i","_vectors","vector","_len2","_key2","_i2","_vectors2","distance","assert","a","b","copy","subtract","multiply","multiplyScalar","math_array","d","__webpack_exports__","vector3_Vector3","ORIGIN","_Vector","Vector3","_this","x","y","z","common","debug","object","vec3","_ref","radians","_ref$origin","origin","_ref2","_ref2$origin","_ref3","_ref3$origin","matrix4","transformAsPoint","gl_matrix_extras","matrix3","matrix2","quaternion","INPUT_START","INPUT_MOVE","INPUT_END","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","PointerEventInput","oldHandler","hammerjs","document","handler","ev","store","button","predict","some","pointerId","MouseInput","eventType","pressed","which","callback","manager","pointers","changedPointers","pointerType","srcEvent","hammer_browser","RECOGNIZERS","Rotate","enable","Pinch","Swipe","Pan","threshold","Press","Tap","event","taps","RECOGNIZER_COMPATIBLE_MAP","rotate","pan","doubletap","anytap","RECOGNIZER_FALLBACK_MAP","BASIC_EVENT_ALIASES","pointerdown","pointermove","pointerup","touchstart","touchmove","touchend","INPUT_EVENT_TYPES","EVENT_RECOGNIZER_MAP","tap","press","pinch","pinchin","pinchout","pinchstart","pinchmove","pinchend","pinchcancel","rotatestart","rotatemove","rotateend","rotatecancel","panstart","panmove","panup","pandown","panleft","panright","panend","pancancel","swipe","swipeleft","swiperight","swipeup","swipedown","GESTURE_EVENT_ALIASES","click","anyclick","dblclick","mouseover","mouseout","mouseleave","firefox","globals","indexOf","WHEEL_EVENTS","wheel_input_WheelInput","WheelInput","element","options","assign","events","concat","handleEvent","bind","passive","_this2","enabled","deltaY","WheelEvent","deltaMode","DOM_DELTA_PIXEL","devicePixelRatio","DOM_DELTA_LINE","wheelPosition","clientX","clientY","floor","shiftKey","_onWheel","delta","position","center","target","MOUSE_EVENTS","move_input_MoveInput","MoveInput","enableMoveEvent","enableLeaveEvent","enableOutEvent","enableOverEvent","handleOverEvent","handleOutEvent","handleLeaveEvent","handleMoveEvent","KEY_EVENTS","key_input_KeyInput","KeyInput","enableDownEvent","enableUpEvent","tabIndex","style","outline","targetElement","srcElement","tagName","contextmenu_input_ContextmenuInput","ContextmenuInput","DOWN_EVENT","MOVE_EVENT","UP_EVENT","event_utils_MOUSE_EVENTS","MOUSE_EVENT_WHICH_LEFT","MOUSE_EVENT_WHICH_MIDDLE","MOUSE_EVENT_WHICH_RIGHT","MOUSE_EVENT_BUTTON_LEFT","MOUSE_EVENT_BUTTON_MIDDLE","MOUSE_EVENT_BUTTON_RIGHT","MOUSE_EVENT_BUTTONS_LEFT_MASK","MOUSE_EVENT_BUTTONS_RIGHT_MASK","MOUSE_EVENT_BUTTONS_MIDDLE_MASK","event_registrar_EventRegistrar","EventRegistrar","eventManager","handlers","handlersByElement","entry","splice","entries","isEmpty","mjolnirEvent","_normalizeEvent","rootElement","_emit","handled","parentNode","immediatePropagationStopped","stopPropagation","stopImmediatePropagation","_entries$i","_event$srcEvent","buttons","leftButton","middleButton","rightButton","Number","isFinite","Boolean","whichButtons","rect","getBoundingClientRect","scaleX","width","offsetWidth","scaleY","height","offsetHeight","offsetCenter","left","clientLeft","top","clientTop","getOffsetPosition","DEFAULT_OPTIONS","recognizers","recognizerOptions","Manager","m","instance","chainedNoop","on","off","destroy","emit","touchAction","event_manager_EventManager","EventManager","_onBasicInput","_onOtherEvent","setElement","ManagerClass","recognizerName","keys","name","recognizer","otherName","recognizeWith","recognizerOption","wheelInput","moveInput","keyInput","contextmenuInput","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","_step$value","slicedToArray","eventAlias","eventRegistrar","_toggleRecognizer","err","_addEventHandler","eventName","_removeEventHandler","fallbackRecognizers","otherRecognizer","requireFailure","dropRequireFailure","enableEventType","remove","isRecognizerUsed","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","values","eh","alias","__WEBPACK_AMD_DEFINE_RESULT__","exportName","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","round","abs","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","isArray","each","hasOwnProperty","deprecate","method","deprecationMessage","stack","replace","warn","TypeError","output","index","nextKey","extend","dest","src","merge","inherit","child","base","properties","childP","baseP","create","_super","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","splitStr","removeEventListeners","hasParent","node","parent","inStr","str","find","trim","split","inArray","findByKey","toArray","uniqueArray","sort","results","prefixed","property","prefix","prop","camelProp","toUpperCase","_uniqueId","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","COMPUTE_INTERVAL","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","self","inputTarget","domHandler","inputHandler","input","pointersLen","changedPointersLen","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","getCenter","timeStamp","deltaTime","angle","getAngle","getDistance","offset","offsetDelta","prevDelta","prevInput","deltaX","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","start","end","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","v","computeIntervalInputData","computeInputData","recognize","p1","p2","props","atan2","PI","evEl","evTarget","evWin","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","POINTER_INPUT_MAP","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","SINGLE_TOUCH_INPUT_MAP","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","touches","all","changed","changedTouches","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","allTouches","identifier","targetTouches","changedTargetTouches","touch","DEDUP_TIMEOUT","DEDUP_DISTANCE","TouchMouseInput","mouse","primaryTouch","lastTouches","setLastTouch","eventData","lastTouch","lts","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","t","dx","dy","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","compute","actions","update","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","Recognizer","defaults","id","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","dropRecognizeWith","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","clearTimeout","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","oldCssProps","toggleCssProps","item","stop","force","stopped","curRecognizer","existing","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","STATE_FAILED","module","global","window_","passiveSupported"],"mappings":"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","file":"5-e10c87ccee844b53f41e.js","sourcesContent":["'use strict';\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n}; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nvar isBrowser = typeof window !== 'undefined' && window.addEventListener;\nvar timers = new Map();\n/**\n * Ready check for Seer initialization\n *\n * @returns {Boolean}\n */\n\nvar isReady = function isReady() {\n  return isBrowser && window.__SEER_INITIALIZED__;\n};\n/**\n * Utility method allowing to throttle a user action based on a key and a minimun delay.\n *\n * @param key {String} A unique key\n * @param delay {Number} The minimal delay to throttle\n * @returns {Boolean}\n */\n\n\nvar throttle = function throttle(key, delay) {\n  var time = timers.get(key);\n  var now = Date.now();\n\n  if (time && now - time < delay) {\n    return true;\n  }\n\n  timers.set(key, now);\n  return false;\n};\n\nvar replacer = function replacer(seen) {\n  return function (key, value) {\n    if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && seen.has(value)) {\n      return;\n    }\n\n    seen.add(value);\n    var isArray = Object.prototype.toString.call(value).slice(8, -1).includes('Array');\n\n    if (isArray) {\n      return Array.prototype.slice.call(value, 0, 20);\n    }\n\n    return value;\n  };\n};\n/**\n * Low-level api leveraging window.postMessage\n *\n * @param type {String} The action type\n * @param payload {Any} The action payload\n */\n\n\nvar send = function send(type) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isBrowser || !isReady()) {\n    return;\n  }\n\n  var seen = new Set();\n  var payload = JSON.stringify(data, replacer(seen));\n\n  try {\n    window.postMessage({\n      type: type,\n      payload: payload,\n      source: 'seer-agent'\n    }, '*');\n  } catch (e) {\n    if (throttle('seer-log', 2E3)) {\n      return;\n    }\n\n    console.log(e); // eslint-disable-line\n  }\n};\n\nvar listeners = new Map();\n\nvar listener = function listener(message) {\n  if (!message || !message.data || message.data.source !== 'seer-core') {\n    return;\n  }\n\n  var _message$data = message.data,\n      type = _message$data.type,\n      payload = _message$data.payload;\n  var typeListeners = listeners.get(type);\n\n  if (typeListeners) {\n    typeListeners.forEach(function (cb) {\n      return cb(payload);\n    });\n  }\n};\n/**\n * Initilize window listener. There will be only one for the whole process\n * to prevent too many registrations.\n *\n * This method will be called automatically if you use the `listenFor` method.\n */\n\n\nvar init = function init() {\n  if (!isBrowser || window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.addEventListener('message', listener);\n  window.__SEER_LISTENER__ = true;\n};\n/**\n * Clean listener. Can be useful in case you want to unregister upcoming events\n * or liberate memory.\n */\n\n\nvar clean = function clean() {\n  if (!isBrowser || !window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.removeEventListener('message', listener);\n  delete window.__SEER_LISTENER__;\n};\n/**\n * Create a listener that will be called upon events of the given key.\n *\n * @param key {String} The unique tab key\n * @param cb {Function} A callback that will receive the message payload\n */\n\n\nvar listenFor = function listenFor(type, cb) {\n  if (!isBrowser) {\n    return;\n  }\n\n  if (!type || !cb) {\n    throw new Error('Please provide a type and callback');\n  }\n\n  if (!listeners.has(type)) {\n    listeners.set(type, []);\n  }\n\n  if (!window.__SEER_LISTENER__) {\n    init();\n  }\n\n  listeners.get(type).push(cb);\n};\n/**\n * Remove an identity listener\n *\n * @param cb {Function} The callback to remove\n */\n\n\nvar removeListener = function removeListener(cb) {\n  listeners.forEach(function (typeListeners, key) {\n    listeners.set(key, typeListeners.filter(function (l) {\n      return l !== cb;\n    }));\n  });\n};\n/**\n * Creates a new indexed list.\n * It works by index to get O(1) accessing and performance.\n *\n * @param key {String} The key of the tab\n * @param data {Object} The indexed object\n */\n\n\nvar list = function list(key, data) {\n  return send('LIST', {\n    key: key,\n    data: data\n  });\n};\n/**\n * Creates an element in the indexed list, based on the itemKey.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param data {Any} The value of the item\n */\n\n\nvar listItem = function listItem(key, itemKey) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return send('LIST_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    data: data\n  });\n};\n/**\n * Update an item property, can be deeply nested.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param path {String} The path of the variable you want to update\n * @param data {Object} The new value\n */\n\n\nvar updateItem = function updateItem(key, itemKey, path, data) {\n  return send('UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    path: path,\n    data: data\n  });\n};\n/**\n * Similar to updateItem, but allows to pass an array with {path,data} pairs for\n * multiple update of the same item without having to send multiple messages.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param array {Array} The array of updates\n * @param array.path {String} The path for this update\n * @param array.data {Object} The value of this update\n */\n\n\nvar multiUpdate = function multiUpdate(key, itemKey, array) {\n  return send('MULTI_UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    array: array\n  });\n};\n/**\n * Remove a specific item in a specific tab.\n *\n * @param key {String} They key of the tab\n * @param itemKey {String} The key of the item\n */\n\n\nvar deleteItem = function deleteItem(key, itemKey) {\n  return send('DELETE_ITEM', {\n    key: key,\n    itemKey: itemKey\n  });\n};\n/**\n * Will create a log message to an item, that will be displayde with the current time.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param msg {String} The message to display\n */\n\n\nvar addLog = function addLog(key, itemKey, msg) {\n  return send('ADD_LOG', {\n    key: key,\n    itemKey: itemKey,\n    msg: msg\n  });\n};\n\nexports[\"default\"] = {\n  send: send,\n  throttle: throttle,\n  isReady: isReady,\n  list: list,\n  listItem: listItem,\n  updateItem: updateItem,\n  multiUpdate: multiUpdate,\n  deleteItem: deleteItem,\n  addLog: addLog,\n  listeners: listeners,\n  listenFor: listenFor,\n  removeListener: removeListener,\n  init: init,\n  clean: clean\n};","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport assert from '../../lib/assert';\n\nvar Vector = function (_MathArray) {\n  _inherits(Vector, _MathArray);\n\n  function Vector() {\n    _classCallCheck(this, Vector);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Vector).apply(this, arguments));\n  }\n\n  _createClass(Vector, [{\n    key: \"len\",\n    value: function len() {\n      return Math.sqrt(this.lengthSquared());\n    }\n  }, {\n    key: \"magnitude\",\n    value: function magnitude() {\n      return this.len();\n    }\n  }, {\n    key: \"lengthSquared\",\n    value: function lengthSquared() {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        length += this[i] * this[i];\n      }\n\n      return length;\n    }\n  }, {\n    key: \"magnitudeSquared\",\n    value: function magnitudeSquared() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distance\",\n    value: function distance(mathArray) {\n      return Math.sqrt(this.distanceSquared(mathArray));\n    }\n  }, {\n    key: \"distanceSquared\",\n    value: function distanceSquared(mathArray) {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        var dist = this[i] - mathArray[i];\n        length += dist * dist;\n      }\n\n      return checkNumber(length);\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(mathArray) {\n      var product = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        product += this[i] * mathArray[i];\n      }\n\n      return checkNumber(product);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var length = this.magnitude();\n\n      if (length !== 0) {\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= length;\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply() {\n      for (var _len = arguments.length, vectors = new Array(_len), _key = 0; _key < _len; _key++) {\n        vectors[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _vectors = vectors; _i < _vectors.length; _i++) {\n        var vector = _vectors[_i];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] *= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"divide\",\n    value: function divide() {\n      for (var _len2 = arguments.length, vectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        vectors[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _vectors2 = vectors; _i2 < _vectors2.length; _i2++) {\n        var vector = _vectors2[_i2];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"lengthSq\",\n    value: function lengthSq() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(vector) {\n      return this.distance(vector);\n    }\n  }, {\n    key: \"distanceToSquared\",\n    value: function distanceToSquared(vector) {\n      return this.distanceSquared(vector);\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(i) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      return checkNumber(this[i]);\n    }\n  }, {\n    key: \"setComponent\",\n    value: function setComponent(i, value) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      this[i] = value;\n      return this.check();\n    }\n  }, {\n    key: \"addVectors\",\n    value: function addVectors(a, b) {\n      return this.copy(a).add(b);\n    }\n  }, {\n    key: \"subVectors\",\n    value: function subVectors(a, b) {\n      return this.copy(a).subtract(b);\n    }\n  }, {\n    key: \"multiplyVectors\",\n    value: function multiplyVectors(a, b) {\n      return this.copy(a).multiply(b);\n    }\n  }, {\n    key: \"addScaledVector\",\n    value: function addScaledVector(a, b) {\n      return this.add(new this.constructor(a).multiplyScalar(b));\n    }\n  }, {\n    key: \"x\",\n    get: function get() {\n      return this[0];\n    },\n    set: function set(value) {\n      return this[0] = checkNumber(value);\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this[1];\n    },\n    set: function set(value) {\n      return this[1] = checkNumber(value);\n    }\n  }]);\n\n  return Vector;\n}(MathArray);\n\nexport { Vector as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nvar ORIGIN = [0, 0, 0];\n\nvar Vector3 = function (_Vector) {\n  _inherits(Vector3, _Vector);\n\n  function Vector3() {\n    var _this;\n\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Vector3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vector3).call(this, -0, -0, -0));\n\n    if (arguments.length === 1 && isArray(x)) {\n      _this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      _this[0] = x;\n      _this[1] = y;\n      _this[2] = z;\n    }\n\n    return _this;\n  }\n\n  _createClass(Vector3, [{\n    key: \"set\",\n    value: function set(x, y, z) {\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      return this.check();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      return this.check();\n    }\n  }, {\n    key: \"fromObject\",\n    value: function fromObject(object) {\n      if (config.debug) {\n        checkNumber(object.x);\n        checkNumber(object.y);\n        checkNumber(object.z);\n      }\n\n      this[0] = object.x;\n      this[1] = object.y;\n      this[2] = object.z;\n      return this.check();\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject(object) {\n      object.x = this[0];\n      object.y = this[1];\n      object.z = this[2];\n      return object;\n    }\n  }, {\n    key: \"angle\",\n    value: function angle(vector) {\n      return vec3.angle(this, vector);\n    }\n  }, {\n    key: \"cross\",\n    value: function cross(vector) {\n      vec3.cross(this, this, vector);\n      return this.check();\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(_ref) {\n      var radians = _ref.radians,\n          _ref$origin = _ref.origin,\n          origin = _ref$origin === void 0 ? ORIGIN : _ref$origin;\n      vec3.rotateX(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(_ref2) {\n      var radians = _ref2.radians,\n          _ref2$origin = _ref2.origin,\n          origin = _ref2$origin === void 0 ? ORIGIN : _ref2$origin;\n      vec3.rotateY(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(_ref3) {\n      var radians = _ref3.radians,\n          _ref3$origin = _ref3.origin,\n          origin = _ref3$origin === void 0 ? ORIGIN : _ref3$origin;\n      vec3.rotateZ(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix4) {\n      return this.transformAsPoint(matrix4);\n    }\n  }, {\n    key: \"transformAsPoint\",\n    value: function transformAsPoint(matrix4) {\n      vec3.transformMat4(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformAsVector\",\n    value: function transformAsVector(matrix4) {\n      vec3_transformMat4AsVector(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix3\",\n    value: function transformByMatrix3(matrix3) {\n      vec3.transformMat3(this, this, matrix3);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix2\",\n    value: function transformByMatrix2(matrix2) {\n      vec3_transformMat2(this, this, matrix2);\n      return this.check();\n    }\n  }, {\n    key: \"transformByQuaternion\",\n    value: function transformByQuaternion(quaternion) {\n      vec3.transformQuat(this, this, quaternion);\n      return this.check();\n    }\n  }, {\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 3;\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this[2];\n    },\n    set: function set(value) {\n      return this[2] = checkNumber(value);\n    }\n  }]);\n\n  return Vector3;\n}(Vector);\n\nexport { Vector3 as default };","/**\n * This file contains overrides the default\n * hammer.js functions to add our own utility\n */\n\n/* Hammer.js constants */\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar MOUSE_INPUT_MAP = {\n  mousedown: INPUT_START,\n  mousemove: INPUT_MOVE,\n  mouseup: INPUT_END\n};\n/**\n * Helper function that returns true if any element in an array meets given criteria.\n * Because older browsers do not support `Array.prototype.some`\n * @params array {Array}\n * @params predict {Function}\n */\n\nfunction some(array, predict) {\n  for (var i = 0; i < array.length; i++) {\n    if (predict(array[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/* eslint-disable no-invalid-this */\n\n\nexport function enhancePointerEventInput(PointerEventInput) {\n  var oldHandler = PointerEventInput.prototype.handler; // overrides PointerEventInput.handler to accept right mouse button\n\n  PointerEventInput.prototype.handler = function handler(ev) {\n    var store = this.store; // Allow non-left mouse buttons through\n\n    if (ev.button > 0) {\n      if (!some(store, function (e) {\n        return e.pointerId === ev.pointerId;\n      })) {\n        store.push(ev);\n      }\n    }\n\n    oldHandler.call(this, ev);\n  };\n} // overrides MouseInput.handler to accept right mouse button\n\nexport function enhanceMouseInput(MouseInput) {\n  MouseInput.prototype.handler = function handler(ev) {\n    var eventType = MOUSE_INPUT_MAP[ev.type]; // on start we want to have the mouse button down\n\n    if (eventType & INPUT_START && ev.button >= 0) {\n      this.pressed = true;\n    }\n\n    if (eventType & INPUT_MOVE && ev.which === 0) {\n      eventType = INPUT_END;\n    } // mouse must be down\n\n\n    if (!this.pressed) {\n      return;\n    }\n\n    if (eventType & INPUT_END) {\n      this.pressed = false;\n    }\n\n    this.callback(this.manager, eventType, {\n      pointers: [ev],\n      changedPointers: [ev],\n      pointerType: 'mouse',\n      srcEvent: ev\n    });\n  };\n}","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport { enhancePointerEventInput, enhanceMouseInput } from './hammer-overrides';\nvar hammerjs = null;\n\nif (typeof document !== 'undefined') {\n  // Avoid crash if imported in a web worker\n  hammerjs = require('hammerjs');\n  enhancePointerEventInput(hammerjs.PointerEventInput);\n  enhanceMouseInput(hammerjs.MouseInput);\n}\n\nexport default hammerjs;","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport Hammer from './utils/hammer'; // This module contains constants that must be conditionally required\n// due to `window`/`document` references downstream.\n\nexport var RECOGNIZERS = Hammer ? [[Hammer.Rotate, {\n  enable: false\n}], [Hammer.Pinch, {\n  enable: false\n}], [Hammer.Swipe, {\n  enable: false\n}], [Hammer.Pan, {\n  threshold: 0,\n  enable: false\n}], [Hammer.Press, {\n  enable: false\n}], [Hammer.Tap, {\n  event: 'doubletap',\n  taps: 2,\n  enable: false\n}], // TODO - rename to 'tap' and 'singletap' in the next major release\n[Hammer.Tap, {\n  event: 'anytap',\n  enable: false\n}], [Hammer.Tap, {\n  enable: false\n}]] : null; // Recognize the following gestures even if a given recognizer succeeds\n\nexport var RECOGNIZER_COMPATIBLE_MAP = {\n  rotate: ['pinch'],\n  pan: ['press', 'doubletap', 'anytap', 'tap'],\n  doubletap: ['anytap'],\n  anytap: ['tap']\n}; // Recognize the folling gestures only if a given recognizer fails\n\nexport var RECOGNIZER_FALLBACK_MAP = {\n  doubletap: ['tap']\n};\n/**\n * Only one set of basic input events will be fired by Hammer.js:\n * either pointer, touch, or mouse, depending on system support.\n * In order to enable an application to be agnostic of system support,\n * alias basic input events into \"classes\" of events: down, move, and up.\n * See `_onBasicInput()` for usage of these aliases.\n */\n\nexport var BASIC_EVENT_ALIASES = {\n  pointerdown: 'pointerdown',\n  pointermove: 'pointermove',\n  pointerup: 'pointerup',\n  touchstart: 'pointerdown',\n  touchmove: 'pointermove',\n  touchend: 'pointerup',\n  mousedown: 'pointerdown',\n  mousemove: 'pointermove',\n  mouseup: 'pointerup'\n};\nexport var INPUT_EVENT_TYPES = {\n  KEY_EVENTS: ['keydown', 'keyup'],\n  MOUSE_EVENTS: ['mousedown', 'mousemove', 'mouseup', 'mouseover', 'mouseout', 'mouseleave'],\n  WHEEL_EVENTS: [// Chrome, Safari\n  'wheel', // IE\n  'mousewheel', // legacy Firefox\n  'DOMMouseScroll']\n};\n/**\n * \"Gestural\" events are those that have semantic meaning beyond the basic input event,\n * e.g. a click or tap is a sequence of `down` and `up` events with no `move` event in between.\n * Hammer.js handles these with its Recognizer system;\n * this block maps event names to the Recognizers required to detect the events.\n */\n\nexport var EVENT_RECOGNIZER_MAP = {\n  tap: 'tap',\n  anytap: 'anytap',\n  doubletap: 'doubletap',\n  press: 'press',\n  pinch: 'pinch',\n  pinchin: 'pinch',\n  pinchout: 'pinch',\n  pinchstart: 'pinch',\n  pinchmove: 'pinch',\n  pinchend: 'pinch',\n  pinchcancel: 'pinch',\n  rotate: 'rotate',\n  rotatestart: 'rotate',\n  rotatemove: 'rotate',\n  rotateend: 'rotate',\n  rotatecancel: 'rotate',\n  pan: 'pan',\n  panstart: 'pan',\n  panmove: 'pan',\n  panup: 'pan',\n  pandown: 'pan',\n  panleft: 'pan',\n  panright: 'pan',\n  panend: 'pan',\n  pancancel: 'pan',\n  swipe: 'swipe',\n  swipeleft: 'swipe',\n  swiperight: 'swipe',\n  swipeup: 'swipe',\n  swipedown: 'swipe'\n};\n/**\n * Map gestural events typically provided by browsers\n * that are not reported in 'hammer.input' events\n * to corresponding Hammer.js gestures.\n */\n\nexport var GESTURE_EVENT_ALIASES = {\n  click: 'tap',\n  anyclick: 'anytap',\n  dblclick: 'doubletap',\n  mousedown: 'pointerdown',\n  mousemove: 'pointermove',\n  mouseup: 'pointerup',\n  mouseover: 'pointerover',\n  mouseout: 'pointerout',\n  mouseleave: 'pointerleave'\n};","import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.array.index-of\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\"; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { INPUT_EVENT_TYPES } from '../constants';\nimport { window, userAgent, passiveSupported } from '../utils/globals';\nvar firefox = userAgent.indexOf('firefox') !== -1;\nvar WHEEL_EVENTS = INPUT_EVENT_TYPES.WHEEL_EVENTS;\nvar EVENT_TYPE = 'wheel'; // Constants for normalizing input delta\n\nvar WHEEL_DELTA_MAGIC_SCALER = 4.000244140625;\nvar WHEEL_DELTA_PER_LINE = 40; // Slow down zoom if shift key is held for more precise zooming\n\nvar SHIFT_MULTIPLIER = 0.25;\n\nvar WheelInput =\n/*#__PURE__*/\nfunction () {\n  function WheelInput(element, callback) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, WheelInput);\n\n    this.element = element;\n    this.callback = callback;\n    this.options = Object.assign({\n      enable: true\n    }, options);\n    this.events = WHEEL_EVENTS.concat(options.events || []);\n    this.handleEvent = this.handleEvent.bind(this);\n    this.events.forEach(function (event) {\n      return element.addEventListener(event, _this.handleEvent, passiveSupported ? {\n        passive: false\n      } : false);\n    });\n  }\n\n  _createClass(WheelInput, [{\n    key: \"destroy\",\n    value: function destroy() {\n      var _this2 = this;\n\n      this.events.forEach(function (event) {\n        return _this2.element.removeEventListener(event, _this2.handleEvent);\n      });\n    }\n    /**\n     * Enable this input (begin processing events)\n     * if the specified event type is among those handled by this input.\n     */\n\n  }, {\n    key: \"enableEventType\",\n    value: function enableEventType(eventType, enabled) {\n      if (eventType === EVENT_TYPE) {\n        this.options.enable = enabled;\n      }\n    }\n    /* eslint-disable complexity, max-statements */\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      if (!this.options.enable) {\n        return;\n      }\n\n      var value = event.deltaY;\n\n      if (window.WheelEvent) {\n        // Firefox doubles the values on retina screens...\n        if (firefox && event.deltaMode === window.WheelEvent.DOM_DELTA_PIXEL) {\n          value /= window.devicePixelRatio;\n        }\n\n        if (event.deltaMode === window.WheelEvent.DOM_DELTA_LINE) {\n          value *= WHEEL_DELTA_PER_LINE;\n        }\n      }\n\n      var wheelPosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n\n      if (value !== 0 && value % WHEEL_DELTA_MAGIC_SCALER === 0) {\n        // This one is definitely a mouse wheel event.\n        // Normalize this value to match trackpad.\n        value = Math.floor(value / WHEEL_DELTA_MAGIC_SCALER);\n      }\n\n      if (event.shiftKey && value) {\n        value = value * SHIFT_MULTIPLIER;\n      }\n\n      this._onWheel(event, -value, wheelPosition);\n    }\n  }, {\n    key: \"_onWheel\",\n    value: function _onWheel(srcEvent, delta, position) {\n      this.callback({\n        type: EVENT_TYPE,\n        center: position,\n        delta: delta,\n        srcEvent: srcEvent,\n        pointerType: 'mouse',\n        target: srcEvent.target\n      });\n    }\n  }]);\n\n  return WheelInput;\n}();\n\nexport { WheelInput as default };","import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/es6.object.assign\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\"; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { INPUT_EVENT_TYPES } from '../constants';\nvar MOUSE_EVENTS = INPUT_EVENT_TYPES.MOUSE_EVENTS;\nvar MOVE_EVENT_TYPE = 'pointermove';\nvar OVER_EVENT_TYPE = 'pointerover';\nvar OUT_EVENT_TYPE = 'pointerout';\nvar LEAVE_EVENT_TYPE = 'pointerleave';\n/**\n * Hammer.js swallows 'move' events (for pointer/touch/mouse)\n * when the pointer is not down. This class sets up a handler\n * specifically for these events to work around this limitation.\n * Note that this could be extended to more intelligently handle\n * move events across input types, e.g. storing multiple simultaneous\n * pointer/touch events, calculating speed/direction, etc.\n */\n\nvar MoveInput =\n/*#__PURE__*/\nfunction () {\n  function MoveInput(element, callback) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, MoveInput);\n\n    this.element = element;\n    this.callback = callback;\n    this.pressed = false;\n    this.options = Object.assign({\n      enable: true\n    }, options);\n    this.enableMoveEvent = this.options.enable;\n    this.enableLeaveEvent = this.options.enable;\n    this.enableOutEvent = this.options.enable;\n    this.enableOverEvent = this.options.enable;\n    this.events = MOUSE_EVENTS.concat(options.events || []);\n    this.handleEvent = this.handleEvent.bind(this);\n    this.events.forEach(function (event) {\n      return element.addEventListener(event, _this.handleEvent);\n    });\n  }\n\n  _createClass(MoveInput, [{\n    key: \"destroy\",\n    value: function destroy() {\n      var _this2 = this;\n\n      this.events.forEach(function (event) {\n        return _this2.element.removeEventListener(event, _this2.handleEvent);\n      });\n    }\n    /**\n     * Enable this input (begin processing events)\n     * if the specified event type is among those handled by this input.\n     */\n\n  }, {\n    key: \"enableEventType\",\n    value: function enableEventType(eventType, enabled) {\n      if (eventType === MOVE_EVENT_TYPE) {\n        this.enableMoveEvent = enabled;\n      }\n\n      if (eventType === OVER_EVENT_TYPE) {\n        this.enableOverEvent = enabled;\n      }\n\n      if (eventType === OUT_EVENT_TYPE) {\n        this.enableOutEvent = enabled;\n      }\n\n      if (eventType === LEAVE_EVENT_TYPE) {\n        this.enableLeaveEvent = enabled;\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      this.handleOverEvent(event);\n      this.handleOutEvent(event);\n      this.handleLeaveEvent(event);\n      this.handleMoveEvent(event);\n    }\n  }, {\n    key: \"handleOverEvent\",\n    value: function handleOverEvent(event) {\n      if (this.enableOverEvent) {\n        if (event.type === 'mouseover') {\n          this.callback({\n            type: OVER_EVENT_TYPE,\n            srcEvent: event,\n            pointerType: 'mouse',\n            target: event.target\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleOutEvent\",\n    value: function handleOutEvent(event) {\n      if (this.enableOutEvent) {\n        if (event.type === 'mouseout') {\n          this.callback({\n            type: OUT_EVENT_TYPE,\n            srcEvent: event,\n            pointerType: 'mouse',\n            target: event.target\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleLeaveEvent\",\n    value: function handleLeaveEvent(event) {\n      if (this.enableLeaveEvent) {\n        if (event.type === 'mouseleave') {\n          this.callback({\n            type: LEAVE_EVENT_TYPE,\n            srcEvent: event,\n            pointerType: 'mouse',\n            target: event.target\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleMoveEvent\",\n    value: function handleMoveEvent(event) {\n      if (this.enableMoveEvent) {\n        switch (event.type) {\n          case 'mousedown':\n            if (event.button >= 0) {\n              // Button is down\n              this.pressed = true;\n            }\n\n            break;\n\n          case 'mousemove':\n            // Move events use `which` to track the button being pressed\n            if (event.which === 0) {\n              // Button is not down\n              this.pressed = false;\n            }\n\n            if (!this.pressed) {\n              // Drag events are emitted by hammer already\n              // we just need to emit the move event on hover\n              this.callback({\n                type: MOVE_EVENT_TYPE,\n                srcEvent: event,\n                pointerType: 'mouse',\n                target: event.target\n              });\n            }\n\n            break;\n\n          case 'mouseup':\n            this.pressed = false;\n            break;\n\n          default:\n        }\n      }\n    }\n  }]);\n\n  return MoveInput;\n}();\n\nexport { MoveInput as default };","import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/es6.object.assign\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\"; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { INPUT_EVENT_TYPES } from '../constants';\nvar KEY_EVENTS = INPUT_EVENT_TYPES.KEY_EVENTS;\nvar DOWN_EVENT_TYPE = 'keydown';\nvar UP_EVENT_TYPE = 'keyup';\n\nvar KeyInput =\n/*#__PURE__*/\nfunction () {\n  function KeyInput(element, callback) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, KeyInput);\n\n    this.element = element;\n    this.callback = callback;\n    this.options = Object.assign({\n      enable: true\n    }, options);\n    this.enableDownEvent = this.options.enable;\n    this.enableUpEvent = this.options.enable;\n    this.events = KEY_EVENTS.concat(options.events || []);\n    this.handleEvent = this.handleEvent.bind(this);\n    element.tabIndex = 1;\n    element.style.outline = 'none';\n    this.events.forEach(function (event) {\n      return element.addEventListener(event, _this.handleEvent);\n    });\n  }\n\n  _createClass(KeyInput, [{\n    key: \"destroy\",\n    value: function destroy() {\n      var _this2 = this;\n\n      this.events.forEach(function (event) {\n        return _this2.element.removeEventListener(event, _this2.handleEvent);\n      });\n    }\n    /**\n     * Enable this input (begin processing events)\n     * if the specified event type is among those handled by this input.\n     */\n\n  }, {\n    key: \"enableEventType\",\n    value: function enableEventType(eventType, enabled) {\n      if (eventType === DOWN_EVENT_TYPE) {\n        this.enableDownEvent = enabled;\n      }\n\n      if (eventType === UP_EVENT_TYPE) {\n        this.enableUpEvent = enabled;\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      // Ignore if focused on text input\n      var targetElement = event.target || event.srcElement;\n\n      if (targetElement.tagName === 'INPUT' && targetElement.type === 'text' || targetElement.tagName === 'TEXTAREA') {\n        return;\n      }\n\n      if (this.enableDownEvent && event.type === 'keydown') {\n        this.callback({\n          type: DOWN_EVENT_TYPE,\n          srcEvent: event,\n          key: event.key,\n          target: event.target\n        });\n      }\n\n      if (this.enableUpEvent && event.type === 'keyup') {\n        this.callback({\n          type: UP_EVENT_TYPE,\n          srcEvent: event,\n          key: event.key,\n          target: event.target\n        });\n      }\n    }\n  }]);\n\n  return KeyInput;\n}();\n\nexport { KeyInput as default };","import \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/es6.object.assign\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\"; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar EVENT_TYPE = 'contextmenu';\n\nvar ContextmenuInput =\n/*#__PURE__*/\nfunction () {\n  function ContextmenuInput(element, callback) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, ContextmenuInput);\n\n    this.element = element;\n    this.callback = callback;\n    this.options = Object.assign({\n      enable: true\n    }, options);\n    this.handleEvent = this.handleEvent.bind(this);\n    element.addEventListener('contextmenu', this.handleEvent);\n  }\n\n  _createClass(ContextmenuInput, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.element.removeEventListener('contextmenu', this.handleEvent);\n    }\n    /**\n     * Enable this input (begin processing events)\n     * if the specified event type is among those handled by this input.\n     */\n\n  }, {\n    key: \"enableEventType\",\n    value: function enableEventType(eventType, enabled) {\n      if (eventType === EVENT_TYPE) {\n        this.options.enable = enabled;\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      if (!this.options.enable) {\n        return;\n      }\n\n      this.callback({\n        type: EVENT_TYPE,\n        center: {\n          x: event.clientX,\n          y: event.clientY\n        },\n        srcEvent: event,\n        pointerType: 'mouse',\n        target: event.target\n      });\n    }\n  }]);\n\n  return ContextmenuInput;\n}();\n\nexport { ContextmenuInput as default };","import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-finite\";\n\n/* Constants */\nvar DOWN_EVENT = 1;\nvar MOVE_EVENT = 2;\nvar UP_EVENT = 4;\nvar MOUSE_EVENTS = {\n  pointerdown: DOWN_EVENT,\n  pointermove: MOVE_EVENT,\n  pointerup: UP_EVENT,\n  mousedown: DOWN_EVENT,\n  mousemove: MOVE_EVENT,\n  mouseup: UP_EVENT\n}; // MouseEvent.which https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\nvar MOUSE_EVENT_WHICH_LEFT = 1;\nvar MOUSE_EVENT_WHICH_MIDDLE = 2;\nvar MOUSE_EVENT_WHICH_RIGHT = 3; // MouseEvent.button https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\nvar MOUSE_EVENT_BUTTON_LEFT = 0;\nvar MOUSE_EVENT_BUTTON_MIDDLE = 1;\nvar MOUSE_EVENT_BUTTON_RIGHT = 2; // MouseEvent.buttons https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n\nvar MOUSE_EVENT_BUTTONS_LEFT_MASK = 1;\nvar MOUSE_EVENT_BUTTONS_RIGHT_MASK = 2;\nvar MOUSE_EVENT_BUTTONS_MIDDLE_MASK = 4;\n/**\n * Extract the involved mouse button\n */\n\nexport function whichButtons(event) {\n  var eventType = MOUSE_EVENTS[event.srcEvent.type];\n\n  if (!eventType) {\n    // Not a mouse evet\n    return null;\n  }\n\n  var _event$srcEvent = event.srcEvent,\n      buttons = _event$srcEvent.buttons,\n      button = _event$srcEvent.button,\n      which = _event$srcEvent.which;\n  var leftButton = false;\n  var middleButton = false;\n  var rightButton = false;\n\n  if ( // button is up, need to find out which one was pressed before\n  eventType === UP_EVENT || // moving but does not support `buttons` API\n  eventType === MOVE_EVENT && !Number.isFinite(buttons)) {\n    leftButton = which === MOUSE_EVENT_WHICH_LEFT;\n    middleButton = which === MOUSE_EVENT_WHICH_MIDDLE;\n    rightButton = which === MOUSE_EVENT_WHICH_RIGHT;\n  } else if (eventType === MOVE_EVENT) {\n    leftButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_LEFT_MASK);\n    middleButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_MIDDLE_MASK);\n    rightButton = Boolean(buttons & MOUSE_EVENT_BUTTONS_RIGHT_MASK);\n  } else if (eventType === DOWN_EVENT) {\n    leftButton = button === MOUSE_EVENT_BUTTON_LEFT;\n    middleButton = button === MOUSE_EVENT_BUTTON_MIDDLE;\n    rightButton = button === MOUSE_EVENT_BUTTON_RIGHT;\n  }\n\n  return {\n    leftButton: leftButton,\n    middleButton: middleButton,\n    rightButton: rightButton\n  };\n}\n/**\n * Calculate event position relative to the root element\n */\n\nexport function getOffsetPosition(event, rootElement) {\n  var srcEvent = event.srcEvent; // `center` is a hammer.js event property\n\n  if (!event.center && !Number.isFinite(srcEvent.clientX)) {\n    // Not a gestural event\n    return null;\n  }\n\n  var center = event.center || {\n    x: srcEvent.clientX,\n    y: srcEvent.clientY\n  };\n  var rect = rootElement.getBoundingClientRect(); // Fix scale for map affected by a CSS transform.\n  // See https://stackoverflow.com/a/26893663/3528533\n\n  var scaleX = rect.width / rootElement.offsetWidth;\n  var scaleY = rect.height / rootElement.offsetHeight; // Calculate center relative to the root element\n\n  var offsetCenter = {\n    x: (center.x - rect.left - rootElement.clientLeft) / scaleX,\n    y: (center.y - rect.top - rootElement.clientTop) / scaleY\n  };\n  return {\n    center: center,\n    offsetCenter: offsetCenter\n  };\n}","import \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { whichButtons, getOffsetPosition } from './event-utils';\n\nvar EventRegistrar =\n/*#__PURE__*/\nfunction () {\n  function EventRegistrar(eventManager) {\n    _classCallCheck(this, EventRegistrar);\n\n    this.eventManager = eventManager;\n    this.handlers = []; // Element -> handler map\n\n    this.handlersByElement = new Map();\n    this.handleEvent = this.handleEvent.bind(this);\n  }\n\n  _createClass(EventRegistrar, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.handlers.length === 0;\n    }\n  }, {\n    key: \"add\",\n    value: function add(type, handler) {\n      var srcElement = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'root';\n      var handlers = this.handlers,\n          handlersByElement = this.handlersByElement;\n\n      if (!handlersByElement.has(srcElement)) {\n        handlersByElement.set(srcElement, []);\n      }\n\n      var entry = {\n        type: type,\n        handler: handler,\n        srcElement: srcElement\n      };\n      handlers.push(entry);\n      handlersByElement.get(srcElement).push(entry);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(type, handler) {\n      var handlers = this.handlers,\n          handlersByElement = this.handlersByElement;\n\n      for (var i = handlers.length - 1; i >= 0; i--) {\n        var entry = handlers[i];\n\n        if (entry.type === type && entry.handler === handler) {\n          handlers.splice(i, 1);\n          var entries = handlersByElement.get(entry.srcElement);\n          entries.splice(entries.indexOf(entry), 1);\n\n          if (entries.length === 0) {\n            handlersByElement[\"delete\"](entry.srcElement);\n          }\n        }\n      }\n    }\n    /**\n     * Handles hammerjs event\n     */\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      if (this.isEmpty()) {\n        return;\n      }\n\n      var mjolnirEvent = this._normalizeEvent(event);\n\n      var target = event.srcEvent.target;\n\n      while (target && target !== mjolnirEvent.rootElement) {\n        this._emit(mjolnirEvent, target);\n\n        if (mjolnirEvent.handled) {\n          return;\n        }\n\n        target = target.parentNode;\n      }\n\n      this._emit(mjolnirEvent, 'root');\n    }\n    /**\n     * Invoke handlers on a particular element\n     */\n\n  }, {\n    key: \"_emit\",\n    value: function _emit(event, srcElement) {\n      var entries = this.handlersByElement.get(srcElement);\n\n      if (entries) {\n        var immediatePropagationStopped = false; // Prevents the current event from bubbling up\n\n        var stopPropagation = function stopPropagation() {\n          event.handled = true;\n        }; // Prevent any remaining listeners from being called\n\n\n        var stopImmediatePropagation = function stopImmediatePropagation() {\n          event.handled = true;\n          immediatePropagationStopped = true;\n        };\n\n        for (var i = 0; i < entries.length; i++) {\n          var _entries$i = entries[i],\n              type = _entries$i.type,\n              handler = _entries$i.handler;\n          handler(Object.assign({}, event, {\n            type: type,\n            stopPropagation: stopPropagation,\n            stopImmediatePropagation: stopImmediatePropagation\n          }));\n\n          if (immediatePropagationStopped) {\n            break;\n          }\n        }\n      }\n    }\n    /**\n     * Normalizes hammerjs and custom events to have predictable fields.\n     */\n\n  }, {\n    key: \"_normalizeEvent\",\n    value: function _normalizeEvent(event) {\n      var rootElement = this.eventManager.element;\n      return Object.assign({}, event, whichButtons(event), getOffsetPosition(event, rootElement), {\n        handled: false,\n        rootElement: rootElement\n      });\n    }\n  }]);\n\n  return EventRegistrar;\n}();\n\nexport { EventRegistrar as default };","import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/es6.object.assign\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\"; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Hammer from './utils/hammer';\nimport HammerManagerMock from './utils/hammer-manager-mock';\nimport WheelInput from './inputs/wheel-input';\nimport MoveInput from './inputs/move-input';\nimport KeyInput from './inputs/key-input';\nimport ContextmenuInput from './inputs/contextmenu-input';\nimport EventRegistrar from './utils/event-registrar';\nimport { BASIC_EVENT_ALIASES, EVENT_RECOGNIZER_MAP, GESTURE_EVENT_ALIASES, RECOGNIZERS, RECOGNIZER_COMPATIBLE_MAP, RECOGNIZER_FALLBACK_MAP } from './constants';\nvar DEFAULT_OPTIONS = {\n  // event handlers\n  events: null,\n  // custom recognizers\n  recognizers: null,\n  recognizerOptions: {},\n  // Manager class\n  Manager: Hammer ? Hammer.Manager : HammerManagerMock,\n  // allow browser default touch action\n  // https://github.com/uber/react-map-gl/issues/506\n  touchAction: 'none'\n}; // Unified API for subscribing to events about both\n// basic input events (e.g. 'mousemove', 'touchstart', 'wheel')\n// and gestural input (e.g. 'click', 'tap', 'panstart').\n// Delegates gesture related event registration and handling to Hammer.js.\n\nvar EventManager =\n/*#__PURE__*/\nfunction () {\n  function EventManager() {\n    var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, EventManager);\n\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n    this.events = new Map();\n    this._onBasicInput = this._onBasicInput.bind(this);\n    this._onOtherEvent = this._onOtherEvent.bind(this);\n    this.setElement(element); // Register all passed events.\n\n    var events = options.events;\n\n    if (events) {\n      this.on(events);\n    }\n  }\n\n  _createClass(EventManager, [{\n    key: \"setElement\",\n    value: function setElement(element) {\n      var _this = this;\n\n      if (this.element) {\n        // unregister all events\n        this.destroy();\n      }\n\n      this.element = element;\n\n      if (!element) {\n        return;\n      }\n\n      var options = this.options;\n      var ManagerClass = options.Manager;\n      this.manager = new ManagerClass(element, {\n        touchAction: options.touchAction,\n        recognizers: options.recognizers || RECOGNIZERS\n      }).on('hammer.input', this._onBasicInput);\n\n      if (!options.recognizers) {\n        // Set default recognize withs\n        // http://hammerjs.github.io/recognize-with/\n        Object.keys(RECOGNIZER_COMPATIBLE_MAP).forEach(function (name) {\n          var recognizer = _this.manager.get(name);\n\n          if (recognizer) {\n            RECOGNIZER_COMPATIBLE_MAP[name].forEach(function (otherName) {\n              recognizer.recognizeWith(otherName);\n            });\n          }\n        });\n      } // Set recognizer options\n\n\n      for (var recognizerName in options.recognizerOptions) {\n        var recognizer = this.manager.get(recognizerName);\n\n        if (recognizer) {\n          var recognizerOption = options.recognizerOptions[recognizerName]; // `enable` is managed by the event registrations\n\n          delete recognizerOption.enable;\n          recognizer.set(recognizerOption);\n        }\n      } // Handle events not handled by Hammer.js:\n      // - mouse wheel\n      // - pointer/touch/mouse move\n\n\n      this.wheelInput = new WheelInput(element, this._onOtherEvent, {\n        enable: false\n      });\n      this.moveInput = new MoveInput(element, this._onOtherEvent, {\n        enable: false\n      });\n      this.keyInput = new KeyInput(element, this._onOtherEvent, {\n        enable: false\n      });\n      this.contextmenuInput = new ContextmenuInput(element, this._onOtherEvent, {\n        enable: false\n      }); // Register all existing events\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.events[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              eventAlias = _step$value[0],\n              eventRegistrar = _step$value[1];\n\n          if (!eventRegistrar.isEmpty()) {\n            // Enable recognizer for this event.\n            this._toggleRecognizer(eventRegistrar.recognizerName, true);\n\n            this.manager.on(eventAlias, eventRegistrar.handleEvent);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    } // Tear down internal event management implementations.\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.element) {\n        // wheelInput etc. are created in setElement() and therefore\n        // cannot exist if there is no element\n        this.wheelInput.destroy();\n        this.moveInput.destroy();\n        this.keyInput.destroy();\n        this.contextmenuInput.destroy();\n        this.manager.destroy();\n        this.wheelInput = null;\n        this.moveInput = null;\n        this.keyInput = null;\n        this.contextmenuInput = null;\n        this.manager = null;\n        this.element = null;\n      }\n    } // Register an event handler function to be called on `event`.\n\n  }, {\n    key: \"on\",\n    value: function on(event, handler, srcElement) {\n      if (typeof event === 'string') {\n        this._addEventHandler(event, handler, srcElement);\n      } else {\n        srcElement = handler; // If `event` is a map, call `on()` for each entry.\n\n        for (var eventName in event) {\n          this._addEventHandler(eventName, event[eventName], srcElement);\n        }\n      }\n    }\n    /**\n     * Deregister a previously-registered event handler.\n     * @param {string|Object} event   An event name (String) or map of event names to handlers\n     * @param {Function} [handler]    The function to be called on `event`.\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(event, handler) {\n      if (typeof event === 'string') {\n        this._removeEventHandler(event, handler);\n      } else {\n        // If `event` is a map, call `off()` for each entry.\n        for (var eventName in event) {\n          this._removeEventHandler(eventName, event[eventName]);\n        }\n      }\n    }\n    /*\n     * Enable/disable recognizer for the given event\n     */\n\n  }, {\n    key: \"_toggleRecognizer\",\n    value: function _toggleRecognizer(name, enabled) {\n      var manager = this.manager;\n\n      if (!manager) {\n        return;\n      }\n\n      var recognizer = manager.get(name);\n\n      if (recognizer && recognizer.options.enable !== enabled) {\n        recognizer.set({\n          enable: enabled\n        });\n        var fallbackRecognizers = RECOGNIZER_FALLBACK_MAP[name];\n\n        if (fallbackRecognizers && !this.options.recognizers) {\n          // Set default require failures\n          // http://hammerjs.github.io/require-failure/\n          fallbackRecognizers.forEach(function (otherName) {\n            var otherRecognizer = manager.get(otherName);\n\n            if (enabled) {\n              // Wait for this recognizer to fail\n              otherRecognizer.requireFailure(name);\n              /**\n               * This seems to be a bug in hammerjs:\n               * requireFailure() adds both ways\n               * dropRequireFailure() only drops one way\n               * https://github.com/hammerjs/hammer.js/blob/master/src/recognizerjs/\n                 recognizer-constructor.js#L136\n               */\n\n              recognizer.dropRequireFailure(otherName);\n            } else {\n              // Do not wait for this recognizer to fail\n              otherRecognizer.dropRequireFailure(name);\n            }\n          });\n        }\n      }\n\n      this.wheelInput.enableEventType(name, enabled);\n      this.moveInput.enableEventType(name, enabled);\n      this.keyInput.enableEventType(name, enabled);\n      this.contextmenuInput.enableEventType(name, enabled);\n    }\n    /**\n     * Process the event registration for a single event + handler.\n     */\n\n  }, {\n    key: \"_addEventHandler\",\n    value: function _addEventHandler(event, handler, srcElement) {\n      var manager = this.manager,\n          events = this.events; // Alias to a recognized gesture as necessary.\n\n      var eventAlias = GESTURE_EVENT_ALIASES[event] || event;\n      var eventRegistrar = events.get(eventAlias);\n\n      if (!eventRegistrar) {\n        eventRegistrar = new EventRegistrar(this);\n        events.set(eventAlias, eventRegistrar); // Enable recognizer for this event.\n\n        eventRegistrar.recognizerName = EVENT_RECOGNIZER_MAP[eventAlias] || eventAlias; // Listen to the event\n\n        if (manager) {\n          manager.on(eventAlias, eventRegistrar.handleEvent);\n        }\n      }\n\n      this._toggleRecognizer(eventRegistrar.recognizerName, true);\n\n      eventRegistrar.add(event, handler, srcElement);\n    }\n    /**\n     * Process the event deregistration for a single event + handler.\n     */\n\n  }, {\n    key: \"_removeEventHandler\",\n    value: function _removeEventHandler(event, handler) {\n      var events = this.events; // Alias to a recognized gesture as necessary.\n\n      var eventAlias = GESTURE_EVENT_ALIASES[event] || event;\n      var eventRegistrar = events.get(eventAlias);\n\n      if (!eventRegistrar) {\n        return;\n      }\n\n      eventRegistrar.remove(event, handler);\n\n      if (eventRegistrar.isEmpty()) {\n        var recognizerName = eventRegistrar.recognizerName; // Disable recognizer if no more handlers are attached to its events\n\n        var isRecognizerUsed = false;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = events.values()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var eh = _step2.value;\n\n            if (eh.recognizerName === recognizerName && !eh.isEmpty()) {\n              isRecognizerUsed = true;\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        if (!isRecognizerUsed) {\n          this._toggleRecognizer(recognizerName, false);\n        }\n      }\n    }\n    /**\n     * Handle basic events using the 'hammer.input' Hammer.js API:\n     * Before running Recognizers, Hammer emits a 'hammer.input' event\n     * with the basic event info. This function emits all basic events\n     * aliased to the \"class\" of event received.\n     * See constants.BASIC_EVENT_CLASSES basic event class definitions.\n     */\n\n  }, {\n    key: \"_onBasicInput\",\n    value: function _onBasicInput(event) {\n      var srcEvent = event.srcEvent;\n      var alias = BASIC_EVENT_ALIASES[srcEvent.type];\n\n      if (alias) {\n        // fire all events aliased to srcEvent.type\n        this.manager.emit(alias, event);\n      }\n    }\n    /**\n     * Handle events not supported by Hammer.js,\n     * and pipe back out through same (Hammer) channel used by other events.\n     */\n\n  }, {\n    key: \"_onOtherEvent\",\n    value: function _onOtherEvent(event) {\n      // console.log('onotherevent', event.type, event)\n      this.manager.emit(event.type, event);\n    }\n  }]);\n\n  return EventManager;\n}();\n\nexport { EventManager as default };","// Hammer.Manager mock for use in environments without `document` / `window`.\nexport default function HammerManagerMock(m) {\n  var instance = {};\n\n  var chainedNoop = function chainedNoop() {\n    return instance;\n  };\n\n  instance.get = function () {\n    return null;\n  };\n\n  instance.set = chainedNoop;\n  instance.on = chainedNoop;\n  instance.off = chainedNoop;\n  instance.destroy = chainedNoop;\n  instance.emit = chainedNoop;\n  return instance;\n}","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nexport { default as EventManager } from './event-manager';","require(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\n/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function (window, document, exportName, undefined) {\n  'use strict';\n\n  var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n  var TEST_ELEMENT = document.createElement('div');\n  var TYPE_FUNCTION = 'function';\n  var round = Math.round;\n  var abs = Math.abs;\n  var now = Date.now;\n  /**\n   * set a timeout with a given scope\n   * @param {Function} fn\n   * @param {Number} timeout\n   * @param {Object} context\n   * @returns {number}\n   */\n\n  function setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n  }\n  /**\n   * if the argument is an array, we want to execute the fn on each entry\n   * if it aint an array we don't want to do a thing.\n   * this is used by all the methods that accept a single and array argument.\n   * @param {*|Array} arg\n   * @param {String} fn\n   * @param {Object} [context]\n   * @returns {Boolean}\n   */\n\n\n  function invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n      each(arg, context[fn], context);\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * walk objects and arrays\n   * @param {Object} obj\n   * @param {Function} iterator\n   * @param {Object} context\n   */\n\n\n  function each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n      return;\n    }\n\n    if (obj.forEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n      i = 0;\n\n      while (i < obj.length) {\n        iterator.call(context, obj[i], i, obj);\n        i++;\n      }\n    } else {\n      for (i in obj) {\n        obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n      }\n    }\n  }\n  /**\n   * wrap a method with a deprecation warning and stack trace\n   * @param {Function} method\n   * @param {String} name\n   * @param {String} message\n   * @returns {Function} A new function wrapping the supplied method.\n   */\n\n\n  function deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function () {\n      var e = new Error('get-stack-trace');\n      var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '').replace(/^\\s+at\\s+/gm, '').replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n      var log = window.console && (window.console.warn || window.console.log);\n\n      if (log) {\n        log.call(window.console, deprecationMessage, stack);\n      }\n\n      return method.apply(this, arguments);\n    };\n  }\n  /**\n   * extend object.\n   * means that properties in dest will be overwritten by the ones in src.\n   * @param {Object} target\n   * @param {...Object} objects_to_assign\n   * @returns {Object} target\n   */\n\n\n  var assign;\n\n  if (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var output = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (source.hasOwnProperty(nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n\n      return output;\n    };\n  } else {\n    assign = Object.assign;\n  }\n  /**\n   * extend object.\n   * means that properties in dest will be overwritten by the ones in src.\n   * @param {Object} dest\n   * @param {Object} src\n   * @param {Boolean} [merge=false]\n   * @returns {Object} dest\n   */\n\n\n  var extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n\n    while (i < keys.length) {\n      if (!merge || merge && dest[keys[i]] === undefined) {\n        dest[keys[i]] = src[keys[i]];\n      }\n\n      i++;\n    }\n\n    return dest;\n  }, 'extend', 'Use `assign`.');\n  /**\n   * merge the values from src in the dest.\n   * means that properties that exist in dest will not be overwritten by src\n   * @param {Object} dest\n   * @param {Object} src\n   * @returns {Object} dest\n   */\n\n  var merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n  }, 'merge', 'Use `assign`.');\n  /**\n   * simple class inheritance\n   * @param {Function} child\n   * @param {Function} base\n   * @param {Object} [properties]\n   */\n\n  function inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n      assign(childP, properties);\n    }\n  }\n  /**\n   * simple function bind\n   * @param {Function} fn\n   * @param {Object} context\n   * @returns {Function}\n   */\n\n\n  function bindFn(fn, context) {\n    return function boundFn() {\n      return fn.apply(context, arguments);\n    };\n  }\n  /**\n   * let a boolean value also be a function that must return a boolean\n   * this first item in args will be used as the context\n   * @param {Boolean|Function} val\n   * @param {Array} [args]\n   * @returns {Boolean}\n   */\n\n\n  function boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n      return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n\n    return val;\n  }\n  /**\n   * use the val2 when val1 is undefined\n   * @param {*} val1\n   * @param {*} val2\n   * @returns {*}\n   */\n\n\n  function ifUndefined(val1, val2) {\n    return val1 === undefined ? val2 : val1;\n  }\n  /**\n   * addEventListener with multiple events at once\n   * @param {EventTarget} target\n   * @param {String} types\n   * @param {Function} handler\n   */\n\n\n  function addEventListeners(target, types, handler) {\n    each(splitStr(types), function (type) {\n      target.addEventListener(type, handler, false);\n    });\n  }\n  /**\n   * removeEventListener with multiple events at once\n   * @param {EventTarget} target\n   * @param {String} types\n   * @param {Function} handler\n   */\n\n\n  function removeEventListeners(target, types, handler) {\n    each(splitStr(types), function (type) {\n      target.removeEventListener(type, handler, false);\n    });\n  }\n  /**\n   * find if a node is in the given parent\n   * @method hasParent\n   * @param {HTMLElement} node\n   * @param {HTMLElement} parent\n   * @return {Boolean} found\n   */\n\n\n  function hasParent(node, parent) {\n    while (node) {\n      if (node == parent) {\n        return true;\n      }\n\n      node = node.parentNode;\n    }\n\n    return false;\n  }\n  /**\n   * small indexOf wrapper\n   * @param {String} str\n   * @param {String} find\n   * @returns {Boolean} found\n   */\n\n\n  function inStr(str, find) {\n    return str.indexOf(find) > -1;\n  }\n  /**\n   * split string on whitespace\n   * @param {String} str\n   * @returns {Array} words\n   */\n\n\n  function splitStr(str) {\n    return str.trim().split(/\\s+/g);\n  }\n  /**\n   * find if a array contains the object using indexOf or a simple polyFill\n   * @param {Array} src\n   * @param {String} find\n   * @param {String} [findByKey]\n   * @return {Boolean|Number} false when not found, or the index\n   */\n\n\n  function inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n      return src.indexOf(find);\n    } else {\n      var i = 0;\n\n      while (i < src.length) {\n        if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {\n          return i;\n        }\n\n        i++;\n      }\n\n      return -1;\n    }\n  }\n  /**\n   * convert array-like objects to real arrays\n   * @param {Object} obj\n   * @returns {Array}\n   */\n\n\n  function toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n  }\n  /**\n   * unique array with objects based on a key (like 'id') or just by the array's value\n   * @param {Array} src [{id:1},{id:2},{id:1}]\n   * @param {String} [key]\n   * @param {Boolean} [sort=False]\n   * @returns {Array} [{id:1},{id:2}]\n   */\n\n\n  function uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n      var val = key ? src[i][key] : src[i];\n\n      if (inArray(values, val) < 0) {\n        results.push(src[i]);\n      }\n\n      values[i] = val;\n      i++;\n    }\n\n    if (sort) {\n      if (!key) {\n        results = results.sort();\n      } else {\n        results = results.sort(function sortUniqueArray(a, b) {\n          return a[key] > b[key];\n        });\n      }\n    }\n\n    return results;\n  }\n  /**\n   * get the prefixed property\n   * @param {Object} obj\n   * @param {String} property\n   * @returns {String|Undefined} prefixed\n   */\n\n\n  function prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n    var i = 0;\n\n    while (i < VENDOR_PREFIXES.length) {\n      prefix = VENDOR_PREFIXES[i];\n      prop = prefix ? prefix + camelProp : property;\n\n      if (prop in obj) {\n        return prop;\n      }\n\n      i++;\n    }\n\n    return undefined;\n  }\n  /**\n   * get a unique id\n   * @returns {number} uniqueId\n   */\n\n\n  var _uniqueId = 1;\n\n  function uniqueId() {\n    return _uniqueId++;\n  }\n  /**\n   * get the window object of an element\n   * @param {HTMLElement} element\n   * @returns {DocumentView|Window}\n   */\n\n\n  function getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return doc.defaultView || doc.parentWindow || window;\n  }\n\n  var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n  var SUPPORT_TOUCH = 'ontouchstart' in window;\n  var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\n  var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n  var INPUT_TYPE_TOUCH = 'touch';\n  var INPUT_TYPE_PEN = 'pen';\n  var INPUT_TYPE_MOUSE = 'mouse';\n  var INPUT_TYPE_KINECT = 'kinect';\n  var COMPUTE_INTERVAL = 25;\n  var INPUT_START = 1;\n  var INPUT_MOVE = 2;\n  var INPUT_END = 4;\n  var INPUT_CANCEL = 8;\n  var DIRECTION_NONE = 1;\n  var DIRECTION_LEFT = 2;\n  var DIRECTION_RIGHT = 4;\n  var DIRECTION_UP = 8;\n  var DIRECTION_DOWN = 16;\n  var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n  var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n  var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n  var PROPS_XY = ['x', 'y'];\n  var PROPS_CLIENT_XY = ['clientX', 'clientY'];\n  /**\n   * create new input type manager\n   * @param {Manager} manager\n   * @param {Function} callback\n   * @returns {Input}\n   * @constructor\n   */\n\n  function Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget; // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n\n    this.domHandler = function (ev) {\n      if (boolOrFn(manager.options.enable, [manager])) {\n        self.handler(ev);\n      }\n    };\n\n    this.init();\n  }\n\n  Input.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function handler() {},\n\n    /**\n     * bind the events\n     */\n    init: function init() {\n      this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n      this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n      this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function destroy() {\n      this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n      this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n      this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n  };\n  /**\n   * create new input type manager\n   * called by the Manager constructor\n   * @param {Hammer} manager\n   * @returns {Input}\n   */\n\n  function createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n      Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n      Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n      Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n      Type = MouseInput;\n    } else {\n      Type = TouchMouseInput;\n    }\n\n    return new Type(manager, inputHandler);\n  }\n  /**\n   * handle input events\n   * @param {Manager} manager\n   * @param {String} eventType\n   * @param {Object} input\n   */\n\n\n  function inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n    var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n      manager.session = {};\n    } // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n\n\n    input.eventType = eventType; // compute scale, rotation etc\n\n    computeInputData(manager, input); // emit secret event\n\n    manager.emit('hammer.input', input);\n    manager.recognize(input);\n    manager.session.prevInput = input;\n  }\n  /**\n   * extend the data with some usable properties like scale, rotate, velocity etc\n   * @param {Object} manager\n   * @param {Object} input\n   */\n\n\n  function computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length; // store the first input to calculate the distance and direction\n\n    if (!session.firstInput) {\n      session.firstInput = simpleCloneInputData(input);\n    } // to compute scale and rotation we need to store the multiple touches\n\n\n    if (pointersLength > 1 && !session.firstMultiple) {\n      session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n      session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n    input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;\n    computeIntervalInputData(session, input); // find the correct target\n\n    var target = manager.element;\n\n    if (hasParent(input.srcEvent.target, target)) {\n      target = input.srcEvent.target;\n    }\n\n    input.target = target;\n  }\n\n  function computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n      prevDelta = session.prevDelta = {\n        x: prevInput.deltaX || 0,\n        y: prevInput.deltaY || 0\n      };\n      offset = session.offsetDelta = {\n        x: center.x,\n        y: center.y\n      };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n  }\n  /**\n   * velocity is calculated every x ms\n   * @param {Object} session\n   * @param {Object} input\n   */\n\n\n  function computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity,\n        velocityX,\n        velocityY,\n        direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n      var deltaX = input.deltaX - last.deltaX;\n      var deltaY = input.deltaY - last.deltaY;\n      var v = getVelocity(deltaTime, deltaX, deltaY);\n      velocityX = v.x;\n      velocityY = v.y;\n      velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n      direction = getDirection(deltaX, deltaY);\n      session.lastInterval = input;\n    } else {\n      // use latest velocity info if it doesn't overtake a minimum period\n      velocity = last.velocity;\n      velocityX = last.velocityX;\n      velocityY = last.velocityY;\n      direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n  }\n  /**\n   * create a simple clone from the input used for storage of firstInput and firstMultiple\n   * @param {Object} input\n   * @returns {Object} clonedInputData\n   */\n\n\n  function simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n\n    while (i < input.pointers.length) {\n      pointers[i] = {\n        clientX: round(input.pointers[i].clientX),\n        clientY: round(input.pointers[i].clientY)\n      };\n      i++;\n    }\n\n    return {\n      timeStamp: now(),\n      pointers: pointers,\n      center: getCenter(pointers),\n      deltaX: input.deltaX,\n      deltaY: input.deltaY\n    };\n  }\n  /**\n   * get the center of all the pointers\n   * @param {Array} pointers\n   * @return {Object} center contains `x` and `y` properties\n   */\n\n\n  function getCenter(pointers) {\n    var pointersLength = pointers.length; // no need to loop when only one touch\n\n    if (pointersLength === 1) {\n      return {\n        x: round(pointers[0].clientX),\n        y: round(pointers[0].clientY)\n      };\n    }\n\n    var x = 0,\n        y = 0,\n        i = 0;\n\n    while (i < pointersLength) {\n      x += pointers[i].clientX;\n      y += pointers[i].clientY;\n      i++;\n    }\n\n    return {\n      x: round(x / pointersLength),\n      y: round(y / pointersLength)\n    };\n  }\n  /**\n   * calculate the velocity between two points. unit is in px per ms.\n   * @param {Number} deltaTime\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Object} velocity `x` and `y`\n   */\n\n\n  function getVelocity(deltaTime, x, y) {\n    return {\n      x: x / deltaTime || 0,\n      y: y / deltaTime || 0\n    };\n  }\n  /**\n   * get the direction between two points\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Number} direction\n   */\n\n\n  function getDirection(x, y) {\n    if (x === y) {\n      return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n      return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n  }\n  /**\n   * calculate the absolute distance between two points\n   * @param {Object} p1 {x, y}\n   * @param {Object} p2 {x, y}\n   * @param {Array} [props] containing x and y keys\n   * @return {Number} distance\n   */\n\n\n  function getDistance(p1, p2, props) {\n    if (!props) {\n      props = PROPS_XY;\n    }\n\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.sqrt(x * x + y * y);\n  }\n  /**\n   * calculate the angle between two coordinates\n   * @param {Object} p1\n   * @param {Object} p2\n   * @param {Array} [props] containing x and y keys\n   * @return {Number} angle\n   */\n\n\n  function getAngle(p1, p2, props) {\n    if (!props) {\n      props = PROPS_XY;\n    }\n\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n  }\n  /**\n   * calculate the rotation degrees between two pointersets\n   * @param {Array} start array of pointers\n   * @param {Array} end array of pointers\n   * @return {Number} rotation\n   */\n\n\n  function getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n  }\n  /**\n   * calculate the scale factor between two pointersets\n   * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n   * @param {Array} start array of pointers\n   * @param {Array} end array of pointers\n   * @return {Number} scale\n   */\n\n\n  function getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n  }\n\n  var MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n  };\n  var MOUSE_ELEMENT_EVENTS = 'mousedown';\n  var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n  /**\n   * Mouse events input\n   * @constructor\n   * @extends Input\n   */\n\n  function MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n  }\n\n  inherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n      var eventType = MOUSE_INPUT_MAP[ev.type]; // on start we want to have the left mouse button down\n\n      if (eventType & INPUT_START && ev.button === 0) {\n        this.pressed = true;\n      }\n\n      if (eventType & INPUT_MOVE && ev.which !== 1) {\n        eventType = INPUT_END;\n      } // mouse must be down\n\n\n      if (!this.pressed) {\n        return;\n      }\n\n      if (eventType & INPUT_END) {\n        this.pressed = false;\n      }\n\n      this.callback(this.manager, eventType, {\n        pointers: [ev],\n        changedPointers: [ev],\n        pointerType: INPUT_TYPE_MOUSE,\n        srcEvent: ev\n      });\n    }\n  });\n  var POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n  }; // in IE10 the pointer types is defined as an enum\n\n  var IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n\n  };\n  var POINTER_ELEMENT_EVENTS = 'pointerdown';\n  var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel'; // IE10 has prefixed support, and case-sensitive\n\n  if (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n  }\n  /**\n   * Pointer events input\n   * @constructor\n   * @extends Input\n   */\n\n\n  function PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n    Input.apply(this, arguments);\n    this.store = this.manager.session.pointerEvents = [];\n  }\n\n  inherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n      var store = this.store;\n      var removePointer = false;\n      var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n      var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n      var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n      var isTouch = pointerType == INPUT_TYPE_TOUCH; // get index of the event in the store\n\n      var storeIndex = inArray(store, ev.pointerId, 'pointerId'); // start and mouse must be down\n\n      if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n        if (storeIndex < 0) {\n          store.push(ev);\n          storeIndex = store.length - 1;\n        }\n      } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        removePointer = true;\n      } // it not found, so the pointer hasn't been down (so it's probably a hover)\n\n\n      if (storeIndex < 0) {\n        return;\n      } // update the event in the store\n\n\n      store[storeIndex] = ev;\n      this.callback(this.manager, eventType, {\n        pointers: store,\n        changedPointers: [ev],\n        pointerType: pointerType,\n        srcEvent: ev\n      });\n\n      if (removePointer) {\n        // remove from the store\n        store.splice(storeIndex, 1);\n      }\n    }\n  });\n  var SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n  };\n  var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n  var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n  /**\n   * Touch events input\n   * @constructor\n   * @extends Input\n   */\n\n  function SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n    Input.apply(this, arguments);\n  }\n\n  inherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n      var type = SINGLE_TOUCH_INPUT_MAP[ev.type]; // should we handle the touch events?\n\n      if (type === INPUT_START) {\n        this.started = true;\n      }\n\n      if (!this.started) {\n        return;\n      }\n\n      var touches = normalizeSingleTouches.call(this, ev, type); // when done, reset the started state\n\n      if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n        this.started = false;\n      }\n\n      this.callback(this.manager, type, {\n        pointers: touches[0],\n        changedPointers: touches[1],\n        pointerType: INPUT_TYPE_TOUCH,\n        srcEvent: ev\n      });\n    }\n  });\n  /**\n   * @this {TouchInput}\n   * @param {Object} ev\n   * @param {Number} type flag\n   * @returns {undefined|Array} [all, changed]\n   */\n\n  function normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n      all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n  }\n\n  var TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n  };\n  var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n  /**\n   * Multi-user touch events input\n   * @constructor\n   * @extends Input\n   */\n\n  function TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n    Input.apply(this, arguments);\n  }\n\n  inherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n      var type = TOUCH_INPUT_MAP[ev.type];\n      var touches = getTouches.call(this, ev, type);\n\n      if (!touches) {\n        return;\n      }\n\n      this.callback(this.manager, type, {\n        pointers: touches[0],\n        changedPointers: touches[1],\n        pointerType: INPUT_TYPE_TOUCH,\n        srcEvent: ev\n      });\n    }\n  });\n  /**\n   * @this {TouchInput}\n   * @param {Object} ev\n   * @param {Number} type flag\n   * @returns {undefined|Array} [all, changed]\n   */\n\n  function getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds; // when there is only one touch, the process can be simplified\n\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n      targetIds[allTouches[0].identifier] = true;\n      return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target; // get target touches from touches\n\n    targetTouches = allTouches.filter(function (touch) {\n      return hasParent(touch.target, target);\n    }); // collect touches\n\n    if (type === INPUT_START) {\n      i = 0;\n\n      while (i < targetTouches.length) {\n        targetIds[targetTouches[i].identifier] = true;\n        i++;\n      }\n    } // filter changed touches to only contain touches that exist in the collected target ids\n\n\n    i = 0;\n\n    while (i < changedTouches.length) {\n      if (targetIds[changedTouches[i].identifier]) {\n        changedTargetTouches.push(changedTouches[i]);\n      } // cleanup removed touches\n\n\n      if (type & (INPUT_END | INPUT_CANCEL)) {\n        delete targetIds[changedTouches[i].identifier];\n      }\n\n      i++;\n    }\n\n    if (!changedTargetTouches.length) {\n      return;\n    }\n\n    return [// merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n    uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];\n  }\n  /**\n   * Combined touch and mouse input\n   *\n   * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n   * This because touch devices also emit mouse events while doing a touch.\n   *\n   * @constructor\n   * @extends Input\n   */\n\n\n  var DEDUP_TIMEOUT = 2500;\n  var DEDUP_DISTANCE = 25;\n\n  function TouchMouseInput() {\n    Input.apply(this, arguments);\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n    this.primaryTouch = null;\n    this.lastTouches = [];\n  }\n\n  inherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n      var isTouch = inputData.pointerType == INPUT_TYPE_TOUCH,\n          isMouse = inputData.pointerType == INPUT_TYPE_MOUSE;\n\n      if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n        return;\n      } // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n\n\n      if (isTouch) {\n        recordTouches.call(this, inputEvent, inputData);\n      } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n        return;\n      }\n\n      this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n      this.touch.destroy();\n      this.mouse.destroy();\n    }\n  });\n\n  function recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n      this.primaryTouch = eventData.changedPointers[0].identifier;\n      setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n      setLastTouch.call(this, eventData);\n    }\n  }\n\n  function setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n      var lastTouch = {\n        x: touch.clientX,\n        y: touch.clientY\n      };\n      this.lastTouches.push(lastTouch);\n      var lts = this.lastTouches;\n\n      var removeLastTouch = function removeLastTouch() {\n        var i = lts.indexOf(lastTouch);\n\n        if (i > -1) {\n          lts.splice(i, 1);\n        }\n      };\n\n      setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n  }\n\n  function isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX,\n        y = eventData.srcEvent.clientY;\n\n    for (var i = 0; i < this.lastTouches.length; i++) {\n      var t = this.lastTouches[i];\n      var dx = Math.abs(x - t.x),\n          dy = Math.abs(y - t.y);\n\n      if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n  var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined; // magical touchAction value\n\n  var TOUCH_ACTION_COMPUTE = 'compute';\n  var TOUCH_ACTION_AUTO = 'auto';\n  var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n\n  var TOUCH_ACTION_NONE = 'none';\n  var TOUCH_ACTION_PAN_X = 'pan-x';\n  var TOUCH_ACTION_PAN_Y = 'pan-y';\n  var TOUCH_ACTION_MAP = getTouchActionProps();\n  /**\n   * Touch Action\n   * sets the touchAction property or uses the js alternative\n   * @param {Manager} manager\n   * @param {String} value\n   * @constructor\n   */\n\n  function TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n  }\n\n  TouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function set(value) {\n      // find out the touch-action by the event handlers\n      if (value == TOUCH_ACTION_COMPUTE) {\n        value = this.compute();\n      }\n\n      if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n        this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n      }\n\n      this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function update() {\n      this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function compute() {\n      var actions = [];\n      each(this.manager.recognizers, function (recognizer) {\n        if (boolOrFn(recognizer.options.enable, [recognizer])) {\n          actions = actions.concat(recognizer.getTouchAction());\n        }\n      });\n      return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function preventDefaults(input) {\n      var srcEvent = input.srcEvent;\n      var direction = input.offsetDirection; // if the touch action did prevented once this session\n\n      if (this.manager.session.prevented) {\n        srcEvent.preventDefault();\n        return;\n      }\n\n      var actions = this.actions;\n      var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n      var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n      var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n      if (hasNone) {\n        //do not prevent defaults if this is a tap gesture\n        var isTapPointer = input.pointers.length === 1;\n        var isTapMovement = input.distance < 2;\n        var isTapTouchTime = input.deltaTime < 250;\n\n        if (isTapPointer && isTapMovement && isTapTouchTime) {\n          return;\n        }\n      }\n\n      if (hasPanX && hasPanY) {\n        // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n        return;\n      }\n\n      if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {\n        return this.preventSrc(srcEvent);\n      }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function preventSrc(srcEvent) {\n      this.manager.session.prevented = true;\n      srcEvent.preventDefault();\n    }\n  };\n  /**\n   * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n   * @param {String} actions\n   * @returns {*}\n   */\n\n  function cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n      return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y); // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n\n    if (hasPanX && hasPanY) {\n      return TOUCH_ACTION_NONE;\n    } // pan-x OR pan-y\n\n\n    if (hasPanX || hasPanY) {\n      return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    } // manipulation\n\n\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n      return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n  }\n\n  function getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n      return false;\n    }\n\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (val) {\n      // If css.supports is not supported but there is native touch-action assume it supports\n      // all values. This is the case for IE 10 and 11.\n      touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n  }\n  /**\n   * Recognizer flow explained; *\n   * All recognizers have the initial state of POSSIBLE when a input session starts.\n   * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n   * Example session for mouse-input: mousedown -> mousemove -> mouseup\n   *\n   * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n   * which determines with state it should be.\n   *\n   * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n   * POSSIBLE to give it another change on the next cycle.\n   *\n   *               Possible\n   *                  |\n   *            +-----+---------------+\n   *            |                     |\n   *      +-----+-----+               |\n   *      |           |               |\n   *   Failed      Cancelled          |\n   *                          +-------+------+\n   *                          |              |\n   *                      Recognized       Began\n   *                                         |\n   *                                      Changed\n   *                                         |\n   *                                  Ended/Recognized\n   */\n\n\n  var STATE_POSSIBLE = 1;\n  var STATE_BEGAN = 2;\n  var STATE_CHANGED = 4;\n  var STATE_ENDED = 8;\n  var STATE_RECOGNIZED = STATE_ENDED;\n  var STATE_CANCELLED = 16;\n  var STATE_FAILED = 32;\n  /**\n   * Recognizer\n   * Every recognizer needs to extend from this class.\n   * @constructor\n   * @param {Object} options\n   */\n\n  function Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n    this.id = uniqueId();\n    this.manager = null; // default is enable true\n\n    this.options.enable = ifUndefined(this.options.enable, true);\n    this.state = STATE_POSSIBLE;\n    this.simultaneous = {};\n    this.requireFail = [];\n  }\n\n  Recognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function set(options) {\n      assign(this.options, options); // also update the touchAction, in case something changed about the directions/enabled state\n\n      this.manager && this.manager.touchAction.update();\n      return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function recognizeWith(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n        return this;\n      }\n\n      var simultaneous = this.simultaneous;\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\n      if (!simultaneous[otherRecognizer.id]) {\n        simultaneous[otherRecognizer.id] = otherRecognizer;\n        otherRecognizer.recognizeWith(this);\n      }\n\n      return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function dropRecognizeWith(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n        return this;\n      }\n\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n      delete this.simultaneous[otherRecognizer.id];\n      return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function requireFailure(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n        return this;\n      }\n\n      var requireFail = this.requireFail;\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\n      if (inArray(requireFail, otherRecognizer) === -1) {\n        requireFail.push(otherRecognizer);\n        otherRecognizer.requireFailure(this);\n      }\n\n      return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function dropRequireFailure(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n        return this;\n      }\n\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n      var index = inArray(this.requireFail, otherRecognizer);\n\n      if (index > -1) {\n        this.requireFail.splice(index, 1);\n      }\n\n      return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function hasRequireFailures() {\n      return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function canRecognizeWith(otherRecognizer) {\n      return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function emit(input) {\n      var self = this;\n      var state = this.state;\n\n      function emit(event) {\n        self.manager.emit(event, input);\n      } // 'panstart' and 'panmove'\n\n\n      if (state < STATE_ENDED) {\n        emit(self.options.event + stateStr(state));\n      }\n\n      emit(self.options.event); // simple 'eventName' events\n\n      if (input.additionalEvent) {\n        // additional event(panleft, panright, pinchin, pinchout...)\n        emit(input.additionalEvent);\n      } // panend and pancancel\n\n\n      if (state >= STATE_ENDED) {\n        emit(self.options.event + stateStr(state));\n      }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function tryEmit(input) {\n      if (this.canEmit()) {\n        return this.emit(input);\n      } // it's failing anyway\n\n\n      this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function canEmit() {\n      var i = 0;\n\n      while (i < this.requireFail.length) {\n        if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n          return false;\n        }\n\n        i++;\n      }\n\n      return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function recognize(inputData) {\n      // make a new copy of the inputData\n      // so we can change the inputData without messing up the other recognizers\n      var inputDataClone = assign({}, inputData); // is is enabled and allow recognizing?\n\n      if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n        this.reset();\n        this.state = STATE_FAILED;\n        return;\n      } // reset when we've reached the end\n\n\n      if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n        this.state = STATE_POSSIBLE;\n      }\n\n      this.state = this.process(inputDataClone); // the recognizer has recognized a gesture\n      // so trigger an event\n\n      if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n        this.tryEmit(inputDataClone);\n      }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function process(inputData) {},\n    // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function getTouchAction() {},\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function reset() {}\n  };\n  /**\n   * get a usable string, used as event postfix\n   * @param {Const} state\n   * @returns {String} state\n   */\n\n  function stateStr(state) {\n    if (state & STATE_CANCELLED) {\n      return 'cancel';\n    } else if (state & STATE_ENDED) {\n      return 'end';\n    } else if (state & STATE_CHANGED) {\n      return 'move';\n    } else if (state & STATE_BEGAN) {\n      return 'start';\n    }\n\n    return '';\n  }\n  /**\n   * direction cons to string\n   * @param {Const} direction\n   * @returns {String}\n   */\n\n\n  function directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n      return 'down';\n    } else if (direction == DIRECTION_UP) {\n      return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n      return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n      return 'right';\n    }\n\n    return '';\n  }\n  /**\n   * get a recognizer by name if it is bound to a manager\n   * @param {Recognizer|String} otherRecognizer\n   * @param {Recognizer} recognizer\n   * @returns {Recognizer}\n   */\n\n\n  function getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n\n    if (manager) {\n      return manager.get(otherRecognizer);\n    }\n\n    return otherRecognizer;\n  }\n  /**\n   * This recognizer is just used as a base for the simple attribute recognizers.\n   * @constructor\n   * @extends Recognizer\n   */\n\n\n  function AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n  }\n\n  inherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n      /**\n       * @type {Number}\n       * @default 1\n       */\n      pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function attrTest(input) {\n      var optionPointers = this.options.pointers;\n      return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function process(input) {\n      var state = this.state;\n      var eventType = input.eventType;\n      var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n      var isValid = this.attrTest(input); // on cancel input and we've recognized before, return STATE_CANCELLED\n\n      if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n        return state | STATE_CANCELLED;\n      } else if (isRecognized || isValid) {\n        if (eventType & INPUT_END) {\n          return state | STATE_ENDED;\n        } else if (!(state & STATE_BEGAN)) {\n          return STATE_BEGAN;\n        }\n\n        return state | STATE_CHANGED;\n      }\n\n      return STATE_FAILED;\n    }\n  });\n  /**\n   * Pan\n   * Recognized when the pointer is down and moved in the allowed direction.\n   * @constructor\n   * @extends AttrRecognizer\n   */\n\n  function PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n    this.pX = null;\n    this.pY = null;\n  }\n\n  inherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n      event: 'pan',\n      threshold: 10,\n      pointers: 1,\n      direction: DIRECTION_ALL\n    },\n    getTouchAction: function getTouchAction() {\n      var direction = this.options.direction;\n      var actions = [];\n\n      if (direction & DIRECTION_HORIZONTAL) {\n        actions.push(TOUCH_ACTION_PAN_Y);\n      }\n\n      if (direction & DIRECTION_VERTICAL) {\n        actions.push(TOUCH_ACTION_PAN_X);\n      }\n\n      return actions;\n    },\n    directionTest: function directionTest(input) {\n      var options = this.options;\n      var hasMoved = true;\n      var distance = input.distance;\n      var direction = input.direction;\n      var x = input.deltaX;\n      var y = input.deltaY; // lock to axis?\n\n      if (!(direction & options.direction)) {\n        if (options.direction & DIRECTION_HORIZONTAL) {\n          direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n          hasMoved = x != this.pX;\n          distance = Math.abs(input.deltaX);\n        } else {\n          direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n          hasMoved = y != this.pY;\n          distance = Math.abs(input.deltaY);\n        }\n      }\n\n      input.direction = direction;\n      return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n    attrTest: function attrTest(input) {\n      return AttrRecognizer.prototype.attrTest.call(this, input) && (this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));\n    },\n    emit: function emit(input) {\n      this.pX = input.deltaX;\n      this.pY = input.deltaY;\n      var direction = directionStr(input.direction);\n\n      if (direction) {\n        input.additionalEvent = this.options.event + direction;\n      }\n\n      this._super.emit.call(this, input);\n    }\n  });\n  /**\n   * Pinch\n   * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n   * @constructor\n   * @extends AttrRecognizer\n   */\n\n  function PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n  }\n\n  inherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n      event: 'pinch',\n      threshold: 0,\n      pointers: 2\n    },\n    getTouchAction: function getTouchAction() {\n      return [TOUCH_ACTION_NONE];\n    },\n    attrTest: function attrTest(input) {\n      return this._super.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n    emit: function emit(input) {\n      if (input.scale !== 1) {\n        var inOut = input.scale < 1 ? 'in' : 'out';\n        input.additionalEvent = this.options.event + inOut;\n      }\n\n      this._super.emit.call(this, input);\n    }\n  });\n  /**\n   * Press\n   * Recognized when the pointer is down for x ms without any movement.\n   * @constructor\n   * @extends Recognizer\n   */\n\n  function PressRecognizer() {\n    Recognizer.apply(this, arguments);\n    this._timer = null;\n    this._input = null;\n  }\n\n  inherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n      event: 'press',\n      pointers: 1,\n      time: 251,\n      // minimal time of the pointer to be pressed\n      threshold: 9 // a minimal movement is ok, but keep it low\n\n    },\n    getTouchAction: function getTouchAction() {\n      return [TOUCH_ACTION_AUTO];\n    },\n    process: function process(input) {\n      var options = this.options;\n      var validPointers = input.pointers.length === options.pointers;\n      var validMovement = input.distance < options.threshold;\n      var validTime = input.deltaTime > options.time;\n      this._input = input; // we only allow little movement\n      // and we've reached an end event, so a tap is possible\n\n      if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {\n        this.reset();\n      } else if (input.eventType & INPUT_START) {\n        this.reset();\n        this._timer = setTimeoutContext(function () {\n          this.state = STATE_RECOGNIZED;\n          this.tryEmit();\n        }, options.time, this);\n      } else if (input.eventType & INPUT_END) {\n        return STATE_RECOGNIZED;\n      }\n\n      return STATE_FAILED;\n    },\n    reset: function reset() {\n      clearTimeout(this._timer);\n    },\n    emit: function emit(input) {\n      if (this.state !== STATE_RECOGNIZED) {\n        return;\n      }\n\n      if (input && input.eventType & INPUT_END) {\n        this.manager.emit(this.options.event + 'up', input);\n      } else {\n        this._input.timeStamp = now();\n        this.manager.emit(this.options.event, this._input);\n      }\n    }\n  });\n  /**\n   * Rotate\n   * Recognized when two or more pointer are moving in a circular motion.\n   * @constructor\n   * @extends AttrRecognizer\n   */\n\n  function RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n  }\n\n  inherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n      event: 'rotate',\n      threshold: 0,\n      pointers: 2\n    },\n    getTouchAction: function getTouchAction() {\n      return [TOUCH_ACTION_NONE];\n    },\n    attrTest: function attrTest(input) {\n      return this._super.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n  });\n  /**\n   * Swipe\n   * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n   * @constructor\n   * @extends AttrRecognizer\n   */\n\n  function SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n  }\n\n  inherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n      event: 'swipe',\n      threshold: 10,\n      velocity: 0.3,\n      direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n      pointers: 1\n    },\n    getTouchAction: function getTouchAction() {\n      return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n    attrTest: function attrTest(input) {\n      var direction = this.options.direction;\n      var velocity;\n\n      if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n        velocity = input.overallVelocity;\n      } else if (direction & DIRECTION_HORIZONTAL) {\n        velocity = input.overallVelocityX;\n      } else if (direction & DIRECTION_VERTICAL) {\n        velocity = input.overallVelocityY;\n      }\n\n      return this._super.attrTest.call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers == this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n    emit: function emit(input) {\n      var direction = directionStr(input.offsetDirection);\n\n      if (direction) {\n        this.manager.emit(this.options.event + direction, input);\n      }\n\n      this.manager.emit(this.options.event, input);\n    }\n  });\n  /**\n   * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n   * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n   * a single tap.\n   *\n   * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n   * multi-taps being recognized.\n   * @constructor\n   * @extends Recognizer\n   */\n\n  function TapRecognizer() {\n    Recognizer.apply(this, arguments); // previous time and center,\n    // used for tap counting\n\n    this.pTime = false;\n    this.pCenter = false;\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n  }\n\n  inherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n      event: 'tap',\n      pointers: 1,\n      taps: 1,\n      interval: 300,\n      // max time between the multi-tap taps\n      time: 250,\n      // max time of the pointer to be down (like finger on the screen)\n      threshold: 9,\n      // a minimal movement is ok, but keep it low\n      posThreshold: 10 // a multi-tap can be a bit off the initial position\n\n    },\n    getTouchAction: function getTouchAction() {\n      return [TOUCH_ACTION_MANIPULATION];\n    },\n    process: function process(input) {\n      var options = this.options;\n      var validPointers = input.pointers.length === options.pointers;\n      var validMovement = input.distance < options.threshold;\n      var validTouchTime = input.deltaTime < options.time;\n      this.reset();\n\n      if (input.eventType & INPUT_START && this.count === 0) {\n        return this.failTimeout();\n      } // we only allow little movement\n      // and we've reached an end event, so a tap is possible\n\n\n      if (validMovement && validTouchTime && validPointers) {\n        if (input.eventType != INPUT_END) {\n          return this.failTimeout();\n        }\n\n        var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n        var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n        this.pTime = input.timeStamp;\n        this.pCenter = input.center;\n\n        if (!validMultiTap || !validInterval) {\n          this.count = 1;\n        } else {\n          this.count += 1;\n        }\n\n        this._input = input; // if tap count matches we have recognized it,\n        // else it has began recognizing...\n\n        var tapCount = this.count % options.taps;\n\n        if (tapCount === 0) {\n          // no failing requirements, immediately trigger the tap event\n          // or wait as long as the multitap interval to trigger\n          if (!this.hasRequireFailures()) {\n            return STATE_RECOGNIZED;\n          } else {\n            this._timer = setTimeoutContext(function () {\n              this.state = STATE_RECOGNIZED;\n              this.tryEmit();\n            }, options.interval, this);\n            return STATE_BEGAN;\n          }\n        }\n      }\n\n      return STATE_FAILED;\n    },\n    failTimeout: function failTimeout() {\n      this._timer = setTimeoutContext(function () {\n        this.state = STATE_FAILED;\n      }, this.options.interval, this);\n      return STATE_FAILED;\n    },\n    reset: function reset() {\n      clearTimeout(this._timer);\n    },\n    emit: function emit() {\n      if (this.state == STATE_RECOGNIZED) {\n        this._input.tapCount = this.count;\n        this.manager.emit(this.options.event, this._input);\n      }\n    }\n  });\n  /**\n   * Simple way to create a manager with a default set of recognizers.\n   * @param {HTMLElement} element\n   * @param {Object} [options]\n   * @constructor\n   */\n\n  function Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n  }\n  /**\n   * @const {string}\n   */\n\n\n  Hammer.VERSION = '2.0.7';\n  /**\n   * default settings\n   * @namespace\n   */\n\n  Hammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [// RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n    [RotateRecognizer, {\n      enable: false\n    }], [PinchRecognizer, {\n      enable: false\n    }, ['rotate']], [SwipeRecognizer, {\n      direction: DIRECTION_HORIZONTAL\n    }], [PanRecognizer, {\n      direction: DIRECTION_HORIZONTAL\n    }, ['swipe']], [TapRecognizer], [TapRecognizer, {\n      event: 'doubletap',\n      taps: 2\n    }, ['tap']], [PressRecognizer]],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n      /**\n       * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n       * @type {String}\n       * @default 'none'\n       */\n      userSelect: 'none',\n\n      /**\n       * Disable the Windows Phone grippers when pressing an element.\n       * @type {String}\n       * @default 'none'\n       */\n      touchSelect: 'none',\n\n      /**\n       * Disables the default callout shown when you touch and hold a touch target.\n       * On iOS, when you touch and hold a touch target such as a link, Safari displays\n       * a callout containing information about the link. This property allows you to disable that callout.\n       * @type {String}\n       * @default 'none'\n       */\n      touchCallout: 'none',\n\n      /**\n       * Specifies whether zooming is enabled. Used by IE10>\n       * @type {String}\n       * @default 'none'\n       */\n      contentZooming: 'none',\n\n      /**\n       * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n       * @type {String}\n       * @default 'none'\n       */\n      userDrag: 'none',\n\n      /**\n       * Overrides the highlight color shown when the user taps a link or a JavaScript\n       * clickable element in iOS. This property obeys the alpha value, if specified.\n       * @type {String}\n       * @default 'rgba(0,0,0,0)'\n       */\n      tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n  };\n  var STOP = 1;\n  var FORCED_STOP = 2;\n  /**\n   * Manager\n   * @param {HTMLElement} element\n   * @param {Object} [options]\n   * @constructor\n   */\n\n  function Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n    this.options.inputTarget = this.options.inputTarget || element;\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n    toggleCssProps(this, true);\n    each(this.options.recognizers, function (item) {\n      var recognizer = this.add(new item[0](item[1]));\n      item[2] && recognizer.recognizeWith(item[2]);\n      item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n  }\n\n  Manager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function set(options) {\n      assign(this.options, options); // Options that need a little more setup\n\n      if (options.touchAction) {\n        this.touchAction.update();\n      }\n\n      if (options.inputTarget) {\n        // Clean up existing event listeners and reinitialize\n        this.input.destroy();\n        this.input.target = options.inputTarget;\n        this.input.init();\n      }\n\n      return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function stop(force) {\n      this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function recognize(inputData) {\n      var session = this.session;\n\n      if (session.stopped) {\n        return;\n      } // run the touch-action polyfill\n\n\n      this.touchAction.preventDefaults(inputData);\n      var recognizer;\n      var recognizers = this.recognizers; // this holds the recognizer that is being recognized.\n      // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n      // if no recognizer is detecting a thing, it is set to `null`\n\n      var curRecognizer = session.curRecognizer; // reset when the last recognizer is recognized\n      // or when we're in a new session\n\n      if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {\n        curRecognizer = session.curRecognizer = null;\n      }\n\n      var i = 0;\n\n      while (i < recognizers.length) {\n        recognizer = recognizers[i]; // find out if we are allowed try to recognize the input for this one.\n        // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n        // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n        //      that is being recognized.\n        // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n        //      this can be setup with the `recognizeWith()` method on the recognizer.\n\n        if (session.stopped !== FORCED_STOP && ( // 1\n        !curRecognizer || recognizer == curRecognizer || // 2\n        recognizer.canRecognizeWith(curRecognizer))) {\n          // 3\n          recognizer.recognize(inputData);\n        } else {\n          recognizer.reset();\n        } // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n        // current active recognizer. but only if we don't already have an active recognizer\n\n\n        if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n          curRecognizer = session.curRecognizer = recognizer;\n        }\n\n        i++;\n      }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function get(recognizer) {\n      if (recognizer instanceof Recognizer) {\n        return recognizer;\n      }\n\n      var recognizers = this.recognizers;\n\n      for (var i = 0; i < recognizers.length; i++) {\n        if (recognizers[i].options.event == recognizer) {\n          return recognizers[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function add(recognizer) {\n      if (invokeArrayArg(recognizer, 'add', this)) {\n        return this;\n      } // remove existing\n\n\n      var existing = this.get(recognizer.options.event);\n\n      if (existing) {\n        this.remove(existing);\n      }\n\n      this.recognizers.push(recognizer);\n      recognizer.manager = this;\n      this.touchAction.update();\n      return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function remove(recognizer) {\n      if (invokeArrayArg(recognizer, 'remove', this)) {\n        return this;\n      }\n\n      recognizer = this.get(recognizer); // let's make sure this recognizer exists\n\n      if (recognizer) {\n        var recognizers = this.recognizers;\n        var index = inArray(recognizers, recognizer);\n\n        if (index !== -1) {\n          recognizers.splice(index, 1);\n          this.touchAction.update();\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function on(events, handler) {\n      if (events === undefined) {\n        return;\n      }\n\n      if (handler === undefined) {\n        return;\n      }\n\n      var handlers = this.handlers;\n      each(splitStr(events), function (event) {\n        handlers[event] = handlers[event] || [];\n        handlers[event].push(handler);\n      });\n      return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function off(events, handler) {\n      if (events === undefined) {\n        return;\n      }\n\n      var handlers = this.handlers;\n      each(splitStr(events), function (event) {\n        if (!handler) {\n          delete handlers[event];\n        } else {\n          handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n        }\n      });\n      return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function emit(event, data) {\n      // we also want to trigger dom events\n      if (this.options.domEvents) {\n        triggerDomEvent(event, data);\n      } // no handlers, so skip it all\n\n\n      var handlers = this.handlers[event] && this.handlers[event].slice();\n\n      if (!handlers || !handlers.length) {\n        return;\n      }\n\n      data.type = event;\n\n      data.preventDefault = function () {\n        data.srcEvent.preventDefault();\n      };\n\n      var i = 0;\n\n      while (i < handlers.length) {\n        handlers[i](data);\n        i++;\n      }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function destroy() {\n      this.element && toggleCssProps(this, false);\n      this.handlers = {};\n      this.session = {};\n      this.input.destroy();\n      this.element = null;\n    }\n  };\n  /**\n   * add/remove the css properties as defined in manager.options.cssProps\n   * @param {Manager} manager\n   * @param {Boolean} add\n   */\n\n  function toggleCssProps(manager, add) {\n    var element = manager.element;\n\n    if (!element.style) {\n      return;\n    }\n\n    var prop;\n    each(manager.options.cssProps, function (value, name) {\n      prop = prefixed(element.style, name);\n\n      if (add) {\n        manager.oldCssProps[prop] = element.style[prop];\n        element.style[prop] = value;\n      } else {\n        element.style[prop] = manager.oldCssProps[prop] || '';\n      }\n    });\n\n    if (!add) {\n      manager.oldCssProps = {};\n    }\n  }\n  /**\n   * trigger dom event\n   * @param {String} event\n   * @param {Object} data\n   */\n\n\n  function triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n  }\n\n  assign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n  }); // this prevents errors when Hammer is loaded in the presence of an AMD\n  //  style loader but by script tag, not by the loader.\n\n  var freeGlobal = typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}; // jshint ignore:line\n\n  freeGlobal.Hammer = Hammer;\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return Hammer;\n    });\n  } else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n  } else {\n    window[exportName] = Hammer;\n  }\n})(window, document, 'Hammer');","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global'\n\n/* global window, global, document, navigator */\nexport var userAgent = typeof navigator !== 'undefined' && navigator.userAgent ? navigator.userAgent.toLowerCase() : '';\nvar window_ = typeof window !== 'undefined' ? window : global;\nvar global_ = typeof global !== 'undefined' ? global : window;\nvar document_ = typeof document !== 'undefined' ? document : {};\nexport { window_ as window, global_ as global, document_ as document };\n/*\n * Detect whether passive option is supported by the current browser.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   #Safely_detecting_option_support\n */\n\nvar passiveSupported = false;\n/* eslint-disable accessor-pairs, no-empty */\n\ntry {\n  var options = {\n    // This function will be called when the browser\n    // attempts to access the passive property.\n    get passive() {\n      passiveSupported = true;\n    }\n\n  };\n  window_.addEventListener('test', options, options);\n  window_.removeEventListener('test', options, options);\n} catch (err) {}\n\nexport { passiveSupported };"],"sourceRoot":""}