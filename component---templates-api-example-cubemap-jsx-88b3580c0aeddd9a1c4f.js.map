{"version":3,"sources":["webpack:///../node_modules/@loaders.gl/images/dist/esm/lib/parse-image.js","webpack:///../modules/engine/src/geometries/cube-geometry.js","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///../modules/engine/src/geometry/geometry.js","webpack:///../examples/api/cubemap/app.js","webpack:///./templates/api/example-cubemap.jsx","webpack:///../node_modules/@loaders.gl/images/dist/esm/lib/image-parsers.js","webpack:///../node_modules/@loaders.gl/images/dist/esm/lib/get-image-metadata.js","webpack:///../node_modules/@loaders.gl/images/dist/esm/utils/globals.js"],"names":["_parseImageNode","parseImage","arrayBuffer","options","mimeType","createImageBitmap","Error","blob","Blob","Uint8Array","parseToImageBitmap","loadImage","_x","_loadImage","apply","this","arguments","mark","_callee","url","response","_args","wrap","_context","prev","next","length","undefined","Image","fetch","sent","abrupt","loadToHTMLImage","stop","_x2","_x3","_loadToHTMLImage","_callee2","src","xml","_context2","test","text","concat","btoa","Promise","resolve","reject","image","onload","onerror","err","crossOrigin","error","CUBE_INDICES","Uint16Array","CUBE_POSITIONS","Float32Array","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","POSITION","size","value","NORMAL","TEXCOORD_0","CubeGeometry","props","id","uid","indices","attributes","Geometry","asyncGeneratorStep","gen","_next","_throw","key","arg","info","done","then","_asyncToGenerator","fn","self","args","DRAW_MODE","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","drawMode","vertexCount","userData","_setAttributes","_calculateVertexCount","getVertexCount","getAttributes","_print","ArrayBuffer","attribute","assert","attributeName","isIndexed","Object","Math","Number","RoomCube","geometry","fs","vs","Model","Prism","AppAnimationLoop","getInfo","onInitialize","gl","canvas","setParameters","clearColor","clearDepth","depthTest","depthFunc","GL","LEQUAL","cubemap","data","texture","mipmaps","parameters","cube","uniforms","uTextureCube","uModel","prism","uTexture","onRender","animationProps","aspect","tick","eyePosition","view","eye","projection","fov","radians","uView","uProjection","uEyePosition","AnimationLoop","window","animationLoop","Example","render","exampleConfig","pageContext","React","Component","BIG_ENDIAN","LITTLE_ENDIAN","mimeTypeMap","Map","dataView","byteLength","getUint32","getSize","width","height","getUint16","getUint8","_getJpegMarkers","tableMarkers","Set","i","add","sofMarkers","getJpegMarkers","marker","has","ERR_INVALID_MIME_TYPE","Array","from","keys","join","getImageMIMEType","toDataView","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","_step$value","getImageMetadata","metadata","getImageTypeHandlers","getImageSize","handlers","get","isView","DataView","buffer","globals","process","String","browser","global","global_"],"mappings":"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","file":"component---templates-api-example-cubemap-jsx-88b3580c0aeddd9a1c4f.js","sourcesContent":["import \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.typed.uint8-array\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { global } from '../utils/globals';\nimport { getImageMetadata } from './get-image-metadata';\nexport var canParseImage = global._parseImageNode || typeof ImageBitmap !== 'undefined';\nexport function parseImage(arrayBuffer, options) {\n  if (global._parseImageNode) {\n    var _getImageMetadata = getImageMetadata(arrayBuffer),\n        mimeType = _getImageMetadata.mimeType;\n\n    return global._parseImageNode(arrayBuffer, mimeType, options);\n  }\n\n  return parseToImageBitmap(arrayBuffer, options);\n}\nexport function loadImage(_x) {\n  return _loadImage.apply(this, arguments);\n}\n\nfunction _loadImage() {\n  _loadImage = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(url) {\n    var options,\n        response,\n        arrayBuffer,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n            if (!(typeof Image === 'undefined')) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 4;\n            return fetch(url, options);\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.arrayBuffer();\n\n          case 7:\n            arrayBuffer = _context.sent;\n            return _context.abrupt(\"return\", parseImage(arrayBuffer, options));\n\n          case 9:\n            _context.next = 11;\n            return loadToHTMLImage(url, options);\n\n          case 11:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadImage.apply(this, arguments);\n}\n\nexport function parseToImageBitmap(arrayBuffer, options) {\n  if (typeof createImageBitmap === 'undefined') {\n    throw new Error('parseImage');\n  }\n\n  var blob = new Blob([new Uint8Array(arrayBuffer)]);\n  return createImageBitmap(blob);\n}\nexport function loadToHTMLImage(_x2, _x3) {\n  return _loadToHTMLImage.apply(this, arguments);\n}\n\nfunction _loadToHTMLImage() {\n  _loadToHTMLImage = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(url, options) {\n    var src, response, xml;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!/\\.svg((\\?|#).*)?$/.test(url)) {\n              _context2.next = 10;\n              break;\n            }\n\n            _context2.next = 3;\n            return fetch(url, options);\n\n          case 3:\n            response = _context2.sent;\n            _context2.next = 6;\n            return response.text();\n\n          case 6:\n            xml = _context2.sent;\n            src = \"data:image/svg+xml;base64,\".concat(btoa(xml));\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.next = 12;\n            return url;\n\n          case 12:\n            src = _context2.sent;\n\n          case 13:\n            _context2.next = 15;\n            return new Promise(function (resolve, reject) {\n              try {\n                var image = new Image();\n\n                image.onload = function () {\n                  return resolve(image);\n                };\n\n                image.onerror = function (err) {\n                  return reject(new Error(\"Could not load image \".concat(url, \": \").concat(err)));\n                };\n\n                image.crossOrigin = options && options.crossOrigin || 'anonymous';\n                image.src = src;\n              } catch (error) {\n                reject(error);\n              }\n            });\n\n          case 15:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _loadToHTMLImage.apply(this, arguments);\n}","import Geometry from '../geometry/geometry';\nimport {uid} from '@luma.gl/webgl';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import {uid, assert} from '@luma.gl/webgl';\n\n// Rendering primitives - specify how to extract primitives from vertices.\n// NOTE: These are numerically identical to the corresponding WebGL/OpenGL constants\nexport const DRAW_MODE = {\n  POINTS: 0x0000, // draw single points.\n  LINES: 0x0001, // draw lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // draw lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // draw a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // draw triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // draw a connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // draw a connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\nexport default class Geometry {\n  static get DRAW_MODE() {\n    return DRAW_MODE;\n  }\n\n  constructor(props = {}) {\n    const {\n      id = uid('geometry'),\n      drawMode = DRAW_MODE.TRIANGLES,\n      attributes = {},\n      indices = null,\n      vertexCount = null\n    } = props;\n\n    this.id = id;\n    this.drawMode = drawMode | 0;\n    this.attributes = {};\n    this.userData = {};\n\n    this._setAttributes(attributes, indices);\n\n    this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n\n    // stubRemovedMethods(this, [\n    //   'setNeedsRedraw', 'needsRedraw', 'setAttributes'\n    // ], 'Immutable');\n\n    // stubRemovedMethods(this, [\n    //   'hasAttribute', 'getAttribute', 'getArray'\n    // ], 'Use geometry.attributes and geometry.indices');\n\n    // deprecateMethods(this, ['getAttributes'])\n  }\n\n  get mode() {\n    return this.drawMode;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  // Return an object with all attributes plus indices added as a field.\n  getAttributes() {\n    return this.indices ? {indices: this.indices, ...this.attributes} : this.attributes;\n  }\n\n  // PRIVATE\n\n  _print(attributeName) {\n    return `Geometry ${this.id} attribute ${attributeName}`;\n  }\n\n  // Attribute\n  // value: typed array\n  // type: indices, vertices, uvs\n  // size: elements per vertex\n  // target: WebGL buffer type (string or constant)\n  _setAttributes(attributes, indices) {\n    if (indices) {\n      this.indices = ArrayBuffer.isView(indices) ? {value: indices, size: 1} : indices;\n    }\n\n    for (const attributeName in attributes) {\n      let attribute = attributes[attributeName];\n\n      // Wrap \"unwrapped\" arrays and try to autodetect their type\n      attribute = ArrayBuffer.isView(attribute) ? {value: attribute} : attribute;\n\n      assert(\n        ArrayBuffer.isView(attribute.value),\n        `${this._print(attributeName)}: must be typed array or object with value as typed array`\n      );\n\n      if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\n        attribute.size = 3;\n      }\n\n      // Move indices to separate field\n      if (attributeName === 'indices') {\n        assert(!this.indices);\n        this.indices = attribute;\n      } else {\n        this.attributes[attributeName] = attribute;\n      }\n    }\n\n    if (this.indices && this.indices.isIndexed !== undefined) {\n      this.indices = Object.assign({}, this.indices);\n      delete this.indices.isIndexed;\n    }\n\n    return this;\n  }\n\n  _calculateVertexCount(attributes, indices) {\n    if (indices) {\n      return indices.value.length;\n    }\n    let vertexCount = Infinity;\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const {value, size, constant} = attribute;\n      if (!constant && value && size >= 1) {\n        vertexCount = Math.min(vertexCount, value.length / size);\n      }\n    }\n\n    assert(Number.isFinite(vertexCount));\n    return vertexCount;\n  }\n}\n","import GL from '@luma.gl/constants';\nimport {AnimationLoop, Model, CubeGeometry} from '@luma.gl/engine';\nimport {Texture2D, TextureCube} from '@luma.gl/webgl';\nimport {setParameters} from '@luma.gl/gltools';\nimport {Matrix4, radians} from 'math.gl';\nimport {loadImage} from '@loaders.gl/images';\n\nconst INFO_HTML = `\n<p>\nUses a luma.gl <code>TextureCube</code> to simulate a reflective\nsurface\n</p>\n`;\n\nclass RoomCube extends Model {\n  constructor(gl, props) {\n    const vs = `\\\nattribute vec3 positions;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nvarying vec3 vPosition;\n\nvoid main(void) {\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n  vPosition = positions;\n}\n`;\n    const fs = `\\\nprecision highp float;\n\nuniform samplerCube uTextureCube;\nvarying vec3 vPosition;\n\nvoid main(void) {\n  // The outer cube just samples the texture cube directly\n  gl_FragColor = textureCube(uTextureCube, normalize(vPosition));\n}\n`;\n\n    super(gl, Object.assign({geometry: new CubeGeometry()}, props, {fs, vs}));\n  }\n}\n\nclass Prism extends Model {\n  constructor(gl, props) {\n    const vs = `\\\nattribute vec3 positions;\nattribute vec3 normals;\nattribute vec2 texCoords;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nvarying vec3 vPosition;\nvarying vec3 vNormal;\nvarying vec2 vUV;\n\nvoid main(void) {\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n  vPosition = vec3(uModel * vec4(positions,1));\n  vNormal = vec3(uModel * vec4(normals, 0));\n  vUV = texCoords;\n}\n`;\n    const fs = `\\\nprecision highp float;\n\nuniform sampler2D uTexture;\nuniform samplerCube uTextureCube;\nuniform vec3 uEyePosition;\n\nvarying vec3 vPosition;\nvarying vec3 vNormal;\nvarying vec2 vUV;\n\nvoid main(void) {\n  vec4 color = texture2D(uTexture, vUV);\n  vec3 reflectedDir = reflect(normalize(vPosition - uEyePosition), vNormal);\n  vec4 reflectedColor = textureCube(uTextureCube, reflectedDir);\n\n  gl_FragColor = color * reflectedColor;\n}\n`;\n    super(gl, Object.assign({geometry: new CubeGeometry()}, props, {vs, fs}));\n  }\n}\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({gl, canvas}) {\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    const cubemap = new TextureCube(gl, {\n      data: {\n        [gl.TEXTURE_CUBE_MAP_POSITIVE_X]: loadImage('sky-posx.png'),\n        [gl.TEXTURE_CUBE_MAP_NEGATIVE_X]: loadImage('sky-negx.png'),\n        [gl.TEXTURE_CUBE_MAP_POSITIVE_Y]: loadImage('sky-posy.png'),\n        [gl.TEXTURE_CUBE_MAP_NEGATIVE_Y]: loadImage('sky-negy.png'),\n        [gl.TEXTURE_CUBE_MAP_POSITIVE_Z]: loadImage('sky-posz.png'),\n        [gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]: loadImage('sky-negz.png')\n      }\n    });\n\n    const texture = new Texture2D(gl, {\n      data: 'vis-logo.png',\n      mipmaps: true,\n      parameters: {\n        [gl.TEXTURE_MAG_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_MIN_FILTER]: gl.LINEAR_MIPMAP_NEAREST\n      }\n    });\n\n    return {\n      cube: new RoomCube(gl, {\n        uniforms: {\n          uTextureCube: cubemap,\n          uModel: new Matrix4().scale([20, 20, 20])\n        }\n      }),\n      prism: new Prism(gl, {\n        uniforms: {\n          uTextureCube: cubemap,\n          uTexture: texture\n        }\n      })\n    };\n  }\n\n  onRender(animationProps) {\n    const {gl, aspect, cube, prism, tick} = animationProps;\n\n    const eyePosition = [5, -3, 5];\n    const view = new Matrix4().lookAt({eye: eyePosition});\n    const projection = new Matrix4().perspective({fov: radians(75), aspect});\n\n    gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n\n    cube.draw({\n      uniforms: {\n        uView: view,\n        uProjection: projection\n      }\n    });\n\n    prism.draw({\n      uniforms: {\n        uEyePosition: eyePosition,\n        uView: view,\n        uProjection: projection,\n        uModel: new Matrix4().rotateX(tick * 0.01).rotateY(tick * 0.013)\n      }\n    });\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/api/cubemap/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import \"core-js/modules/es6.set\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nvar BIG_ENDIAN = false;\nvar LITTLE_ENDIAN = true;\nexport var mimeTypeMap = new Map([['image/png', {\n  test: isPng,\n  getSize: getPngSize\n}], ['image/jpeg', {\n  test: isJpeg,\n  getSize: getJpegSize\n}], ['image/gif', {\n  test: isGif,\n  getSize: getGifSize\n}], ['image/bmp', {\n  test: isBmp,\n  getSize: getBmpSize\n}]]);\n\nfunction isPng(dataView) {\n  return dataView.byteLength >= 24 && dataView.getUint32(0, BIG_ENDIAN) === 0x89504e47;\n}\n\nfunction getPngSize(dataView) {\n  return {\n    width: dataView.getUint32(16, BIG_ENDIAN),\n    height: dataView.getUint32(20, BIG_ENDIAN)\n  };\n}\n\nfunction isGif(dataView) {\n  return dataView.byteLength >= 10 && dataView.getUint32(0, BIG_ENDIAN) === 0x47494638;\n}\n\nfunction getGifSize(dataView) {\n  return {\n    width: dataView.getUint16(6, LITTLE_ENDIAN),\n    height: dataView.getUint16(8, LITTLE_ENDIAN)\n  };\n}\n\nfunction isBmp(dataView) {\n  return dataView.byteLength >= 2 && dataView.getUint16(0, BIG_ENDIAN) === 0x424d;\n}\n\nfunction getBmpSize(dataView) {\n  return {\n    width: dataView.getUint32(18, LITTLE_ENDIAN),\n    height: dataView.getUint32(22, LITTLE_ENDIAN)\n  };\n}\n\nfunction isJpeg(dataView) {\n  return dataView.byteLength >= 3 && dataView.getUint16(0, BIG_ENDIAN) === 0xffd8 && dataView.getUint8(2, BIG_ENDIAN) === 0xff;\n}\n\nfunction getJpegSize(dataView) {\n  if (dataView.byteLength < 2 || dataView.getUint16(0, BIG_ENDIAN) !== 0xffd8) {\n    return null;\n  }\n\n  var _getJpegMarkers = getJpegMarkers(),\n      tableMarkers = _getJpegMarkers.tableMarkers,\n      sofMarkers = _getJpegMarkers.sofMarkers;\n\n  var i = 2;\n\n  while (i < dataView.byteLength) {\n    var marker = dataView.getUint16(i, BIG_ENDIAN);\n\n    if (sofMarkers.has(marker)) {\n      return {\n        height: dataView.getUint16(i + 5, BIG_ENDIAN),\n        width: dataView.getUint16(i + 7, BIG_ENDIAN)\n      };\n    }\n\n    if (!tableMarkers.has(marker)) {\n      return null;\n    }\n\n    i += 2;\n    i += dataView.getUint16(i, BIG_ENDIAN);\n  }\n\n  return null;\n}\n\nfunction getJpegMarkers() {\n  var tableMarkers = new Set([0xffdb, 0xffc4, 0xffcc, 0xffdd, 0xfffe]);\n\n  for (var i = 0xffe0; i < 0xfff0; ++i) {\n    tableMarkers.add(i);\n  }\n\n  var sofMarkers = new Set([0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc9, 0xffca, 0xffcb, 0xffcd, 0xffce, 0xffcf, 0xffde]);\n  return {\n    tableMarkers: tableMarkers,\n    sofMarkers: sofMarkers\n  };\n}","import \"core-js/modules/es6.typed.data-view\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { mimeTypeMap } from './image-parsers';\nvar ERR_INVALID_MIME_TYPE = \"Invalid MIME type. Supported MIME types are: \".concat(Array.from(mimeTypeMap.keys()).join(', '));\nexport function isImage(arrayBuffer, mimeType) {\n  if (mimeType) {\n    var _getImageTypeHandlers = getImageTypeHandlers(mimeType),\n        test = _getImageTypeHandlers.test;\n\n    var dataView = toDataView(arrayBuffer);\n    return test(dataView);\n  }\n\n  return Boolean(getImageMIMEType(arrayBuffer));\n}\nexport function getImageMIMEType(arrayBuffer) {\n  var dataView = toDataView(arrayBuffer);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = mimeTypeMap.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          mimeType = _step$value[0],\n          test = _step$value[1].test;\n\n      if (test(dataView)) {\n        return mimeType;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return null;\n}\nexport function getImageSize(arrayBuffer) {\n  var mimeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  mimeType = mimeType || getImageMIMEType(arrayBuffer);\n\n  var _getImageTypeHandlers2 = getImageTypeHandlers(mimeType),\n      getSize = _getImageTypeHandlers2.getSize;\n\n  var dataView = toDataView(arrayBuffer);\n  var size = getSize(dataView);\n\n  if (!size) {\n    throw new Error(\"invalid image data for type: \".concat(mimeType));\n  }\n\n  return size;\n}\nexport function getImageMetadata(arrayBuffer) {\n  var mimeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  mimeType = mimeType || getImageMIMEType(arrayBuffer);\n  var metadata = getImageSize(arrayBuffer, mimeType);\n  metadata.mimeType = mimeType;\n  return metadata;\n}\n\nfunction getImageTypeHandlers(mimeType) {\n  var handlers = mimeTypeMap.get(mimeType);\n\n  if (!handlers) {\n    throw new Error(ERR_INVALID_MIME_TYPE);\n  }\n\n  return handlers;\n}\n\nfunction toDataView(data) {\n  if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n    return new DataView(data.buffer || data);\n  }\n\n  throw new Error('toDataView');\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar isBrowser = (typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) !== 'object' || String(process) !== '[object process]' || process.browser;\nvar globals = {\n  self: typeof self !== 'undefined' && self,\n  window: typeof window !== 'undefined' && window,\n  global: typeof global !== 'undefined' && global\n};\nvar global_ = globals.global || globals.self || globals.window;\nexport { isBrowser, global_ as global };"],"sourceRoot":""}