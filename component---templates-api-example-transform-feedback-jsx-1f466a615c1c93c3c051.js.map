{"version":3,"sources":["webpack:///../examples/api/transform-feedback/app.js","webpack:///./templates/api/example-transform-feedback.jsx"],"names":["ALT_TEXT","FLOAT_SIZE","Float32Array","VARYINGS","POSITIONS","AppAnimationLoop","props","getInfo","onInitialize","canvas","gl","this","isDemoSupported","isWebGL2","log","byteLength","buffers","vertex","data","position","usage","accessor","type","FLOAT","color","transformModel","vs","fs","varyings","drawMode","vertexCount","attributes","_feedbackBuffers","gl_Position","v_color","renderModel","onRender","time","unbindModels","isSupported","getAltText","AnimationLoop","window","animationLoop","Example","render","exampleConfig","pageContext","React","Component"],"mappings":"iLAIA,IAMMA,EAAN,iEAEMC,EAAaC,aAAnB,kBAIMC,EAAW,CAAC,cAAlB,WAgDMC,EAAY,qDAAlB,GASqBC,E,oBAKnB,cAAyB,IAAD,kBAAZC,MAAQ,KAClB,kBADsB,MAGtB,mBAHsB,E,yFAJjBC,QAAP,WACE,MAvEJ,wF,2BAiFEC,yBAA2B,EAAbC,OAAc,IAAD,IAALC,EAAK,EAALA,GAEpB,GADAC,KAAKC,gBAAkBC,YAAvB,IACKF,KAAL,gBAEE,OADAG,eACM,GAGR,IAAMC,EAAaX,SAAnB,EACMY,EAAU,CACdC,OAAQ,IAAI,EAAJ,IAAe,CAACC,KAAM,IAAIhB,aAAaE,KAC/Ce,SAAU,IAAI,EAAJ,IAAe,CAACJ,WAAD,EAAaK,MAAOV,EAApB,YAAoCW,SAAU,CAACC,KAAMZ,EAAGa,SACjFC,MAAO,IAAI,EAAJ,IAAe,CAACT,WAAD,EAAaK,MAAOV,EAApB,YAAoCW,SAAU,CAACC,KAAMZ,EAAGa,UA8BhF,MAAO,CACLE,eA3BqB,IAAI,EAAJ,IAAc,CACnCC,GAnFY,8LAoFZC,GAxEN,4DAyEMC,SAHmC,EAInCC,SAAUnB,EAJyB,UAKnCoB,YA5CN,EA6CMC,YAAU,OA5FhB,GA6F6Bf,EADb,OANyB,GASnCgB,iBAAkB,CAChBC,YAAajB,EADG,SAEhBkB,QAASlB,EAAQQ,SAiBnBW,YAbkB,IAAI,EAAJ,IAAc,CAChCT,GAhFS,yLAiFTC,GApEN,iIAqEME,SAAUnB,EAHsB,UAIhCoB,YAJgC,EAKhCC,YAAU,OA1GhB,GA2G6Bf,EADb,WAzGhB,GA2G0BA,EAFV,a,EAYdoB,qBAAkD,EAAxC1B,GAAwC,EAApC2B,KAAqC,IAA/BF,EAA8B,EAA9BA,YAAaV,EAAiB,EAAjBA,eAC1Bd,KAAL,kBAGAc,YAAyB,CAACa,aAAc,CAACH,KAGzCA,QAAkB,CAACX,MAAO,CAAC,EAAI,EAAL,OAC1BW,W,EAGFI,uBACE,OAAO5B,KAAP,iB,EAGF6B,sBACE,OAAOxC,G,GA3EmCyC,KAgF1C,oBAAOC,QAA2BA,OAAtC,UACwB,IAAtB,GACAC,Q,4CCvJmBC,E,gLACnBC,kBACE,OACE,uBAA0BJ,cAA1B,EAAwDK,cAAenC,KAAKL,MAAMyC,YAAYD,iB,GAH/DE,IAAMC","file":"component---templates-api-example-transform-feedback-jsx-1f466a615c1c93c3c051.js","sourcesContent":["/* eslint-disable camelcase */\nimport {AnimationLoop, Model} from '@luma.gl/engine';\nimport {Buffer, isWebGL2, log} from '@luma.gl/webgl';\n\nconst INFO_HTML = `\n<p>\nGradient calculated on the GPU using <code>Transform Feedback</code>.\n</p>\n`;\n// Text to be displayed on environments when this demos is not supported.\nconst ALT_TEXT = \"THIS DEMO REQUIRES WEBLG2, BUT YOUR BROWSER DOESN'T SUPPORT IT\";\n\nconst FLOAT_SIZE = Float32Array.BYTES_PER_ELEMENT;\n\nconst POSITION_LOCATION = 0;\nconst COLOR_LOCATION = 1;\nconst VARYINGS = ['gl_Position', 'v_color'];\n\nconst VS_TRANSFORM = `\\\n#version 300 es\nlayout(location = ${POSITION_LOCATION}) in vec4 position;\n\nout vec4 v_color;\n\nvoid main() {\n  gl_Position = position;\n  v_color = vec4(clamp(vec2(position), 0.0, 1.0), 0.0, 1.0);\n}\n`;\n\nconst FS_TRANSFORM = `\\\n#version 300 es\nprecision highp float;\nvoid main() {}\n`;\n\nconst VS_RENDER = `\\\n#version 300 es\nlayout(location = ${POSITION_LOCATION}) in vec4 position;\nlayout(location = ${COLOR_LOCATION}) in vec4 color;\n\nout vec4 v_color;\n\nvoid main() {\n  gl_Position = position;\n  v_color = color;\n}\n`;\n\nconst FS_RENDER = `\\\n#version 300 es\nprecision highp float;\n\nin vec4 v_color;\nout vec4 fragColor;\n\nvoid main() {\n  fragColor = v_color;\n}\n`;\n\nconst VERTEX_COUNT = 6;\n\n// prettier-ignore\nconst POSITIONS = [\n  -1.0, -1.0, 0.0, 1.0,\n  1.0, -1.0, 0.0, 1.0,\n  1.0, 1.0, 0.0, 1.0,\n  1.0, 1.0, 0.0, 1.0,\n  -1.0, 1.0, 0.0, 1.0,\n  -1.0, -1.0, 0.0, 1.0\n];\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  constructor(props = {}) {\n    super(props);\n    // Default value is true, so GL context is always created to verify wheter it is WebGL2 or not.\n    this.isDemoSupported = true;\n  }\n\n  // eslint-disable-next-line\n  onInitialize({canvas, gl}) {\n    this.isDemoSupported = isWebGL2(gl);\n    if (!this.isDemoSupported) {\n      log.error(ALT_TEXT)();\n      return {};\n    }\n    // ---- SETUP BUFFERS ---- //\n    const byteLength = POSITIONS.length * FLOAT_SIZE;\n    const buffers = {\n      vertex: new Buffer(gl, {data: new Float32Array(POSITIONS)}),\n      position: new Buffer(gl, {byteLength, usage: gl.STATIC_COPY, accessor: {type: gl.FLOAT}}),\n      color: new Buffer(gl, {byteLength, usage: gl.STATIC_COPY, accessor: {type: gl.FLOAT}})\n    };\n\n    // first pass, offscreen, no rasterization, vertices processing only\n    const transformModel = new Model(gl, {\n      vs: VS_TRANSFORM,\n      fs: FS_TRANSFORM,\n      varyings: VARYINGS,\n      drawMode: gl.TRIANGLES,\n      vertexCount: VERTEX_COUNT,\n      attributes: {\n        [POSITION_LOCATION]: buffers.vertex\n      },\n      _feedbackBuffers: {\n        gl_Position: buffers.position,\n        v_color: buffers.color\n      }\n    });\n\n    const renderModel = new Model(gl, {\n      vs: VS_RENDER,\n      fs: FS_RENDER,\n      drawMode: gl.TRIANGLES,\n      vertexCount: 6,\n      attributes: {\n        [POSITION_LOCATION]: buffers.position,\n        [COLOR_LOCATION]: buffers.color\n      }\n    });\n\n    return {\n      transformModel,\n      renderModel\n    };\n  }\n\n  onRender({gl, time, renderModel, transformModel}) {\n    if (!this.isDemoSupported) {\n      return;\n    }\n    transformModel.transform({unbindModels: [renderModel]});\n\n    // second pass, render to screen\n    renderModel.clear({color: [0.0, 0.0, 0.0, 1.0]});\n    renderModel.draw();\n  }\n\n  isSupported() {\n    return this.isDemoSupported;\n  }\n\n  getAltText() {\n    return ALT_TEXT;\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/api/transform-feedback/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n"],"sourceRoot":""}