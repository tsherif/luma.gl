{"version":3,"sources":["webpack:///../modules/addons/src/animation/key-frames.js","webpack:///../examples/core/animation/app.js","webpack:///./templates/core/example-animation.jsx","webpack:///../modules/core/src/geometry/geometry.js","webpack:///../node_modules/seer/dist/index.js","webpack:///../modules/core/src/scenegraph/nodes/scenegraph-node.js","webpack:///../modules/core/src/geometries/cube-geometry.js","webpack:///../node_modules/math.gl/dist/esm/classes/base/vector.js","webpack:///../node_modules/math.gl/dist/esm/classes/vector3.js","webpack:///../modules/core/src/scenegraph/nodes/model-node.js","webpack:///../modules/addons/src/animation/timeline.js","webpack:///../modules/shadertools/src/modules/project/project.js","webpack:///../modules/shadertools/src/modules/dirlight/dirlight.js"],"names":["KeyFrames","keyFrames","this","_lastTime","startIndex","endIndex","factor","times","values","setKeyFrames","setTime","_proto","prototype","numKeys","length","i","_calculateKeys","time","Math","getStartTime","getEndTime","getStartData","getEndData","index","startTime","endTime","AppAnimationLoop","_AnimationLoop","call","debug","getInfo","onInitialize","_this","gl","_ref","aspect","_animationLoop","setParameters","clearColor","clearDepth","depthTest","depthFunc","LEQUAL","playButton","document","pauseButton","timeSlider","timeline","play","pause","event","parseFloat","value","translations","rotations","random","colors","attachTimeline","channels","addChannel","delay","rate","duration","repeat","Number","POSITIVE_INFINITY","keyFrameData","PI","cubes","Array","attachAnimation","translation","rotation","model","model_node","vs","fs","modules","dirlight","geometry","cube_geometry","uniforms","uProjection","matrix4","perspective","fov","radians","near","far","uView","lookAt","center","eye","uColor","onRender","animationProps","modelMatrix","cube","startRotation","endRotation","rotationX","rotationY","rotationZ","uModel","onFinalize","_ref2","delete","AnimationLoop","window","website","app_AppAnimationLoop","animationLoop","Example","render","react_default","a","createElement","animation_loop_example_page","exampleConfig","props","pageContext","React","Component","DRAW_MODE","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","Geometry","_props","_props$id","id","uid","_props$drawMode","drawMode","_props$attributes","attributes","_props$indices","indices","_props$vertexCount","vertexCount","userData","_setAttributes","_calculateVertexCount","getVertexCount","getAttributes","Object","assign","_print","attributeName","ArrayBuffer","isView","size","attribute","assert","undefined","isIndexed","Infinity","constant","__webpack_require__","defineProperty","exports","_typeof","Symbol","iterator","obj","constructor","isBrowser","addEventListener","timers","Map","isReady","__SEER_INITIALIZED__","throttle","key","get","now","Date","set","send","type","data","arguments","seen","Set","payload","JSON","stringify","has","add","toString","slice","includes","replacer","postMessage","source","e","console","log","listeners","listener","message","_message$data","typeListeners","forEach","cb","init","__SEER_LISTENER__","list","listItem","itemKey","updateItem","path","multiUpdate","array","deleteItem","addLog","msg","listenFor","Error","push","removeListener","filter","l","clean","removeEventListener","ScenegraphNode","name","display","position","math_gl__WEBPACK_IMPORTED_MODULE_4__","scale","matrix","math_gl__WEBPACK_IMPORTED_MODULE_5__","_setScenegraphNodeProps","setProps","setPosition","setRotation","setScale","setMatrix","copyMatrix","copy","setMatrixComponents","_ref$update","update","updateMatrix","pos","rot","identity","translate","rotateXYZ","_temp","getCoordinateUniforms","worldMatrix","viewMatrix","multiplyRight","worldInverse","invert","worldInverseTranspose","transpose","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","CUBE_INDICES","Uint16Array","CUBE_POSITIONS","Float32Array","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","POSITION","NORMAL","TEXCOORD_0","CubeGeometry","_Geometry","vector_Vector","_MathArray","Vector","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","sqrt","lengthSquared","len","ELEMENTS","mathArray","distanceSquared","dist","validators","product","magnitude","check","_len","vectors","_key","_i","_vectors","vector","_len2","_key2","_i2","_vectors2","distance","b","subtract","multiply","multiplyScalar","math_array","d","__webpack_exports__","vector3_Vector3","ORIGIN","_Vector","Vector3","x","y","z","common","object","vec3","_ref$origin","origin","_ref2$origin","_ref3","_ref3$origin","transformAsPoint","gl_matrix_extras","matrix3","matrix2","quaternion","ModelNode","_ScenegraphNode","onBeforeRender","AfterRender","_lib_model__WEBPACK_IMPORTED_MODULE_0__","_setModelNodeProps","managedResources","resource","draw","_this$model","setUniforms","_this$model2","setAttributes","_this$model3","updateModuleSettings","_this$model4","channelHandles","animationHandles","Timeline","animations","playing","lastEngineTime","_props$delay","_props$duration","_props$rate","_props$repeat","handle","channel","_setChannelTime","removeChannel","_iterator","_isArray","isArray","next","done","animationHandle","animation","detachAnimation","isFinished","getTime","_iterator2","_isArray2","_iterator3","_isArray3","_i3","_ref4","animationData","reset","channelHandle","engineTime","offsetTime","IDENTITY_MATRIX","DEFAULT_MODULE_OPTIONS","projectionMatrix","cameraPositionWorld","project","getUniforms","opts","prevUniforms","lightDirection","dependencies"],"mappings":"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","file":"component---templates-core-example-animation-jsx-e6b6ef4695fe9993084d.js","sourcesContent":["export class KeyFrames {\n  constructor(keyFrames) {\n    this._lastTime = -1;\n    this.startIndex = -1;\n    this.endIndex = -1;\n    this.factor = 0;\n    this.times = [];\n    this.values = [];\n    this.setKeyFrames(keyFrames);\n    this.setTime(0);\n  }\n\n  setKeyFrames(keyFrames) {\n    const numKeys = keyFrames.length;\n    this.times.length = numKeys;\n    this.values.length = numKeys;\n\n    for (let i = 0; i < numKeys; ++i) {\n      this.times[i] = keyFrames[i][0];\n      this.values[i] = keyFrames[i][1];\n    }\n\n    this._calculateKeys(this._lastTime);\n  }\n\n  setTime(time) {\n    time = Math.max(0, time);\n\n    if (time !== this._lastTime) {\n      this._calculateKeys(time);\n      this._lastTime = time;\n    }\n  }\n\n  getStartTime() {\n    return this.times[this.startIndex];\n  }\n\n  getEndTime() {\n    return this.times[this.endIndex];\n  }\n\n  getStartData() {\n    return this.values[this.startIndex];\n  }\n\n  getEndData() {\n    return this.values[this.endIndex];\n  }\n\n  _calculateKeys(time) {\n    let index = 0;\n    const numKeys = this.times.length;\n\n    for (index = 0; index < numKeys - 2; ++index) {\n      if (this.times[index + 1] > time) {\n        break;\n      }\n    }\n\n    this.startIndex = index;\n    this.endIndex = index + 1;\n\n    const startTime = this.times[this.startIndex];\n    const endTime = this.times[this.endIndex];\n    this.factor = Math.min(Math.max(0, (time - startTime) / (endTime - startTime)), 1);\n  }\n}\n","/* global document */\n\nimport {AnimationLoop, setParameters, ModelNode, dirlight, CubeGeometry} from '@luma.gl/core';\nimport {Timeline, KeyFrames} from '@luma.gl/addons';\nimport {Matrix4, radians} from 'math.gl';\n\nconst INFO_HTML = `\nKey frame animation based on multiple hierarchical timelines.\n<button id=\"play\">Play</button>\n<button id=\"pause\">Pause</button><BR>\nTime: <input type=\"range\" id=\"time\" min=\"0\" max=\"30000\" step=\"1\"><BR>\n`;\n\nconst vs = `\\\nattribute vec3 positions;\nattribute vec3 normals;\n\nuniform vec3 uColor;\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nvarying vec3 color;\n\nvoid main(void) {\n  vec3 normal = vec3(uModel * vec4(normals, 0.0));\n\n  // Set up data for modules\n  color = uColor;\n  project_setNormal(normal);\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n}\n`;\n\nconst fs = `\\\nprecision highp float;\n\nvarying vec3 color;\n\nvoid main(void) {\n  gl_FragColor = vec4(color, 1.);\n  gl_FragColor = dirlight_filterColor(gl_FragColor);\n}\n`;\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  constructor() {\n    super({debug: true});\n  }\n\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({gl, _animationLoop, aspect}) {\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      depthTest: true,\n      depthFunc: gl.LEQUAL\n    });\n\n    const playButton = document.getElementById('play');\n    const pauseButton = document.getElementById('pause');\n    const timeSlider = document.getElementById('time');\n\n    if (playButton) {\n      playButton.addEventListener('click', () => {\n        this.timeline.play();\n      });\n\n      pauseButton.addEventListener('click', () => {\n        this.timeline.pause();\n      });\n\n      timeSlider.addEventListener('input', event => {\n        this.timeline.setTime(parseFloat(event.target.value));\n      });\n    }\n\n    const translations = [[2, -2, 0], [2, 2, 0], [-2, 2, 0], [-2, -2, 0]];\n\n    const rotations = [\n      [Math.random(), Math.random(), Math.random()],\n      [Math.random(), Math.random(), Math.random()],\n      [Math.random(), Math.random(), Math.random()],\n      [Math.random(), Math.random(), Math.random()]\n    ];\n\n    const colors = [[1, 0, 0], [0, 1, 0], [0, 0, 1], [1, 1, 0]];\n\n    this.attachTimeline(new Timeline());\n    this.timeline.play();\n\n    const channels = [\n      this.timeline.addChannel({\n        delay: 2000,\n        rate: 0.5,\n        duration: 8000,\n        repeat: 2\n      }),\n      this.timeline.addChannel({\n        delay: 10000,\n        rate: 0.2,\n        duration: 20000,\n        repeat: 1\n      }),\n      this.timeline.addChannel({\n        delay: 7000,\n        rate: 1,\n        duration: 4000,\n        repeat: 8\n      }),\n      this.timeline.addChannel({\n        delay: 0,\n        rate: 0.8,\n        duration: 5000,\n        repeat: Number.POSITIVE_INFINITY\n      })\n    ];\n\n    const keyFrameData = [\n      [0, 0],\n      [1000, 2 * Math.PI],\n      [2000, Math.PI],\n      [3000, 2 * Math.PI],\n      [4000, 0]\n    ];\n\n    const keyFrames = [\n      new KeyFrames(keyFrameData),\n      new KeyFrames(keyFrameData),\n      new KeyFrames(keyFrameData),\n      new KeyFrames(keyFrameData)\n    ];\n\n    this.cubes = new Array(4);\n\n    for (let i = 0; i < 4; ++i) {\n      this.timeline.attachAnimation(keyFrames[i], channels[i]);\n\n      this.cubes[i] = {\n        translation: translations[i],\n        rotation: rotations[i],\n        keyFrames: keyFrames[i],\n        model: new ModelNode(gl, {\n          vs,\n          fs,\n          modules: [dirlight],\n          geometry: new CubeGeometry(),\n          uniforms: {\n            uProjection: new Matrix4().perspective({fov: radians(60), aspect, near: 1, far: 20.0}),\n            uView: new Matrix4().lookAt({\n              center: [0, 0, 0],\n              eye: [0, 0, -8]\n            }),\n            uColor: colors[i]\n          }\n        })\n      };\n    }\n\n    return {timeSlider};\n  }\n\n  onRender(animationProps) {\n    const {gl, timeSlider} = animationProps;\n\n    if (timeSlider) {\n      timeSlider.value = this.timeline.getTime();\n    }\n\n    const modelMatrix = new Matrix4();\n\n    // Draw the cubes\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    for (let i = 0; i < 4; ++i) {\n      const cube = this.cubes[i];\n      const startRotation = cube.keyFrames.getStartData();\n      const endRotation = cube.keyFrames.getEndData();\n      const rotation = startRotation + cube.keyFrames.factor * (endRotation - startRotation);\n      const rotationX = cube.rotation[0] + rotation;\n      const rotationY = cube.rotation[1] + rotation;\n      const rotationZ = cube.rotation[2];\n      modelMatrix\n        .identity()\n        .translate(cube.translation)\n        .rotateXYZ([rotationX, rotationY, rotationZ]);\n      cube.model\n        .setUniforms({\n          uModel: modelMatrix\n        })\n        .draw();\n    }\n  }\n\n  onFinalize({gl}) {\n    for (let i = 0; i < 4; ++i) {\n      this.cubes[i].model.delete();\n    }\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/core/animation/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import {uid, assert} from '../utils';\n\n// Rendering primitives - specify how to extract primitives from vertices.\n// NOTE: These are numerically identical to the corresponding WebGL/OpenGL constants\nexport const DRAW_MODE = {\n  POINTS: 0x0000, // draw single points.\n  LINES: 0x0001, // draw lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // draw lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // draw a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // draw triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // draw a connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // draw a connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\nexport default class Geometry {\n  static get DRAW_MODE() {\n    return DRAW_MODE;\n  }\n\n  constructor(props = {}) {\n    const {\n      id = uid('geometry'),\n      drawMode = DRAW_MODE.TRIANGLES,\n      attributes = {},\n      indices = null,\n      vertexCount = null\n    } = props;\n\n    this.id = id;\n    this.drawMode = drawMode | 0;\n    this.attributes = {};\n    this.userData = {};\n\n    this._setAttributes(attributes, indices);\n\n    this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n\n    // stubRemovedMethods(this, [\n    //   'setNeedsRedraw', 'needsRedraw', 'setAttributes'\n    // ], 'Immutable');\n\n    // stubRemovedMethods(this, [\n    //   'hasAttribute', 'getAttribute', 'getArray'\n    // ], 'Use geometry.attributes and geometry.indices');\n\n    // deprecateMethods(this, ['getAttributes'])\n  }\n\n  get mode() {\n    return this.drawMode;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  // Return an object with all attributes plus indices added as a field.\n  getAttributes() {\n    return this.indices ? {indices: this.indices, ...this.attributes} : this.attributes;\n  }\n\n  // PRIVATE\n\n  _print(attributeName) {\n    return `Geometry ${this.id} attribute ${attributeName}`;\n  }\n\n  // Attribute\n  // value: typed array\n  // type: indices, vertices, uvs\n  // size: elements per vertex\n  // target: WebGL buffer type (string or constant)\n  _setAttributes(attributes, indices) {\n    if (indices) {\n      this.indices = ArrayBuffer.isView(indices) ? {value: indices, size: 1} : indices;\n    }\n\n    for (const attributeName in attributes) {\n      let attribute = attributes[attributeName];\n\n      // Wrap \"unwrapped\" arrays and try to autodetect their type\n      attribute = ArrayBuffer.isView(attribute) ? {value: attribute} : attribute;\n\n      assert(\n        ArrayBuffer.isView(attribute.value),\n        `${this._print(attributeName)}: must be typed array or object with value as typed array`\n      );\n\n      if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\n        attribute.size = 3;\n      }\n\n      // Move indices to separate field\n      if (attributeName === 'indices') {\n        assert(!this.indices);\n        this.indices = attribute;\n      } else {\n        this.attributes[attributeName] = attribute;\n      }\n    }\n\n    if (this.indices && this.indices.isIndexed !== undefined) {\n      this.indices = Object.assign({}, this.indices);\n      delete this.indices.isIndexed;\n    }\n\n    return this;\n  }\n\n  _calculateVertexCount(attributes, indices) {\n    if (indices) {\n      return indices.value.length;\n    }\n    let vertexCount = Infinity;\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const {value, size, constant} = attribute;\n      if (!constant && value && size >= 1) {\n        vertexCount = Math.min(vertexCount, value.length / size);\n      }\n    }\n\n    assert(Number.isFinite(vertexCount));\n    return vertexCount;\n  }\n}\n","'use strict';\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n}; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nvar isBrowser = typeof window !== 'undefined' && window.addEventListener;\nvar timers = new Map();\n/**\n * Ready check for Seer initialization\n *\n * @returns {Boolean}\n */\n\nvar isReady = function isReady() {\n  return isBrowser && window.__SEER_INITIALIZED__;\n};\n/**\n * Utility method allowing to throttle a user action based on a key and a minimun delay.\n *\n * @param key {String} A unique key\n * @param delay {Number} The minimal delay to throttle\n * @returns {Boolean}\n */\n\n\nvar throttle = function throttle(key, delay) {\n  var time = timers.get(key);\n  var now = Date.now();\n\n  if (time && now - time < delay) {\n    return true;\n  }\n\n  timers.set(key, now);\n  return false;\n};\n\nvar replacer = function replacer(seen) {\n  return function (key, value) {\n    if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && seen.has(value)) {\n      return;\n    }\n\n    seen.add(value);\n    var isArray = Object.prototype.toString.call(value).slice(8, -1).includes('Array');\n\n    if (isArray) {\n      return Array.prototype.slice.call(value, 0, 20);\n    }\n\n    return value;\n  };\n};\n/**\n * Low-level api leveraging window.postMessage\n *\n * @param type {String} The action type\n * @param payload {Any} The action payload\n */\n\n\nvar send = function send(type) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isBrowser || !isReady()) {\n    return;\n  }\n\n  var seen = new Set();\n  var payload = JSON.stringify(data, replacer(seen));\n\n  try {\n    window.postMessage({\n      type: type,\n      payload: payload,\n      source: 'seer-agent'\n    }, '*');\n  } catch (e) {\n    if (throttle('seer-log', 2E3)) {\n      return;\n    }\n\n    console.log(e); // eslint-disable-line\n  }\n};\n\nvar listeners = new Map();\n\nvar listener = function listener(message) {\n  if (!message || !message.data || message.data.source !== 'seer-core') {\n    return;\n  }\n\n  var _message$data = message.data,\n      type = _message$data.type,\n      payload = _message$data.payload;\n  var typeListeners = listeners.get(type);\n\n  if (typeListeners) {\n    typeListeners.forEach(function (cb) {\n      return cb(payload);\n    });\n  }\n};\n/**\n * Initilize window listener. There will be only one for the whole process\n * to prevent too many registrations.\n *\n * This method will be called automatically if you use the `listenFor` method.\n */\n\n\nvar init = function init() {\n  if (!isBrowser || window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.addEventListener('message', listener);\n  window.__SEER_LISTENER__ = true;\n};\n/**\n * Clean listener. Can be useful in case you want to unregister upcoming events\n * or liberate memory.\n */\n\n\nvar clean = function clean() {\n  if (!isBrowser || !window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.removeEventListener('message', listener);\n  delete window.__SEER_LISTENER__;\n};\n/**\n * Create a listener that will be called upon events of the given key.\n *\n * @param key {String} The unique tab key\n * @param cb {Function} A callback that will receive the message payload\n */\n\n\nvar listenFor = function listenFor(type, cb) {\n  if (!isBrowser) {\n    return;\n  }\n\n  if (!type || !cb) {\n    throw new Error('Please provide a type and callback');\n  }\n\n  if (!listeners.has(type)) {\n    listeners.set(type, []);\n  }\n\n  if (!window.__SEER_LISTENER__) {\n    init();\n  }\n\n  listeners.get(type).push(cb);\n};\n/**\n * Remove an identity listener\n *\n * @param cb {Function} The callback to remove\n */\n\n\nvar removeListener = function removeListener(cb) {\n  listeners.forEach(function (typeListeners, key) {\n    listeners.set(key, typeListeners.filter(function (l) {\n      return l !== cb;\n    }));\n  });\n};\n/**\n * Creates a new indexed list.\n * It works by index to get O(1) accessing and performance.\n *\n * @param key {String} The key of the tab\n * @param data {Object} The indexed object\n */\n\n\nvar list = function list(key, data) {\n  return send('LIST', {\n    key: key,\n    data: data\n  });\n};\n/**\n * Creates an element in the indexed list, based on the itemKey.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param data {Any} The value of the item\n */\n\n\nvar listItem = function listItem(key, itemKey) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return send('LIST_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    data: data\n  });\n};\n/**\n * Update an item property, can be deeply nested.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param path {String} The path of the variable you want to update\n * @param data {Object} The new value\n */\n\n\nvar updateItem = function updateItem(key, itemKey, path, data) {\n  return send('UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    path: path,\n    data: data\n  });\n};\n/**\n * Similar to updateItem, but allows to pass an array with {path,data} pairs for\n * multiple update of the same item without having to send multiple messages.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param array {Array} The array of updates\n * @param array.path {String} The path for this update\n * @param array.data {Object} The value of this update\n */\n\n\nvar multiUpdate = function multiUpdate(key, itemKey, array) {\n  return send('MULTI_UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    array: array\n  });\n};\n/**\n * Remove a specific item in a specific tab.\n *\n * @param key {String} They key of the tab\n * @param itemKey {String} The key of the item\n */\n\n\nvar deleteItem = function deleteItem(key, itemKey) {\n  return send('DELETE_ITEM', {\n    key: key,\n    itemKey: itemKey\n  });\n};\n/**\n * Will create a log message to an item, that will be displayde with the current time.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param msg {String} The message to display\n */\n\n\nvar addLog = function addLog(key, itemKey, msg) {\n  return send('ADD_LOG', {\n    key: key,\n    itemKey: itemKey,\n    msg: msg\n  });\n};\n\nexports[\"default\"] = {\n  send: send,\n  throttle: throttle,\n  isReady: isReady,\n  list: list,\n  listItem: listItem,\n  updateItem: updateItem,\n  multiUpdate: multiUpdate,\n  deleteItem: deleteItem,\n  addLog: addLog,\n  listeners: listeners,\n  listenFor: listenFor,\n  removeListener: removeListener,\n  init: init,\n  clean: clean\n};","import {Vector3, Matrix4} from 'math.gl';\nimport {assert, uid} from '../../utils';\n\nexport default class ScenegraphNode {\n  constructor(props = {}) {\n    const {id} = props;\n\n    this.id = id || uid(this.constructor.name);\n\n    this.display = true; // whether to display the object at all\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n    this.userData = {};\n\n    this.props = {};\n    this._setScenegraphNodeProps(props);\n  }\n\n  delete() {}\n\n  setProps(props) {\n    this._setScenegraphNodeProps(props);\n    return this;\n  }\n\n  toString() {\n    return `{type: ScenegraphNode, id: ${this.id})}`;\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrix(matrix, copyMatrix = true) {\n    if (copyMatrix) {\n      this.matrix.copy(matrix);\n    } else {\n      this.matrix = matrix;\n    }\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update({position, rotation, scale} = {}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  /*\n  transform() {\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n  */\n\n  _setScenegraphNodeProps(props) {\n    if ('display' in props) {\n      this.display = props.display;\n    }\n\n    if ('position' in props) {\n      this.setPosition(props.position);\n    }\n    if ('rotation' in props) {\n      this.setRotation(props.rotation);\n    }\n    if ('scale' in props) {\n      this.setScale(props.scale);\n    }\n\n    // Matrix overwrites other props\n    if ('matrix' in props) {\n      this.setMatrix(props.matrix);\n    }\n\n    Object.assign(this.props, props);\n  }\n}\n","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport assert from '../../lib/assert';\n\nvar Vector = function (_MathArray) {\n  _inherits(Vector, _MathArray);\n\n  function Vector() {\n    _classCallCheck(this, Vector);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Vector).apply(this, arguments));\n  }\n\n  _createClass(Vector, [{\n    key: \"len\",\n    value: function len() {\n      return Math.sqrt(this.lengthSquared());\n    }\n  }, {\n    key: \"magnitude\",\n    value: function magnitude() {\n      return this.len();\n    }\n  }, {\n    key: \"lengthSquared\",\n    value: function lengthSquared() {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        length += this[i] * this[i];\n      }\n\n      return length;\n    }\n  }, {\n    key: \"magnitudeSquared\",\n    value: function magnitudeSquared() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distance\",\n    value: function distance(mathArray) {\n      return Math.sqrt(this.distanceSquared(mathArray));\n    }\n  }, {\n    key: \"distanceSquared\",\n    value: function distanceSquared(mathArray) {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        var dist = this[i] - mathArray[i];\n        length += dist * dist;\n      }\n\n      return checkNumber(length);\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(mathArray) {\n      var product = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        product += this[i] * mathArray[i];\n      }\n\n      return checkNumber(product);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var length = this.magnitude();\n\n      if (length !== 0) {\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= length;\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply() {\n      for (var _len = arguments.length, vectors = new Array(_len), _key = 0; _key < _len; _key++) {\n        vectors[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _vectors = vectors; _i < _vectors.length; _i++) {\n        var vector = _vectors[_i];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] *= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"divide\",\n    value: function divide() {\n      for (var _len2 = arguments.length, vectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        vectors[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _vectors2 = vectors; _i2 < _vectors2.length; _i2++) {\n        var vector = _vectors2[_i2];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"lengthSq\",\n    value: function lengthSq() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(vector) {\n      return this.distance(vector);\n    }\n  }, {\n    key: \"distanceToSquared\",\n    value: function distanceToSquared(vector) {\n      return this.distanceSquared(vector);\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(i) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      return checkNumber(this[i]);\n    }\n  }, {\n    key: \"setComponent\",\n    value: function setComponent(i, value) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      this[i] = value;\n      return this.check();\n    }\n  }, {\n    key: \"addVectors\",\n    value: function addVectors(a, b) {\n      return this.copy(a).add(b);\n    }\n  }, {\n    key: \"subVectors\",\n    value: function subVectors(a, b) {\n      return this.copy(a).subtract(b);\n    }\n  }, {\n    key: \"multiplyVectors\",\n    value: function multiplyVectors(a, b) {\n      return this.copy(a).multiply(b);\n    }\n  }, {\n    key: \"addScaledVector\",\n    value: function addScaledVector(a, b) {\n      return this.add(new this.constructor(a).multiplyScalar(b));\n    }\n  }, {\n    key: \"x\",\n    get: function get() {\n      return this[0];\n    },\n    set: function set(value) {\n      return this[0] = checkNumber(value);\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this[1];\n    },\n    set: function set(value) {\n      return this[1] = checkNumber(value);\n    }\n  }]);\n\n  return Vector;\n}(MathArray);\n\nexport { Vector as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nvar ORIGIN = [0, 0, 0];\n\nvar Vector3 = function (_Vector) {\n  _inherits(Vector3, _Vector);\n\n  function Vector3() {\n    var _this;\n\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Vector3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vector3).call(this, -0, -0, -0));\n\n    if (arguments.length === 1 && isArray(x)) {\n      _this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      _this[0] = x;\n      _this[1] = y;\n      _this[2] = z;\n    }\n\n    return _this;\n  }\n\n  _createClass(Vector3, [{\n    key: \"set\",\n    value: function set(x, y, z) {\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      return this.check();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      return this.check();\n    }\n  }, {\n    key: \"fromObject\",\n    value: function fromObject(object) {\n      if (config.debug) {\n        checkNumber(object.x);\n        checkNumber(object.y);\n        checkNumber(object.z);\n      }\n\n      this[0] = object.x;\n      this[1] = object.y;\n      this[2] = object.z;\n      return this.check();\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject(object) {\n      object.x = this[0];\n      object.y = this[1];\n      object.z = this[2];\n      return object;\n    }\n  }, {\n    key: \"angle\",\n    value: function angle(vector) {\n      return vec3.angle(this, vector);\n    }\n  }, {\n    key: \"cross\",\n    value: function cross(vector) {\n      vec3.cross(this, this, vector);\n      return this.check();\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(_ref) {\n      var radians = _ref.radians,\n          _ref$origin = _ref.origin,\n          origin = _ref$origin === void 0 ? ORIGIN : _ref$origin;\n      vec3.rotateX(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(_ref2) {\n      var radians = _ref2.radians,\n          _ref2$origin = _ref2.origin,\n          origin = _ref2$origin === void 0 ? ORIGIN : _ref2$origin;\n      vec3.rotateY(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(_ref3) {\n      var radians = _ref3.radians,\n          _ref3$origin = _ref3.origin,\n          origin = _ref3$origin === void 0 ? ORIGIN : _ref3$origin;\n      vec3.rotateZ(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix4) {\n      return this.transformAsPoint(matrix4);\n    }\n  }, {\n    key: \"transformAsPoint\",\n    value: function transformAsPoint(matrix4) {\n      vec3.transformMat4(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformAsVector\",\n    value: function transformAsVector(matrix4) {\n      vec3_transformMat4AsVector(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix3\",\n    value: function transformByMatrix3(matrix3) {\n      vec3.transformMat3(this, this, matrix3);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix2\",\n    value: function transformByMatrix2(matrix2) {\n      vec3_transformMat2(this, this, matrix2);\n      return this.check();\n    }\n  }, {\n    key: \"transformByQuaternion\",\n    value: function transformByQuaternion(quaternion) {\n      vec3.transformQuat(this, this, quaternion);\n      return this.check();\n    }\n  }, {\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 3;\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this[2];\n    },\n    set: function set(value) {\n      return this[2] = checkNumber(value);\n    }\n  }]);\n\n  return Vector3;\n}(Vector);\n\nexport { Vector3 as default };","import Model from '../../lib/model';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n","let channelHandles = 1;\nlet animationHandles = 1;\n\nexport class Timeline {\n  constructor() {\n    this.time = 0;\n    this.channels = new Map();\n    this.animations = new Map();\n    this.playing = false;\n    this.lastEngineTime = -1;\n  }\n\n  addChannel(props) {\n    const {delay = 0, duration = Number.POSITIVE_INFINITY, rate = 1, repeat = 1} = props;\n\n    const handle = channelHandles++;\n    const channel = {\n      time: 0,\n      delay,\n      duration,\n      rate,\n      repeat\n    };\n    this._setChannelTime(channel, this.time);\n    this.channels.set(handle, channel);\n\n    return handle;\n  }\n\n  removeChannel(handle) {\n    this.channels.delete(handle);\n\n    for (const [animationHandle, animation] of this.animations) {\n      if (animation.channel === handle) {\n        this.detachAnimation(animationHandle);\n      }\n    }\n  }\n\n  isFinished(handle) {\n    const channel = this.channels.get(handle);\n    if (channel === undefined) {\n      return false;\n    }\n\n    return this.time >= channel.delay + channel.duration * channel.repeat;\n  }\n\n  getTime(handle) {\n    if (handle === undefined) {\n      return this.time;\n    }\n\n    const channel = this.channels.get(handle);\n\n    if (channel === undefined) {\n      return -1;\n    }\n\n    return channel.time;\n  }\n\n  setTime(time) {\n    this.time = Math.max(0, time);\n\n    const channels = this.channels.values();\n    for (const channel of channels) {\n      this._setChannelTime(channel, this.time);\n    }\n\n    const animations = this.animations.values();\n    for (const animationData of animations) {\n      const {animation, channel} = animationData;\n      animation.setTime(this.getTime(channel));\n    }\n  }\n\n  play() {\n    this.playing = true;\n  }\n\n  pause() {\n    this.playing = false;\n    this.lastEngineTime = -1;\n  }\n\n  reset() {\n    this.setTime(0);\n  }\n\n  attachAnimation(animation, channelHandle) {\n    const animationHandle = animationHandles++;\n\n    this.animations.set(animationHandle, {\n      animation,\n      channel: channelHandle\n    });\n\n    animation.setTime(this.getTime(channelHandle));\n\n    return animationHandle;\n  }\n\n  detachAnimation(handle) {\n    this.animations.delete(handle);\n  }\n\n  update(engineTime) {\n    if (this.playing) {\n      if (this.lastEngineTime === -1) {\n        this.lastEngineTime = engineTime;\n      }\n      this.setTime(this.time + (engineTime - this.lastEngineTime));\n      this.lastEngineTime = engineTime;\n    }\n  }\n\n  _setChannelTime(channel, time) {\n    const offsetTime = time - channel.delay;\n    const totalDuration = channel.duration * channel.repeat;\n    // Note(Tarek): Don't loop on final repeat.\n    if (offsetTime >= totalDuration) {\n      channel.time = channel.duration * channel.rate;\n    } else {\n      channel.time = Math.max(0, offsetTime) % channel.duration;\n      channel.time *= channel.rate;\n    }\n  }\n}\n","import {Matrix4} from 'math.gl';\n\nconst IDENTITY_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nconst DEFAULT_MODULE_OPTIONS = {\n  modelMatrix: IDENTITY_MATRIX,\n  viewMatrix: IDENTITY_MATRIX,\n  projectionMatrix: IDENTITY_MATRIX,\n  cameraPositionWorld: [0, 0, 0]\n};\n\nfunction getUniforms(opts = DEFAULT_MODULE_OPTIONS, prevUniforms = {}) {\n  // const viewProjectionInverse = viewProjection.invert();\n  // viewInverseMatrix: view.invert(),\n  // viewProjectionInverseMatrix: viewProjectionInverse\n\n  const uniforms = {};\n  if (opts.modelMatrix !== undefined) {\n    uniforms.modelMatrix = opts.modelMatrix;\n  }\n  if (opts.viewMatrix !== undefined) {\n    uniforms.viewMatrix = opts.viewMatrix;\n  }\n  if (opts.projectionMatrix !== undefined) {\n    uniforms.projectionMatrix = opts.projectionMatrix;\n  }\n  if (opts.cameraPositionWorld !== undefined) {\n    uniforms.cameraPositionWorld = opts.cameraPositionWorld;\n  }\n\n  // COMPOSITE UNIFORMS\n  if (opts.projectionMatrix !== undefined || opts.viewMatrix !== undefined) {\n    uniforms.viewProjectionMatrix = new Matrix4(opts.projectionMatrix).multiplyRight(\n      opts.viewMatrix\n    );\n  }\n\n  return uniforms;\n}\n\nconst common = `\\\nvarying vec4 project_vPositionWorld;\nvarying vec3 project_vNormalWorld;\n\nvec4 project_getPosition_World() {\n  return project_vPositionWorld;\n}\n\nvec3 project_getNormal_World() {\n  return project_vNormalWorld;\n}\n`;\n\nconst vs = `\\\n${common}\n\n// Unprefixed uniforms\nuniform mat4 modelMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewProjectionMatrix;\nuniform vec3 cameraPositionWorld;\n\nstruct World {\n  vec3 position;\n  vec3 normal;\n};\n\nWorld world;\n\nvoid project_setPosition(vec4 position) {\n  project_vPositionWorld = position;\n}\n\nvoid project_setNormal(vec3 normal) {\n  project_vNormalWorld = normal;\n}\n\nvoid project_setPositionAndNormal_World(vec3 position, vec3 normal) {\n  world.position = position;\n  world.normal = normal;\n}\n\nvoid project_setPositionAndNormal_Model(vec3 position, vec3 normal) {\n  world.position = (modelMatrix * vec4(position, 1.)).xyz;\n  world.normal = mat3(modelMatrix) * normal;\n}\n\nvec4 project_model_to_clipspace(vec4 position) {\n  return viewProjectionMatrix * modelMatrix * position;\n}\n\nvec4 project_model_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * modelMatrix * vec4(position, 1.);\n}\n\nvec4 project_world_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * vec4(position, 1.);\n}\n\nvec4 project_view_to_clipspace(vec3 position) {\n  return projectionMatrix * vec4(position, 1.);\n}\n\nvec4 project_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * vec4(position, 1.);\n}\n`;\n\nconst fs = `\n${common}\\\n`;\n\nexport default {\n  name: 'project',\n  getUniforms,\n  vs,\n  fs\n};\n","// Cheap lighting - single directional light, single dot product, one uniform\n\nimport project from '../project/project';\n\n/* eslint-disable camelcase */\nconst DEFAULT_LIGHT_DIRECTION = new Float32Array([1, 1, 2]);\n\nconst DEFAULT_MODULE_OPTIONS = {\n  lightDirection: DEFAULT_LIGHT_DIRECTION\n};\n\nfunction getUniforms(opts = DEFAULT_MODULE_OPTIONS) {\n  const uniforms = {};\n  if (opts.lightDirection) {\n    uniforms.dirlight_uLightDirection = opts.lightDirection;\n  }\n  return uniforms;\n}\n\n// TODO - reuse normal from geometry module\nconst vs = null;\n\nconst fs = `\\\nuniform vec3 dirlight_uLightDirection;\n\n/*\n * Returns color attenuated by angle from light source\n */\nvec4 dirlight_filterColor(vec4 color) {\n  vec3 normal = project_getNormal_World();\n  float d = abs(dot(normalize(normal), normalize(dirlight_uLightDirection)));\n  return vec4(color.rgb * d, color.a);\n}\n`;\n\nexport default {\n  name: 'dirlight',\n  vs,\n  fs,\n  getUniforms,\n  dependencies: [project]\n};\n"],"sourceRoot":""}