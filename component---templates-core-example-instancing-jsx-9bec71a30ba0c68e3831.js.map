{"version":3,"sources":["webpack:///../examples/core/instancing/app.js","webpack:///./templates/core/example-instancing.jsx","webpack:///../modules/core/src/geometry/geometry.js","webpack:///../node_modules/seer/dist/index.js","webpack:///../modules/core/src/scenegraph/nodes/scenegraph-node.js","webpack:///../modules/core/src/geometries/cube-geometry.js","webpack:///../node_modules/math.gl/dist/esm/classes/base/vector.js","webpack:///../node_modules/math.gl/dist/esm/classes/vector3.js","webpack:///../modules/core/src/scenegraph/nodes/model-node.js","webpack:///../modules/addons/src/animation/timeline.js","webpack:///../modules/shadertools/src/modules/picking/picking.js","webpack:///../modules/shadertools/src/modules/project/project.js","webpack:///../modules/shadertools/src/modules/dirlight/dirlight.js"],"names":["SIDE","createShaderHook","createModuleInjection","hook","injection","order","Number","POSITIVE_INFINITY","InstancedCube","gl","props","offsets","i","x","j","y","Float32Array","pickingColors","Uint8ClampedArray","_j","colors","map","Math","offsetsBuffer","buffer","colorsBuffer","pickingColorsBuffer","_ModelNode","call","this","Object","assign","vs","fs","modules","dirlight","picking","isInstanced","instanceCount","geometry","cube_geometry","attributes","instanceSizes","instanceOffsets","divisor","instanceColors","instancePickingColors","ModelNode","AppAnimationLoop","_AnimationLoop","createFramebuffer","debug","getInfo","onInitialize","_this","_ref","_animationLoop","setParameters","clearColor","clearDepth","depthTest","depthFunc","LEQUAL","attachTimeline","timeline","play","timeChannel","addChannel","rate","eyeXChannel","eyeYChannel","eyeZChannel","cube","app_InstancedCube","uniforms","uTime","getTime","uProjection","_ref2","aspect","matrix4","perspective","fov","radians","near","far","uView","lookAt","center","eye","uModel","_ref3","tick","rotateX","rotateY","onRender","animationProps","framebuffer","_mousePosition","devicePixels","cssToDevicePixels","pickX","pickY","model","color","depth","picking_uActive","readPixelsToArray","sourceX","sourceY","sourceWidth","sourceHeight","sourceFormat","RGBA","sourceType","UNSIGNED_BYTE","pickingSelectedColor","pickInstance","draw","onFinalize","_ref4","delete","AnimationLoop","window","website","app_AppAnimationLoop","animationLoop","Example","render","pageContext","exampleConfig","react_default","a","createElement","animation_loop_example_page","React","Component","DRAW_MODE","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","Geometry","_props","_props$id","id","uid","_props$drawMode","drawMode","_props$attributes","_props$indices","indices","_props$vertexCount","vertexCount","userData","_setAttributes","_calculateVertexCount","getVertexCount","getAttributes","_print","attributeName","ArrayBuffer","isView","value","size","attribute","assert","undefined","isIndexed","length","Infinity","constant","__webpack_require__","defineProperty","exports","_typeof","Symbol","iterator","obj","constructor","prototype","isBrowser","addEventListener","timers","Map","isReady","__SEER_INITIALIZED__","throttle","key","delay","time","get","now","Date","set","send","type","data","arguments","seen","Set","payload","JSON","stringify","has","add","toString","slice","includes","Array","replacer","postMessage","source","e","console","log","listeners","listener","message","_message$data","typeListeners","forEach","cb","init","__SEER_LISTENER__","list","listItem","itemKey","updateItem","path","multiUpdate","array","deleteItem","addLog","msg","listenFor","Error","push","removeListener","filter","l","clean","removeEventListener","ScenegraphNode","name","display","position","math_gl__WEBPACK_IMPORTED_MODULE_4__","rotation","scale","matrix","math_gl__WEBPACK_IMPORTED_MODULE_5__","_setScenegraphNodeProps","setProps","setPosition","setRotation","setScale","setMatrix","copyMatrix","copy","setMatrixComponents","_ref$update","update","updateMatrix","pos","rot","identity","translate","rotateXYZ","_temp","getCoordinateUniforms","modelMatrix","worldMatrix","viewMatrix","multiplyRight","worldInverse","invert","worldInverseTranspose","transpose","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","CUBE_INDICES","Uint16Array","CUBE_POSITIONS","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","POSITION","NORMAL","TEXCOORD_0","CubeGeometry","_Geometry","vector_Vector","_MathArray","Vector","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","sqrt","lengthSquared","len","ELEMENTS","mathArray","distanceSquared","dist","validators","product","magnitude","check","_len","vectors","_key","_i","_vectors","vector","_len2","_key2","_i2","_vectors2","distance","b","subtract","multiply","multiplyScalar","math_array","d","__webpack_exports__","vector3_Vector3","ORIGIN","_Vector","Vector3","z","common","object","vec3","_ref$origin","origin","_ref2$origin","_ref3$origin","transformAsPoint","gl_matrix_extras","matrix3","matrix2","quaternion","_ScenegraphNode","onBeforeRender","AfterRender","_lib_model__WEBPACK_IMPORTED_MODULE_0__","_setModelNodeProps","managedResources","resource","_this$model","setUniforms","_this$model2","setAttributes","_this$model3","updateModuleSettings","_this$model4","channelHandles","animationHandles","Timeline","channels","animations","playing","lastEngineTime","_proto","_props$delay","_props$duration","duration","_props$rate","_props$repeat","repeat","handle","channel","_setChannelTime","removeChannel","_iterator","_isArray","isArray","next","done","animationHandle","animation","detachAnimation","isFinished","setTime","_iterator2","values","_isArray2","_iterator3","_isArray3","_i3","animationData","pause","reset","attachAnimation","channelHandle","engineTime","offsetTime","DEFAULT_MODULE_OPTIONS","pickingHighlightColor","Uint8Array","pickingThreshold","pickingActive","getUniforms","opts","selectedColor","IDENTITY_MATRIX","projectionMatrix","cameraPositionWorld","project","prevUniforms","lightDirection","dependencies"],"mappings":"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","file":"component---templates-core-example-instancing-jsx-9bec71a30ba0c68e3831.js","sourcesContent":["import {\n  AnimationLoop,\n  setParameters,\n  ModelNode,\n  picking,\n  dirlight,\n  readPixelsToArray,\n  Buffer,\n  CubeGeometry,\n  createShaderHook,\n  createModuleInjection\n} from '@luma.gl/core';\nimport {Timeline} from '@luma.gl/addons';\nimport {cssToDevicePixels} from '@luma.gl/webgl';\nimport {Matrix4, radians} from 'math.gl';\n\nconst INFO_HTML = `\n<p>\nCube drawn with <b>instanced rendering</b>.\n<p>\nA luma.gl <code>Cube</code>, rendering 65,536 instances in a\nsingle GPU draw call using instanced vertex attributes.\n`;\n\nconst SIDE = 256;\n\ncreateShaderHook('vs:MY_SHADER_HOOK_pickColor(inout vec4 color)');\n\ncreateShaderHook('fs:MY_SHADER_HOOK_fragmentColor(inout vec4 color)');\n\ncreateModuleInjection('picking', {\n  hook: 'vs:MY_SHADER_HOOK_pickColor',\n  injection: 'picking_setPickingColor(color.rgb);'\n});\n\ncreateModuleInjection('dirlight', {\n  hook: 'fs:MY_SHADER_HOOK_fragmentColor',\n  injection: 'color = dirlight_filterColor(color);'\n});\n\ncreateModuleInjection('picking', {\n  hook: 'fs:MY_SHADER_HOOK_fragmentColor',\n  injection: 'color = picking_filterColor(color);',\n  order: Number.POSITIVE_INFINITY\n});\n\n// Make a cube with 65K instances and attributes to control offset and color of each instance\nclass InstancedCube extends ModelNode {\n  constructor(gl, props) {\n    let offsets = [];\n    for (let i = 0; i < SIDE; i++) {\n      const x = ((-SIDE + 1) * 3) / 2 + i * 3;\n      for (let j = 0; j < SIDE; j++) {\n        const y = ((-SIDE + 1) * 3) / 2 + j * 3;\n        offsets.push(x, y);\n      }\n    }\n    offsets = new Float32Array(offsets);\n\n    const pickingColors = new Uint8ClampedArray(SIDE * SIDE * 2);\n    for (let i = 0; i < SIDE; i++) {\n      for (let j = 0; j < SIDE; j++) {\n        pickingColors[(i * SIDE + j) * 2 + 0] = i;\n        pickingColors[(i * SIDE + j) * 2 + 1] = j;\n      }\n    }\n\n    const colors = new Float32Array(SIDE * SIDE * 3).map(() => Math.random() * 0.75 + 0.25);\n\n    const vs = `\\\nattribute float instanceSizes;\nattribute vec3 positions;\nattribute vec3 normals;\nattribute vec2 instanceOffsets;\nattribute vec3 instanceColors;\nattribute vec2 instancePickingColors;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\nuniform float uTime;\n\nvarying vec3 color;\n\nvoid main(void) {\n  vec3 normal = vec3(uModel * vec4(normals, 1.0));\n\n  // Set up data for modules\n  color = instanceColors;\n  project_setNormal(normal);\n  vec4 pickColor = vec4(0., instancePickingColors, 1.0);\n  MY_SHADER_HOOK_pickColor(pickColor);\n\n  // Vertex position (z coordinate undulates with time), and model rotates around center\n  float delta = length(instanceOffsets);\n  vec4 offset = vec4(instanceOffsets, sin((uTime + delta) * 0.1) * 16.0, 0);\n  gl_Position = uProjection * uView * (uModel * vec4(positions * instanceSizes, 1.0) + offset);\n}\n`;\n    const fs = `\\\nprecision highp float;\n\nvarying vec3 color;\n\nvoid main(void) {\n  gl_FragColor = vec4(color, 1.);\n  MY_SHADER_HOOK_fragmentColor(gl_FragColor);\n}\n`;\n\n    const offsetsBuffer = new Buffer(gl, offsets);\n    const colorsBuffer = new Buffer(gl, colors);\n    const pickingColorsBuffer = new Buffer(gl, pickingColors);\n\n    super(\n      gl,\n      Object.assign({}, props, {\n        vs,\n        fs,\n        modules: [dirlight, picking],\n        isInstanced: 1,\n        instanceCount: SIDE * SIDE,\n        geometry: new CubeGeometry(),\n        attributes: {\n          instanceSizes: new Float32Array([1]), // Constant attribute\n          instanceOffsets: [offsetsBuffer, {divisor: 1}],\n          instanceColors: [colorsBuffer, {divisor: 1}],\n          instancePickingColors: [pickingColorsBuffer, {divisor: 1}]\n        }\n      })\n    );\n  }\n}\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  constructor() {\n    super({createFramebuffer: true, debug: true});\n  }\n\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({gl, _animationLoop}) {\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      depthTest: true,\n      depthFunc: gl.LEQUAL\n    });\n\n    this.attachTimeline(new Timeline());\n    this.timeline.play();\n\n    const timeChannel = this.timeline.addChannel({\n      rate: 0.01\n    });\n\n    const eyeXChannel = this.timeline.addChannel({\n      rate: 0.0003\n    });\n\n    const eyeYChannel = this.timeline.addChannel({\n      rate: 0.0004\n    });\n\n    const eyeZChannel = this.timeline.addChannel({\n      rate: 0.0002\n    });\n\n    this.cube = new InstancedCube(gl, {\n      _animationLoop,\n      // inject: {\n      //   'fs:#main-end': 'gl_FragColor = picking_filterColor(gl_FragColor)'\n      // },\n      uniforms: {\n        uTime: () => this.timeline.getTime(timeChannel),\n        // Basic projection matrix\n        uProjection: ({aspect}) =>\n          new Matrix4().perspective({fov: radians(60), aspect, near: 1, far: 2048.0}),\n        // Move the eye around the plane\n        uView: () =>\n          new Matrix4().lookAt({\n            center: [0, 0, 0],\n            eye: [\n              (Math.cos(this.timeline.getTime(eyeXChannel)) * SIDE) / 2,\n              (Math.sin(this.timeline.getTime(eyeYChannel)) * SIDE) / 2,\n              ((Math.sin(this.timeline.getTime(eyeZChannel)) + 1) * SIDE) / 4 + 32\n            ]\n          }),\n        // Rotate all the individual cubes\n        uModel: ({tick}) => new Matrix4().rotateX(tick * 0.01).rotateY(tick * 0.013)\n      }\n    });\n  }\n\n  onRender(animationProps) {\n    const {gl} = animationProps;\n\n    const {framebuffer, _mousePosition} = animationProps;\n\n    if (_mousePosition) {\n      // use the center pixel location in device pixel range\n      const devicePixels = cssToDevicePixels(gl, _mousePosition);\n      const deviceX = devicePixels.x + Math.floor(devicePixels.width / 2);\n      const deviceY = devicePixels.y + Math.floor(devicePixels.height / 2);\n\n      pickInstance(gl, deviceX, deviceY, this.cube, framebuffer);\n    }\n\n    // Draw the cubes\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    this.cube.draw();\n  }\n\n  onFinalize({gl}) {\n    this.cube.delete();\n  }\n}\n\nfunction pickInstance(gl, pickX, pickY, model, framebuffer) {\n  framebuffer.clear({color: true, depth: true});\n  // Render picking colors\n  /* eslint-disable camelcase */\n  model.setUniforms({picking_uActive: 1});\n  model.draw({framebuffer});\n  model.setUniforms({picking_uActive: 0});\n\n  const color = readPixelsToArray(framebuffer, {\n    sourceX: pickX,\n    sourceY: pickY,\n    sourceWidth: 1,\n    sourceHeight: 1,\n    sourceFormat: gl.RGBA,\n    sourceType: gl.UNSIGNED_BYTE\n  });\n\n  if (color[0] + color[1] + color[2] > 0) {\n    model.updateModuleSettings({\n      pickingSelectedColor: color\n    });\n  } else {\n    model.updateModuleSettings({\n      pickingSelectedColor: null\n    });\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/core/instancing/app';\n\nexport default class Example extends React.Component {\n  render() {\n    const { pageContext } = this.props;\n    const exampleConfig = (pageContext && pageContext.exampleConfig) || {};\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={exampleConfig} />\n    );\n  }\n}\n","import {uid, assert} from '../utils';\n\n// Rendering primitives - specify how to extract primitives from vertices.\n// NOTE: These are numerically identical to the corresponding WebGL/OpenGL constants\nexport const DRAW_MODE = {\n  POINTS: 0x0000, // draw single points.\n  LINES: 0x0001, // draw lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // draw lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // draw a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // draw triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // draw a connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // draw a connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\nexport default class Geometry {\n  static get DRAW_MODE() {\n    return DRAW_MODE;\n  }\n\n  constructor(props = {}) {\n    const {\n      id = uid('geometry'),\n      drawMode = DRAW_MODE.TRIANGLES,\n      attributes = {},\n      indices = null,\n      vertexCount = null\n    } = props;\n\n    this.id = id;\n    this.drawMode = drawMode | 0;\n    this.attributes = {};\n    this.userData = {};\n\n    this._setAttributes(attributes, indices);\n\n    this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n\n    // stubRemovedMethods(this, [\n    //   'setNeedsRedraw', 'needsRedraw', 'setAttributes'\n    // ], 'Immutable');\n\n    // stubRemovedMethods(this, [\n    //   'hasAttribute', 'getAttribute', 'getArray'\n    // ], 'Use geometry.attributes and geometry.indices');\n\n    // deprecateMethods(this, ['getAttributes'])\n  }\n\n  get mode() {\n    return this.drawMode;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  // Return an object with all attributes plus indices added as a field.\n  getAttributes() {\n    return this.indices ? {indices: this.indices, ...this.attributes} : this.attributes;\n  }\n\n  // PRIVATE\n\n  _print(attributeName) {\n    return `Geometry ${this.id} attribute ${attributeName}`;\n  }\n\n  // Attribute\n  // value: typed array\n  // type: indices, vertices, uvs\n  // size: elements per vertex\n  // target: WebGL buffer type (string or constant)\n  _setAttributes(attributes, indices) {\n    if (indices) {\n      this.indices = ArrayBuffer.isView(indices) ? {value: indices, size: 1} : indices;\n    }\n\n    for (const attributeName in attributes) {\n      let attribute = attributes[attributeName];\n\n      // Wrap \"unwrapped\" arrays and try to autodetect their type\n      attribute = ArrayBuffer.isView(attribute) ? {value: attribute} : attribute;\n\n      assert(\n        ArrayBuffer.isView(attribute.value),\n        `${this._print(attributeName)}: must be typed array or object with value as typed array`\n      );\n\n      if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\n        attribute.size = 3;\n      }\n\n      // Move indices to separate field\n      if (attributeName === 'indices') {\n        assert(!this.indices);\n        this.indices = attribute;\n      } else {\n        this.attributes[attributeName] = attribute;\n      }\n    }\n\n    if (this.indices && this.indices.isIndexed !== undefined) {\n      this.indices = Object.assign({}, this.indices);\n      delete this.indices.isIndexed;\n    }\n\n    return this;\n  }\n\n  _calculateVertexCount(attributes, indices) {\n    if (indices) {\n      return indices.value.length;\n    }\n    let vertexCount = Infinity;\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const {value, size, constant} = attribute;\n      if (!constant && value && size >= 1) {\n        vertexCount = Math.min(vertexCount, value.length / size);\n      }\n    }\n\n    assert(Number.isFinite(vertexCount));\n    return vertexCount;\n  }\n}\n","'use strict';\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n}; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nvar isBrowser = typeof window !== 'undefined' && window.addEventListener;\nvar timers = new Map();\n/**\n * Ready check for Seer initialization\n *\n * @returns {Boolean}\n */\n\nvar isReady = function isReady() {\n  return isBrowser && window.__SEER_INITIALIZED__;\n};\n/**\n * Utility method allowing to throttle a user action based on a key and a minimun delay.\n *\n * @param key {String} A unique key\n * @param delay {Number} The minimal delay to throttle\n * @returns {Boolean}\n */\n\n\nvar throttle = function throttle(key, delay) {\n  var time = timers.get(key);\n  var now = Date.now();\n\n  if (time && now - time < delay) {\n    return true;\n  }\n\n  timers.set(key, now);\n  return false;\n};\n\nvar replacer = function replacer(seen) {\n  return function (key, value) {\n    if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && seen.has(value)) {\n      return;\n    }\n\n    seen.add(value);\n    var isArray = Object.prototype.toString.call(value).slice(8, -1).includes('Array');\n\n    if (isArray) {\n      return Array.prototype.slice.call(value, 0, 20);\n    }\n\n    return value;\n  };\n};\n/**\n * Low-level api leveraging window.postMessage\n *\n * @param type {String} The action type\n * @param payload {Any} The action payload\n */\n\n\nvar send = function send(type) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isBrowser || !isReady()) {\n    return;\n  }\n\n  var seen = new Set();\n  var payload = JSON.stringify(data, replacer(seen));\n\n  try {\n    window.postMessage({\n      type: type,\n      payload: payload,\n      source: 'seer-agent'\n    }, '*');\n  } catch (e) {\n    if (throttle('seer-log', 2E3)) {\n      return;\n    }\n\n    console.log(e); // eslint-disable-line\n  }\n};\n\nvar listeners = new Map();\n\nvar listener = function listener(message) {\n  if (!message || !message.data || message.data.source !== 'seer-core') {\n    return;\n  }\n\n  var _message$data = message.data,\n      type = _message$data.type,\n      payload = _message$data.payload;\n  var typeListeners = listeners.get(type);\n\n  if (typeListeners) {\n    typeListeners.forEach(function (cb) {\n      return cb(payload);\n    });\n  }\n};\n/**\n * Initilize window listener. There will be only one for the whole process\n * to prevent too many registrations.\n *\n * This method will be called automatically if you use the `listenFor` method.\n */\n\n\nvar init = function init() {\n  if (!isBrowser || window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.addEventListener('message', listener);\n  window.__SEER_LISTENER__ = true;\n};\n/**\n * Clean listener. Can be useful in case you want to unregister upcoming events\n * or liberate memory.\n */\n\n\nvar clean = function clean() {\n  if (!isBrowser || !window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.removeEventListener('message', listener);\n  delete window.__SEER_LISTENER__;\n};\n/**\n * Create a listener that will be called upon events of the given key.\n *\n * @param key {String} The unique tab key\n * @param cb {Function} A callback that will receive the message payload\n */\n\n\nvar listenFor = function listenFor(type, cb) {\n  if (!isBrowser) {\n    return;\n  }\n\n  if (!type || !cb) {\n    throw new Error('Please provide a type and callback');\n  }\n\n  if (!listeners.has(type)) {\n    listeners.set(type, []);\n  }\n\n  if (!window.__SEER_LISTENER__) {\n    init();\n  }\n\n  listeners.get(type).push(cb);\n};\n/**\n * Remove an identity listener\n *\n * @param cb {Function} The callback to remove\n */\n\n\nvar removeListener = function removeListener(cb) {\n  listeners.forEach(function (typeListeners, key) {\n    listeners.set(key, typeListeners.filter(function (l) {\n      return l !== cb;\n    }));\n  });\n};\n/**\n * Creates a new indexed list.\n * It works by index to get O(1) accessing and performance.\n *\n * @param key {String} The key of the tab\n * @param data {Object} The indexed object\n */\n\n\nvar list = function list(key, data) {\n  return send('LIST', {\n    key: key,\n    data: data\n  });\n};\n/**\n * Creates an element in the indexed list, based on the itemKey.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param data {Any} The value of the item\n */\n\n\nvar listItem = function listItem(key, itemKey) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return send('LIST_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    data: data\n  });\n};\n/**\n * Update an item property, can be deeply nested.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param path {String} The path of the variable you want to update\n * @param data {Object} The new value\n */\n\n\nvar updateItem = function updateItem(key, itemKey, path, data) {\n  return send('UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    path: path,\n    data: data\n  });\n};\n/**\n * Similar to updateItem, but allows to pass an array with {path,data} pairs for\n * multiple update of the same item without having to send multiple messages.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param array {Array} The array of updates\n * @param array.path {String} The path for this update\n * @param array.data {Object} The value of this update\n */\n\n\nvar multiUpdate = function multiUpdate(key, itemKey, array) {\n  return send('MULTI_UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    array: array\n  });\n};\n/**\n * Remove a specific item in a specific tab.\n *\n * @param key {String} They key of the tab\n * @param itemKey {String} The key of the item\n */\n\n\nvar deleteItem = function deleteItem(key, itemKey) {\n  return send('DELETE_ITEM', {\n    key: key,\n    itemKey: itemKey\n  });\n};\n/**\n * Will create a log message to an item, that will be displayde with the current time.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param msg {String} The message to display\n */\n\n\nvar addLog = function addLog(key, itemKey, msg) {\n  return send('ADD_LOG', {\n    key: key,\n    itemKey: itemKey,\n    msg: msg\n  });\n};\n\nexports[\"default\"] = {\n  send: send,\n  throttle: throttle,\n  isReady: isReady,\n  list: list,\n  listItem: listItem,\n  updateItem: updateItem,\n  multiUpdate: multiUpdate,\n  deleteItem: deleteItem,\n  addLog: addLog,\n  listeners: listeners,\n  listenFor: listenFor,\n  removeListener: removeListener,\n  init: init,\n  clean: clean\n};","import {Vector3, Matrix4} from 'math.gl';\nimport {assert, uid} from '../../utils';\n\nexport default class ScenegraphNode {\n  constructor(props = {}) {\n    const {id} = props;\n\n    this.id = id || uid(this.constructor.name);\n\n    this.display = true; // whether to display the object at all\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n    this.userData = {};\n\n    this.props = {};\n    this._setScenegraphNodeProps(props);\n  }\n\n  delete() {}\n\n  setProps(props) {\n    this._setScenegraphNodeProps(props);\n    return this;\n  }\n\n  toString() {\n    return `{type: ScenegraphNode, id: ${this.id})}`;\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrix(matrix, copyMatrix = true) {\n    if (copyMatrix) {\n      this.matrix.copy(matrix);\n    } else {\n      this.matrix = matrix;\n    }\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update({position, rotation, scale} = {}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  /*\n  transform() {\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n  */\n\n  _setScenegraphNodeProps(props) {\n    if ('display' in props) {\n      this.display = props.display;\n    }\n\n    if ('position' in props) {\n      this.setPosition(props.position);\n    }\n    if ('rotation' in props) {\n      this.setRotation(props.rotation);\n    }\n    if ('scale' in props) {\n      this.setScale(props.scale);\n    }\n\n    // Matrix overwrites other props\n    if ('matrix' in props) {\n      this.setMatrix(props.matrix);\n    }\n\n    Object.assign(this.props, props);\n  }\n}\n","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport assert from '../../lib/assert';\n\nvar Vector = function (_MathArray) {\n  _inherits(Vector, _MathArray);\n\n  function Vector() {\n    _classCallCheck(this, Vector);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Vector).apply(this, arguments));\n  }\n\n  _createClass(Vector, [{\n    key: \"len\",\n    value: function len() {\n      return Math.sqrt(this.lengthSquared());\n    }\n  }, {\n    key: \"magnitude\",\n    value: function magnitude() {\n      return this.len();\n    }\n  }, {\n    key: \"lengthSquared\",\n    value: function lengthSquared() {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        length += this[i] * this[i];\n      }\n\n      return length;\n    }\n  }, {\n    key: \"magnitudeSquared\",\n    value: function magnitudeSquared() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distance\",\n    value: function distance(mathArray) {\n      return Math.sqrt(this.distanceSquared(mathArray));\n    }\n  }, {\n    key: \"distanceSquared\",\n    value: function distanceSquared(mathArray) {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        var dist = this[i] - mathArray[i];\n        length += dist * dist;\n      }\n\n      return checkNumber(length);\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(mathArray) {\n      var product = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        product += this[i] * mathArray[i];\n      }\n\n      return checkNumber(product);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var length = this.magnitude();\n\n      if (length !== 0) {\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= length;\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply() {\n      for (var _len = arguments.length, vectors = new Array(_len), _key = 0; _key < _len; _key++) {\n        vectors[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _vectors = vectors; _i < _vectors.length; _i++) {\n        var vector = _vectors[_i];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] *= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"divide\",\n    value: function divide() {\n      for (var _len2 = arguments.length, vectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        vectors[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _vectors2 = vectors; _i2 < _vectors2.length; _i2++) {\n        var vector = _vectors2[_i2];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"lengthSq\",\n    value: function lengthSq() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(vector) {\n      return this.distance(vector);\n    }\n  }, {\n    key: \"distanceToSquared\",\n    value: function distanceToSquared(vector) {\n      return this.distanceSquared(vector);\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(i) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      return checkNumber(this[i]);\n    }\n  }, {\n    key: \"setComponent\",\n    value: function setComponent(i, value) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      this[i] = value;\n      return this.check();\n    }\n  }, {\n    key: \"addVectors\",\n    value: function addVectors(a, b) {\n      return this.copy(a).add(b);\n    }\n  }, {\n    key: \"subVectors\",\n    value: function subVectors(a, b) {\n      return this.copy(a).subtract(b);\n    }\n  }, {\n    key: \"multiplyVectors\",\n    value: function multiplyVectors(a, b) {\n      return this.copy(a).multiply(b);\n    }\n  }, {\n    key: \"addScaledVector\",\n    value: function addScaledVector(a, b) {\n      return this.add(new this.constructor(a).multiplyScalar(b));\n    }\n  }, {\n    key: \"x\",\n    get: function get() {\n      return this[0];\n    },\n    set: function set(value) {\n      return this[0] = checkNumber(value);\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this[1];\n    },\n    set: function set(value) {\n      return this[1] = checkNumber(value);\n    }\n  }]);\n\n  return Vector;\n}(MathArray);\n\nexport { Vector as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nvar ORIGIN = [0, 0, 0];\n\nvar Vector3 = function (_Vector) {\n  _inherits(Vector3, _Vector);\n\n  function Vector3() {\n    var _this;\n\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Vector3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vector3).call(this, -0, -0, -0));\n\n    if (arguments.length === 1 && isArray(x)) {\n      _this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      _this[0] = x;\n      _this[1] = y;\n      _this[2] = z;\n    }\n\n    return _this;\n  }\n\n  _createClass(Vector3, [{\n    key: \"set\",\n    value: function set(x, y, z) {\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      return this.check();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      return this.check();\n    }\n  }, {\n    key: \"fromObject\",\n    value: function fromObject(object) {\n      if (config.debug) {\n        checkNumber(object.x);\n        checkNumber(object.y);\n        checkNumber(object.z);\n      }\n\n      this[0] = object.x;\n      this[1] = object.y;\n      this[2] = object.z;\n      return this.check();\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject(object) {\n      object.x = this[0];\n      object.y = this[1];\n      object.z = this[2];\n      return object;\n    }\n  }, {\n    key: \"angle\",\n    value: function angle(vector) {\n      return vec3.angle(this, vector);\n    }\n  }, {\n    key: \"cross\",\n    value: function cross(vector) {\n      vec3.cross(this, this, vector);\n      return this.check();\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(_ref) {\n      var radians = _ref.radians,\n          _ref$origin = _ref.origin,\n          origin = _ref$origin === void 0 ? ORIGIN : _ref$origin;\n      vec3.rotateX(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(_ref2) {\n      var radians = _ref2.radians,\n          _ref2$origin = _ref2.origin,\n          origin = _ref2$origin === void 0 ? ORIGIN : _ref2$origin;\n      vec3.rotateY(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(_ref3) {\n      var radians = _ref3.radians,\n          _ref3$origin = _ref3.origin,\n          origin = _ref3$origin === void 0 ? ORIGIN : _ref3$origin;\n      vec3.rotateZ(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix4) {\n      return this.transformAsPoint(matrix4);\n    }\n  }, {\n    key: \"transformAsPoint\",\n    value: function transformAsPoint(matrix4) {\n      vec3.transformMat4(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformAsVector\",\n    value: function transformAsVector(matrix4) {\n      vec3_transformMat4AsVector(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix3\",\n    value: function transformByMatrix3(matrix3) {\n      vec3.transformMat3(this, this, matrix3);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix2\",\n    value: function transformByMatrix2(matrix2) {\n      vec3_transformMat2(this, this, matrix2);\n      return this.check();\n    }\n  }, {\n    key: \"transformByQuaternion\",\n    value: function transformByQuaternion(quaternion) {\n      vec3.transformQuat(this, this, quaternion);\n      return this.check();\n    }\n  }, {\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 3;\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this[2];\n    },\n    set: function set(value) {\n      return this[2] = checkNumber(value);\n    }\n  }]);\n\n  return Vector3;\n}(Vector);\n\nexport { Vector3 as default };","import Model from '../../lib/model';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n","let channelHandles = 1;\nlet animationHandles = 1;\n\nexport class Timeline {\n  constructor() {\n    this.time = 0;\n    this.channels = new Map();\n    this.animations = new Map();\n    this.playing = false;\n    this.lastEngineTime = -1;\n  }\n\n  addChannel(props) {\n    const {delay = 0, duration = Number.POSITIVE_INFINITY, rate = 1, repeat = 1} = props;\n\n    const handle = channelHandles++;\n    const channel = {\n      time: 0,\n      delay,\n      duration,\n      rate,\n      repeat\n    };\n    this._setChannelTime(channel, this.time);\n    this.channels.set(handle, channel);\n\n    return handle;\n  }\n\n  removeChannel(handle) {\n    this.channels.delete(handle);\n\n    for (const [animationHandle, animation] of this.animations) {\n      if (animation.channel === handle) {\n        this.detachAnimation(animationHandle);\n      }\n    }\n  }\n\n  isFinished(handle) {\n    const channel = this.channels.get(handle);\n    if (channel === undefined) {\n      return false;\n    }\n\n    return this.time >= channel.delay + channel.duration * channel.repeat;\n  }\n\n  getTime(handle) {\n    if (handle === undefined) {\n      return this.time;\n    }\n\n    const channel = this.channels.get(handle);\n\n    if (channel === undefined) {\n      return -1;\n    }\n\n    return channel.time;\n  }\n\n  setTime(time) {\n    this.time = Math.max(0, time);\n\n    const channels = this.channels.values();\n    for (const channel of channels) {\n      this._setChannelTime(channel, this.time);\n    }\n\n    const animations = this.animations.values();\n    for (const animationData of animations) {\n      const {animation, channel} = animationData;\n      animation.setTime(this.getTime(channel));\n    }\n  }\n\n  play() {\n    this.playing = true;\n  }\n\n  pause() {\n    this.playing = false;\n    this.lastEngineTime = -1;\n  }\n\n  reset() {\n    this.setTime(0);\n  }\n\n  attachAnimation(animation, channelHandle) {\n    const animationHandle = animationHandles++;\n\n    this.animations.set(animationHandle, {\n      animation,\n      channel: channelHandle\n    });\n\n    animation.setTime(this.getTime(channelHandle));\n\n    return animationHandle;\n  }\n\n  detachAnimation(handle) {\n    this.animations.delete(handle);\n  }\n\n  update(engineTime) {\n    if (this.playing) {\n      if (this.lastEngineTime === -1) {\n        this.lastEngineTime = engineTime;\n      }\n      this.setTime(this.time + (engineTime - this.lastEngineTime));\n      this.lastEngineTime = engineTime;\n    }\n  }\n\n  _setChannelTime(channel, time) {\n    const offsetTime = time - channel.delay;\n    const totalDuration = channel.duration * channel.repeat;\n    // Note(Tarek): Don't loop on final repeat.\n    if (offsetTime >= totalDuration) {\n      channel.time = channel.duration * channel.rate;\n    } else {\n      channel.time = Math.max(0, offsetTime) % channel.duration;\n      channel.time *= channel.rate;\n    }\n  }\n}\n","const DEFAULT_HIGHLIGHT_COLOR = new Uint8Array([0, 255, 255, 255]);\n\nconst DEFAULT_MODULE_OPTIONS = {\n  pickingSelectedColor: null, //  Set to a picking color to visually highlight that item\n  pickingHighlightColor: DEFAULT_HIGHLIGHT_COLOR, // Color of visual highlight of \"selected\" item\n  pickingThreshold: 1.0,\n  pickingActive: false // Set to true when rendering to off-screen \"picking\" buffer\n};\n\n/* eslint-disable camelcase */\nfunction getUniforms(opts = DEFAULT_MODULE_OPTIONS) {\n  const uniforms = {};\n  if (opts.pickingSelectedColor !== undefined) {\n    if (opts.pickingSelectedColor === null) {\n      uniforms.picking_uSelectedColorValid = 0;\n    } else {\n      const selectedColor = [\n        opts.pickingSelectedColor[0],\n        opts.pickingSelectedColor[1],\n        opts.pickingSelectedColor[2]\n      ];\n      uniforms.picking_uSelectedColorValid = 1;\n      uniforms.picking_uSelectedColor = selectedColor;\n    }\n  }\n  if (opts.pickingHighlightColor !== undefined) {\n    uniforms.picking_uHighlightColor = opts.pickingHighlightColor;\n  }\n  // TODO - major hack - decide on normalization and remove\n  if (opts.pickingThreshold !== undefined) {\n    uniforms.picking_uThreshold = opts.pickingThreshold;\n  }\n  if (opts.pickingActive !== undefined) {\n    uniforms.picking_uActive = opts.pickingActive ? 1 : 0;\n  }\n  return uniforms;\n}\n\nconst vs = `\\\nuniform vec3 picking_uSelectedColor;\nuniform float picking_uThreshold;\nuniform bool picking_uSelectedColorValid;\n\nout vec4 picking_vRGBcolor_Aselected;\n\nconst float COLOR_SCALE = 1. / 255.;\n\nbool isVertexPicked(vec3 vertexColor) {\n  return\n    picking_uSelectedColorValid &&\n    abs(vertexColor.r - picking_uSelectedColor.r) < picking_uThreshold &&\n    abs(vertexColor.g - picking_uSelectedColor.g) < picking_uThreshold &&\n    abs(vertexColor.b - picking_uSelectedColor.b) < picking_uThreshold;\n}\n\nvoid picking_setPickingColor(vec3 pickingColor) {\n  // Do the comparison with selected item color in vertex shader as it should mean fewer compares\n  picking_vRGBcolor_Aselected.a =\n    float(isVertexPicked(pickingColor));\n\n  // Stores the picking color so that the fragment shader can render it during picking\n  picking_vRGBcolor_Aselected.rgb = pickingColor * COLOR_SCALE;\n}\n`;\n\nconst fs = `\\\nuniform bool picking_uActive; // true during rendering to offscreen picking buffer\nuniform vec3 picking_uSelectedColor;\nuniform vec4 picking_uHighlightColor;\n\nin vec4 picking_vRGBcolor_Aselected;\n\nconst float COLOR_SCALE = 1. / 255.;\n\n/*\n * Returns highlight color if this item is selected.\n */\nvec4 picking_filterHighlightColor(vec4 color) {\n  bool selected = bool(picking_vRGBcolor_Aselected.a);\n\n  if (selected) {\n    vec4 highLightColor = picking_uHighlightColor * COLOR_SCALE;\n\n    float highLightAlpha = highLightColor.a;\n    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\n    float highLightRatio = highLightAlpha / blendedAlpha;\n\n    vec3 blendedRGB = mix(color.rgb, highLightColor.rgb, highLightRatio);\n    return vec4(blendedRGB, blendedAlpha);\n  } else {\n    return color;\n  }\n}\n\n/*\n * Returns picking color if picking enabled else unmodified argument.\n */\nvec4 picking_filterPickingColor(vec4 color) {\n  vec3 pickingColor = picking_vRGBcolor_Aselected.rgb;\n  if (picking_uActive && length(pickingColor) < 0.001) {\n    discard;\n  }\n  return picking_uActive ? vec4(pickingColor, 1.0) : color;\n}\n\n/*\n * Returns picking color if picking is enabled if not\n * highlight color if this item is selected, otherwise unmodified argument.\n */\nvec4 picking_filterColor(vec4 color) {\n  vec4 highightColor = picking_filterHighlightColor(color);\n  return picking_filterPickingColor(highightColor);\n}\n\n`;\n\nexport default {\n  name: 'picking',\n  vs,\n  fs,\n  getUniforms\n};\n","import {Matrix4} from 'math.gl';\n\nconst IDENTITY_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nconst DEFAULT_MODULE_OPTIONS = {\n  modelMatrix: IDENTITY_MATRIX,\n  viewMatrix: IDENTITY_MATRIX,\n  projectionMatrix: IDENTITY_MATRIX,\n  cameraPositionWorld: [0, 0, 0]\n};\n\nfunction getUniforms(opts = DEFAULT_MODULE_OPTIONS, prevUniforms = {}) {\n  // const viewProjectionInverse = viewProjection.invert();\n  // viewInverseMatrix: view.invert(),\n  // viewProjectionInverseMatrix: viewProjectionInverse\n\n  const uniforms = {};\n  if (opts.modelMatrix !== undefined) {\n    uniforms.modelMatrix = opts.modelMatrix;\n  }\n  if (opts.viewMatrix !== undefined) {\n    uniforms.viewMatrix = opts.viewMatrix;\n  }\n  if (opts.projectionMatrix !== undefined) {\n    uniforms.projectionMatrix = opts.projectionMatrix;\n  }\n  if (opts.cameraPositionWorld !== undefined) {\n    uniforms.cameraPositionWorld = opts.cameraPositionWorld;\n  }\n\n  // COMPOSITE UNIFORMS\n  if (opts.projectionMatrix !== undefined || opts.viewMatrix !== undefined) {\n    uniforms.viewProjectionMatrix = new Matrix4(opts.projectionMatrix).multiplyRight(\n      opts.viewMatrix\n    );\n  }\n\n  return uniforms;\n}\n\nconst common = `\\\nvarying vec4 project_vPositionWorld;\nvarying vec3 project_vNormalWorld;\n\nvec4 project_getPosition_World() {\n  return project_vPositionWorld;\n}\n\nvec3 project_getNormal_World() {\n  return project_vNormalWorld;\n}\n`;\n\nconst vs = `\\\n${common}\n\n// Unprefixed uniforms\nuniform mat4 modelMatrix;\nuniform mat4 viewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewProjectionMatrix;\nuniform vec3 cameraPositionWorld;\n\nstruct World {\n  vec3 position;\n  vec3 normal;\n};\n\nWorld world;\n\nvoid project_setPosition(vec4 position) {\n  project_vPositionWorld = position;\n}\n\nvoid project_setNormal(vec3 normal) {\n  project_vNormalWorld = normal;\n}\n\nvoid project_setPositionAndNormal_World(vec3 position, vec3 normal) {\n  world.position = position;\n  world.normal = normal;\n}\n\nvoid project_setPositionAndNormal_Model(vec3 position, vec3 normal) {\n  world.position = (modelMatrix * vec4(position, 1.)).xyz;\n  world.normal = mat3(modelMatrix) * normal;\n}\n\nvec4 project_model_to_clipspace(vec4 position) {\n  return viewProjectionMatrix * modelMatrix * position;\n}\n\nvec4 project_model_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * modelMatrix * vec4(position, 1.);\n}\n\nvec4 project_world_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * vec4(position, 1.);\n}\n\nvec4 project_view_to_clipspace(vec3 position) {\n  return projectionMatrix * vec4(position, 1.);\n}\n\nvec4 project_to_clipspace(vec3 position) {\n  return viewProjectionMatrix * vec4(position, 1.);\n}\n`;\n\nconst fs = `\n${common}\\\n`;\n\nexport default {\n  name: 'project',\n  getUniforms,\n  vs,\n  fs\n};\n","// Cheap lighting - single directional light, single dot product, one uniform\n\nimport project from '../project/project';\n\n/* eslint-disable camelcase */\nconst DEFAULT_LIGHT_DIRECTION = new Float32Array([1, 1, 2]);\n\nconst DEFAULT_MODULE_OPTIONS = {\n  lightDirection: DEFAULT_LIGHT_DIRECTION\n};\n\nfunction getUniforms(opts = DEFAULT_MODULE_OPTIONS) {\n  const uniforms = {};\n  if (opts.lightDirection) {\n    uniforms.dirlight_uLightDirection = opts.lightDirection;\n  }\n  return uniforms;\n}\n\n// TODO - reuse normal from geometry module\nconst vs = null;\n\nconst fs = `\\\nuniform vec3 dirlight_uLightDirection;\n\n/*\n * Returns color attenuated by angle from light source\n */\nvec4 dirlight_filterColor(vec4 color) {\n  vec3 normal = project_getNormal_World();\n  float d = abs(dot(normalize(normal), normalize(dirlight_uLightDirection)));\n  return vec4(color.rgb * d, color.a);\n}\n`;\n\nexport default {\n  name: 'dirlight',\n  vs,\n  fs,\n  getUniforms,\n  dependencies: [project]\n};\n"],"sourceRoot":""}