{"version":3,"sources":["webpack:///../examples/core/quasicrystals/app.js","webpack:///./templates/core/example-quasicrystals.jsx","webpack:///../modules/core/src/geometry/geometry.js","webpack:///../node_modules/seer/dist/index.js","webpack:///../modules/core/src/lib/clip-space.js"],"names":["AppAnimationLoop","onInitialize","gl","_ref","clipSpace","clip_space","fs","onRender","_ref2","canvas","time","uRatio","document","wavefronts","parseFloat","value","readHTMLControls","uniforms","uTime","Math","getInfo","AnimationLoop","window","website","app_AppAnimationLoop","animationLoop","Example","render","react_default","a","createElement","animation_loop_example_page","exampleConfig","this","props","pageContext","React","Component","DRAW_MODE","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","Geometry","_props","_props$id","id","uid","_props$drawMode","drawMode","_props$attributes","attributes","_props$indices","indices","_props$vertexCount","vertexCount","userData","_setAttributes","_calculateVertexCount","getVertexCount","getAttributes","Object","assign","_print","attributeName","ArrayBuffer","isView","size","attribute","assert","undefined","isIndexed","length","Infinity","constant","Number","__webpack_require__","defineProperty","exports","_typeof","Symbol","iterator","obj","constructor","prototype","isBrowser","addEventListener","timers","Map","isReady","__SEER_INITIALIZED__","throttle","key","delay","get","now","Date","set","send","type","data","arguments","seen","Set","payload","JSON","stringify","has","add","toString","call","slice","includes","Array","replacer","postMessage","source","e","console","log","listeners","listener","message","_message$data","typeListeners","forEach","cb","init","__SEER_LISTENER__","list","listItem","itemKey","updateItem","path","multiUpdate","array","deleteItem","addLog","msg","listenFor","Error","push","removeListener","filter","l","clean","removeEventListener","CLIPSPACE_VERTEX_SHADER","POSITIONS","ClipSpace","opts","_this","TEX_COORDS","map","coord","_Model","vs","geometry","_geometry_geometry__WEBPACK_IMPORTED_MODULE_4__","GL","aClipSpacePosition","Float32Array","aTexCoord","aCoordinate","setVertexCount","Model"],"mappings":"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","file":"component---templates-core-example-quasicrystals-jsx-7b8c36d11f933caefa42.js","sourcesContent":["import {AnimationLoop, ClipSpace} from '@luma.gl/core';\n\nconst INFO_HTML = `\n<p>\n  <code>Animating Quasicrystals</code>\n<p>\n  Crystal patterns generated by wavefront interference patterns.\n  Rendered by a custom fragment shader in a luma.gl <code>ClipSpace</code> model.\n  A luma.gl port (of the PhiloGL port) of the work of\n  <a href=\"http://www.jasondavies.com/animated-quasicrystals/\">Jason Davies</a>\n</p>\n<div>\n  Wavefronts\n  <input id=\"wavefronts\" type=\"range\" value=\"7.0\" min=\"1\" max=\"10\" step=\"0.1\">\n</div>\n`;\n\nconst FRAGMENT_SHADER = `\\\nprecision highp float;\n\n#define PI 3.1415926535\n\nuniform float uTime;\nuniform float uRatio;\n\nvarying vec2 position;\n\nvoid main(void) {\n  vec2 defpixel = (position - vec2( 0.5 ) ) * 170.;\n\n  float step = PI / uRatio;\n\n  // Sum up total of all waves\n  float total;\n  for (float i = 0.; i < 100.; i++) {\n    if ( i < uRatio ) {\n      float value = i * step;\n      float s = sin( value );\n      float c = cos( value );\n      total += ( cos( c * defpixel.x + s * defpixel.y + uTime ) + 1. ) / 2.;\n    }\n  }\n\n  float v = mod(total, 1.);\n  float k = total - v;\n  total = ( mod( abs( k ), 2. ) ) <= 0.0001 ? v : 1. - v;\n\n  gl_FragColor =\n    vec4( total * (1. - (uRatio / 20.)), total * (uRatio / 10.), total * (uRatio / 5.), 1. );\n}\n`;\n\nfunction readHTMLControls() {\n  /* global document */\n  if (typeof document === 'undefined') {\n    return {uRatio: 7.0};\n  }\n  const wavefronts = document.getElementById('wavefronts');\n\n  const uRatio = wavefronts ? parseFloat(wavefronts.value) : 7.0;\n  return {uRatio};\n}\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  onInitialize({gl}) {\n    return {clipSpace: new ClipSpace(gl, {fs: FRAGMENT_SHADER})};\n  }\n\n  onRender({gl, canvas, time, clipSpace}) {\n    const {uRatio} = readHTMLControls();\n    clipSpace.draw({\n      uniforms: {\n        uTime: (time / 600) % (Math.PI * 2),\n        uRatio\n      }\n    });\n  }\n\n  static getInfo() {\n    return INFO_HTML;\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/core/quasicrystals/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import {uid, assert} from '../utils';\n\n// Rendering primitives - specify how to extract primitives from vertices.\n// NOTE: These are numerically identical to the corresponding WebGL/OpenGL constants\nexport const DRAW_MODE = {\n  POINTS: 0x0000, // draw single points.\n  LINES: 0x0001, // draw lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // draw lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // draw a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // draw triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // draw a connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // draw a connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\nexport default class Geometry {\n  static get DRAW_MODE() {\n    return DRAW_MODE;\n  }\n\n  constructor(props = {}) {\n    const {\n      id = uid('geometry'),\n      drawMode = DRAW_MODE.TRIANGLES,\n      attributes = {},\n      indices = null,\n      vertexCount = null\n    } = props;\n\n    this.id = id;\n    this.drawMode = drawMode | 0;\n    this.attributes = {};\n    this.userData = {};\n\n    this._setAttributes(attributes, indices);\n\n    this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n\n    // stubRemovedMethods(this, [\n    //   'setNeedsRedraw', 'needsRedraw', 'setAttributes'\n    // ], 'Immutable');\n\n    // stubRemovedMethods(this, [\n    //   'hasAttribute', 'getAttribute', 'getArray'\n    // ], 'Use geometry.attributes and geometry.indices');\n\n    // deprecateMethods(this, ['getAttributes'])\n  }\n\n  get mode() {\n    return this.drawMode;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  // Return an object with all attributes plus indices added as a field.\n  getAttributes() {\n    return this.indices ? {indices: this.indices, ...this.attributes} : this.attributes;\n  }\n\n  // PRIVATE\n\n  _print(attributeName) {\n    return `Geometry ${this.id} attribute ${attributeName}`;\n  }\n\n  // Attribute\n  // value: typed array\n  // type: indices, vertices, uvs\n  // size: elements per vertex\n  // target: WebGL buffer type (string or constant)\n  _setAttributes(attributes, indices) {\n    if (indices) {\n      this.indices = ArrayBuffer.isView(indices) ? {value: indices, size: 1} : indices;\n    }\n\n    for (const attributeName in attributes) {\n      let attribute = attributes[attributeName];\n\n      // Wrap \"unwrapped\" arrays and try to autodetect their type\n      attribute = ArrayBuffer.isView(attribute) ? {value: attribute} : attribute;\n\n      assert(\n        ArrayBuffer.isView(attribute.value),\n        `${this._print(attributeName)}: must be typed array or object with value as typed array`\n      );\n\n      if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\n        attribute.size = 3;\n      }\n\n      // Move indices to separate field\n      if (attributeName === 'indices') {\n        assert(!this.indices);\n        this.indices = attribute;\n      } else {\n        this.attributes[attributeName] = attribute;\n      }\n    }\n\n    if (this.indices && this.indices.isIndexed !== undefined) {\n      this.indices = Object.assign({}, this.indices);\n      delete this.indices.isIndexed;\n    }\n\n    return this;\n  }\n\n  _calculateVertexCount(attributes, indices) {\n    if (indices) {\n      return indices.value.length;\n    }\n    let vertexCount = Infinity;\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const {value, size, constant} = attribute;\n      if (!constant && value && size >= 1) {\n        vertexCount = Math.min(vertexCount, value.length / size);\n      }\n    }\n\n    assert(Number.isFinite(vertexCount));\n    return vertexCount;\n  }\n}\n","'use strict';\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n}; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nvar isBrowser = typeof window !== 'undefined' && window.addEventListener;\nvar timers = new Map();\n/**\n * Ready check for Seer initialization\n *\n * @returns {Boolean}\n */\n\nvar isReady = function isReady() {\n  return isBrowser && window.__SEER_INITIALIZED__;\n};\n/**\n * Utility method allowing to throttle a user action based on a key and a minimun delay.\n *\n * @param key {String} A unique key\n * @param delay {Number} The minimal delay to throttle\n * @returns {Boolean}\n */\n\n\nvar throttle = function throttle(key, delay) {\n  var time = timers.get(key);\n  var now = Date.now();\n\n  if (time && now - time < delay) {\n    return true;\n  }\n\n  timers.set(key, now);\n  return false;\n};\n\nvar replacer = function replacer(seen) {\n  return function (key, value) {\n    if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && seen.has(value)) {\n      return;\n    }\n\n    seen.add(value);\n    var isArray = Object.prototype.toString.call(value).slice(8, -1).includes('Array');\n\n    if (isArray) {\n      return Array.prototype.slice.call(value, 0, 20);\n    }\n\n    return value;\n  };\n};\n/**\n * Low-level api leveraging window.postMessage\n *\n * @param type {String} The action type\n * @param payload {Any} The action payload\n */\n\n\nvar send = function send(type) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isBrowser || !isReady()) {\n    return;\n  }\n\n  var seen = new Set();\n  var payload = JSON.stringify(data, replacer(seen));\n\n  try {\n    window.postMessage({\n      type: type,\n      payload: payload,\n      source: 'seer-agent'\n    }, '*');\n  } catch (e) {\n    if (throttle('seer-log', 2E3)) {\n      return;\n    }\n\n    console.log(e); // eslint-disable-line\n  }\n};\n\nvar listeners = new Map();\n\nvar listener = function listener(message) {\n  if (!message || !message.data || message.data.source !== 'seer-core') {\n    return;\n  }\n\n  var _message$data = message.data,\n      type = _message$data.type,\n      payload = _message$data.payload;\n  var typeListeners = listeners.get(type);\n\n  if (typeListeners) {\n    typeListeners.forEach(function (cb) {\n      return cb(payload);\n    });\n  }\n};\n/**\n * Initilize window listener. There will be only one for the whole process\n * to prevent too many registrations.\n *\n * This method will be called automatically if you use the `listenFor` method.\n */\n\n\nvar init = function init() {\n  if (!isBrowser || window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.addEventListener('message', listener);\n  window.__SEER_LISTENER__ = true;\n};\n/**\n * Clean listener. Can be useful in case you want to unregister upcoming events\n * or liberate memory.\n */\n\n\nvar clean = function clean() {\n  if (!isBrowser || !window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.removeEventListener('message', listener);\n  delete window.__SEER_LISTENER__;\n};\n/**\n * Create a listener that will be called upon events of the given key.\n *\n * @param key {String} The unique tab key\n * @param cb {Function} A callback that will receive the message payload\n */\n\n\nvar listenFor = function listenFor(type, cb) {\n  if (!isBrowser) {\n    return;\n  }\n\n  if (!type || !cb) {\n    throw new Error('Please provide a type and callback');\n  }\n\n  if (!listeners.has(type)) {\n    listeners.set(type, []);\n  }\n\n  if (!window.__SEER_LISTENER__) {\n    init();\n  }\n\n  listeners.get(type).push(cb);\n};\n/**\n * Remove an identity listener\n *\n * @param cb {Function} The callback to remove\n */\n\n\nvar removeListener = function removeListener(cb) {\n  listeners.forEach(function (typeListeners, key) {\n    listeners.set(key, typeListeners.filter(function (l) {\n      return l !== cb;\n    }));\n  });\n};\n/**\n * Creates a new indexed list.\n * It works by index to get O(1) accessing and performance.\n *\n * @param key {String} The key of the tab\n * @param data {Object} The indexed object\n */\n\n\nvar list = function list(key, data) {\n  return send('LIST', {\n    key: key,\n    data: data\n  });\n};\n/**\n * Creates an element in the indexed list, based on the itemKey.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param data {Any} The value of the item\n */\n\n\nvar listItem = function listItem(key, itemKey) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return send('LIST_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    data: data\n  });\n};\n/**\n * Update an item property, can be deeply nested.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param path {String} The path of the variable you want to update\n * @param data {Object} The new value\n */\n\n\nvar updateItem = function updateItem(key, itemKey, path, data) {\n  return send('UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    path: path,\n    data: data\n  });\n};\n/**\n * Similar to updateItem, but allows to pass an array with {path,data} pairs for\n * multiple update of the same item without having to send multiple messages.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param array {Array} The array of updates\n * @param array.path {String} The path for this update\n * @param array.data {Object} The value of this update\n */\n\n\nvar multiUpdate = function multiUpdate(key, itemKey, array) {\n  return send('MULTI_UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    array: array\n  });\n};\n/**\n * Remove a specific item in a specific tab.\n *\n * @param key {String} They key of the tab\n * @param itemKey {String} The key of the item\n */\n\n\nvar deleteItem = function deleteItem(key, itemKey) {\n  return send('DELETE_ITEM', {\n    key: key,\n    itemKey: itemKey\n  });\n};\n/**\n * Will create a log message to an item, that will be displayde with the current time.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param msg {String} The message to display\n */\n\n\nvar addLog = function addLog(key, itemKey, msg) {\n  return send('ADD_LOG', {\n    key: key,\n    itemKey: itemKey,\n    msg: msg\n  });\n};\n\nexports[\"default\"] = {\n  send: send,\n  throttle: throttle,\n  isReady: isReady,\n  list: list,\n  listItem: listItem,\n  updateItem: updateItem,\n  multiUpdate: multiUpdate,\n  deleteItem: deleteItem,\n  addLog: addLog,\n  listeners: listeners,\n  listenFor: listenFor,\n  removeListener: removeListener,\n  init: init,\n  clean: clean\n};","// ClipSpace\nimport GL from '@luma.gl/constants';\nimport Model from '../lib/model';\nimport Geometry from '../geometry/geometry';\n\nconst CLIPSPACE_VERTEX_SHADER = `\\\nattribute vec2 aClipSpacePosition;\nattribute vec2 aTexCoord;\nattribute vec2 aCoordinate;\n\nvarying vec2 position;\nvarying vec2 coordinate;\nvarying vec2 uv;\n\nvoid main(void) {\n  gl_Position = vec4(aClipSpacePosition, 0., 1.);\n  position = aClipSpacePosition;\n  coordinate = aCoordinate;\n  uv = aTexCoord;\n}\n`;\n\n/* eslint-disable indent, no-multi-spaces */\nconst POSITIONS = [-1, -1, 1, -1, -1, 1, 1, 1];\n\nexport default class ClipSpace extends Model {\n  constructor(gl, opts) {\n    const TEX_COORDS = POSITIONS.map(coord => (coord === -1 ? 0 : coord));\n\n    super(\n      gl,\n      Object.assign({}, opts, {\n        vs: CLIPSPACE_VERTEX_SHADER,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          vertexCount: 4,\n          attributes: {\n            aClipSpacePosition: {size: 2, value: new Float32Array(POSITIONS)},\n            aTexCoord: {size: 2, value: new Float32Array(TEX_COORDS)},\n            aCoordinate: {size: 2, value: new Float32Array(TEX_COORDS)}\n          }\n        })\n      })\n    );\n    this.setVertexCount(4);\n  }\n}\n"],"sourceRoot":""}