{"version":3,"sources":["webpack:///../examples/core/shadowmap/app.js","webpack:///./templates/core/example-shadowmap.jsx","webpack:///../modules/core/src/geometries/cube-geometry.js"],"names":["AppAnimationLoop","getInfo","onInitialize","gl","setParameters","depthTest","depthFunc","GL","LEQUAL","fbShadow","id","width","height","cube","geometry","vs","fs","shadow","onRender","tick","aspect","model","model2","clear","framebuffer","color","depth","lightPos","shadowView","eye","center","up","shadowProj","left","right","bottom","top","near","far","uniforms","uModel","uView","uProjection","uLightPosition","camView","camProj","fov","radians","uShadowView","uShadowProj","uShadowMap","uShadow","AnimationLoop","window","animationLoop","Example","render","exampleConfig","this","props","pageContext","React","Component","CUBE_INDICES","Uint16Array","CUBE_POSITIONS","Float32Array","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","POSITION","size","value","NORMAL","TEXCOORD_0","CubeGeometry","uid","indices","attributes","Geometry"],"mappings":"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","file":"component---templates-core-example-shadowmap-jsx-7d588a41ae8f70ee2c81.js","sourcesContent":["import GL from '@luma.gl/constants';\nimport {AnimationLoop, Framebuffer, setParameters, clear, CubeGeometry, Model} from '@luma.gl/core';\nimport {Matrix4, radians} from 'math.gl';\n\nconst INFO_HTML = `\n<p>\n  Simple <b>shadow mapping</b>.\n<p>\nA luma.gl <code>Cube</code>, rendering into a shadowmap framebuffer\nand then rendering onto the screen.\n`;\n\nconst SCENE_FRAGMENT = `\\\nprecision highp float;\n\nuniform sampler2D uShadowMap;\nuniform float uShadow;\n\nvarying vec4 shadowCoord;\nvarying vec3 normal;\n\nvoid main(void) {\n  float d = clamp(dot(normalize(normal), vec3(0,1,0)), 0.25, 1.0);\n  float s = 1.0;\n  if (texture2D(uShadowMap, shadowCoord.xy).z < shadowCoord.z - 0.005) {\n    s -= 0.5 * uShadow;\n  }\n  float c = d * s;\n  gl_FragColor = vec4(c,c,c,1);\n}\n`;\n\nconst SCENE_VERTEX = `\\\n#define SHADER_NAME scene.vs\n\nattribute vec3 positions;\nattribute vec3 normals;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\nuniform mat4 uShadowView;\nuniform mat4 uShadowProj;\n\nvarying vec4 shadowCoord;\nvarying vec3 normal;\n\nvoid main(void) {\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n  normal = vec3(uModel * vec4(normals, 0.0));\n  mat4 bias = mat4(\n    0.5, 0.0, 0.0, 0.0,\n    0.0, 0.5, 0.0, 0.0,\n    0.0, 0.0, 0.5, 0.0,\n    0.5, 0.5, 0.5, 1.0\n  );\n  shadowCoord = bias * uShadowProj * uShadowView * uModel * vec4(positions, 1.0);\n}\n`;\n\nconst SHADOWMAP_VERTEX = `\\\n#define SHADER_NAME shadowmap.vs\n\nattribute vec3 positions;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nvoid main(void) {\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n}\n`;\n\nconst SHADOWMAP_FRAGMENT = `\\\nprecision highp float;\n\nvoid main(void) {\n  gl_FragColor = vec4(0,0,gl_FragCoord.z,1);\n}\n`;\n\n// const q = 1;\n// const y = -3;\n// const plane = [\n//   -q, y, q, q, y, q, q, y, -q,\n//   -q, y, q, q, y, -q, -q, y, -q\n// ];\n\n// const planeBuffers = {\n//   positions: new Buffer(gl).setData({\n//     data: new Float32Array(plane),\n//     size: 3\n//   })\n// };\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  // gl: createGLContext()})\n  onInitialize({gl}) {\n    setParameters(gl, {\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    return {\n      fbShadow: new Framebuffer(gl, {id: 'shadowmap', width: 1024, height: 1024}),\n      cube: new Model(gl, {geometry: new CubeGeometry(), vs: SCENE_VERTEX, fs: SCENE_FRAGMENT}),\n      shadow: new Model(gl, {\n        geometry: new CubeGeometry(),\n        vs: SHADOWMAP_VERTEX,\n        fs: SHADOWMAP_FRAGMENT\n      })\n    };\n  }\n\n  onRender({gl, tick, width, height, aspect, cube, shadow, fbShadow}) {\n    const model = new Matrix4()\n      .translate([0, 6, 0])\n      .rotateXYZ([tick * 0.01, 0, 0])\n      .rotateXYZ([0, tick * 0.013, 0]);\n\n    const model2 = new Matrix4()\n      .scale([2, -2, 2])\n      .translate([0, 0, 0])\n      .rotateXYZ([0, 0, tick * 0.007]);\n\n    // Render the shadow buffer\n    gl.viewport(0, 0, 1024, 1024);\n    clear(gl, {framebuffer: fbShadow, color: [1, 1, 1, 1], depth: true});\n\n    const lightPos = [0, 8, 0];\n    const shadowView = new Matrix4().lookAt({eye: lightPos, center: [0, 0, 0], up: [0, 0, -1]});\n    const shadowProj = new Matrix4().ortho({\n      left: -4,\n      right: 4,\n      bottom: -4,\n      top: 4,\n      near: 0,\n      far: 64\n    });\n\n    shadow.draw({\n      framebuffer: fbShadow,\n      uniforms: {\n        uModel: model,\n        uView: shadowView,\n        uProjection: shadowProj,\n        uLightPosition: lightPos\n      }\n    });\n\n    // Render the screen\n    gl.viewport(0, 0, width, height);\n    clear(gl, {color: [0, 0.2, 0, 1], depth: true});\n\n    const camView = new Matrix4().lookAt({eye: [0, 8, 8], center: [0, 3, 0], up: [0, 1, 0]});\n    const camProj = new Matrix4().perspective({fov: radians(75), aspect, near: 0.1, far: 100});\n\n    cube.setUniforms({\n      uView: camView,\n      uProjection: camProj,\n      uShadowView: shadowView,\n      uShadowProj: shadowProj,\n      uShadowMap: fbShadow\n    });\n\n    cube.draw({\n      framebuffer: null,\n      uniforms: {\n        uModel: model,\n        uShadow: 0.0\n      }\n    });\n\n    cube.draw({\n      framebuffer: null,\n      uniforms: {\n        uModel: model2,\n        uShadow: 1.0\n      }\n    });\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/core/shadowmap/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n"],"sourceRoot":""}