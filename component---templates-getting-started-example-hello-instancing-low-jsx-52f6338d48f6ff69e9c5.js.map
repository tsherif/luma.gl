{"version":3,"sources":["webpack:///../examples/utils/index.js","webpack:///../examples/getting-started/hello-instancing-low/app.js","webpack:///./templates/getting-started/example-hello-instancing-low.jsx"],"names":["MiniAnimationLoop","start","stop","delete","_setDisplay","_getCanvas","props","canvas","document","dpr","window","getRandom","s","c","Math","n","colorShaderModule","name","vs","fs","AppAnimationLoop","getInfo","this","gl","polyfillContext","assembled","assembleShaders","modules","vShader","fShader","program","vertexArray","positionBuffer","Float32Array","positionLocation","colorBuffer","colorLocation","offsetBuffer","offsetLocation","resources","requestAnimationFrame","draw","cancelAnimationFrame","animationLoop","Example","render","pageContext","exampleConfig","AnimationLoop","React","Component"],"mappings":"4FAAA,oEAIA,IAAaA,EAAb,mCACE,WACE,MAAM,IAFV,iCAKEC,aALF,OAOEC,aAPF,SASEC,aATF,cAWEC,aAXF,aAaEC,YACE,MACA,QAFqB,IAAZC,MAAQ,IAEbA,EAAJ,OAAkB,CAChBC,EAASC,wBAAwBF,EAAjCC,QACA,IAAME,EAAMC,yBAAZ,EACAH,SAAgBA,eAAhBA,EACAA,QAAeA,cAAfA,OAEAA,EAASC,uBAATD,WACAA,UACAA,aACAC,6BAGF,OAAOD,GA3BX,KAgCO,SAASI,IACd,IAAIC,EAAJ,EACIC,EAAJ,EACA,OAAO,WAGL,OAFAD,EAAIE,SAAJF,MAAaC,GACbA,EAAIC,SAAJD,MAAaD,IAKFG,EAJX,QAAaD,SAASF,EAATE,IAKJA,WAAX,GADF,IAAeC,K,8HCzCf,IAOMC,EAAoB,CACxBC,KADwB,QAExBC,GAFwB,oHASxBC,GAAG,0GASgBC,E,+JACZC,QAAP,WACE,MA3BJ,iG,2BA8BEpB,kBACE,IAAMM,EAASe,KAAKjB,WAApB,GAEMkB,EAAKC,YAAgBjB,aAA3B,UACAgB,sBAEA,IAgBME,EAAYC,YAAgBH,EAAI,CACpCL,GAjBF,8NAkBEC,GARF,4FASEQ,QAAS,CAACX,KAGNY,EAAUL,eAAgBA,EAAhC,eACAA,iBAAyBE,EAAzBF,IACAA,mBAEA,IAAMM,EAAUN,eAAgBA,EAAhC,iBACAA,iBAAyBE,EAAzBF,IACAA,mBAEA,IAAMO,EAAUP,EAAhB,gBACAA,oBACAA,oBACAA,iBAEA,IAAMQ,EAAcR,EAApB,oBACAA,qBAEA,IAAMS,EAAiBT,EAAvB,eACAA,aAAcA,EAAdA,gBACAA,aACEA,EADFA,aAEE,IAAIU,aAAa,kBAFnBV,KAGEA,EAHFA,aAMA,IAAMW,EAAmBX,sBAAzB,YACAA,0BAA4CA,EAA5CA,cACAA,6BAEA,IAAMY,EAAcZ,EAApB,eACAA,aAAcA,EAAdA,gBACAA,aACEA,EADFA,aAEE,IAAIU,aAAa,CAAC,EAAI,EAAL,kBAFnBV,IAGEA,EAHFA,aAMA,IAAMa,EAAgBb,sBAAtB,SACAA,0BAAyCA,EAAzCA,cACAA,2BACAA,6BAEA,IAAMc,EAAed,EAArB,eACAA,aAAcA,EAAdA,gBACAA,aACEA,EADFA,aAEE,IAAIU,aAAa,CAAC,GAAI,IAAL,kBAFnBV,KAGEA,EAHFA,aAMA,IAAMe,EAAiBf,sBAAvB,UACAA,0BAA0CA,EAA1CA,cACAA,2BACAA,6BAEAA,wBAEA,IAAMgB,EAAY,CAChBhB,GADgB,EAEhBS,eAFgB,EAGhBG,YAHgB,EAIhBE,aAJgB,EAKhBP,QALgB,EAMhBC,eAGFQ,YAAsBC,uBAAsB,SAASC,IACnDF,YAAsBC,sBAAtBD,GAEAhB,QAASA,EAATA,kBACAA,qBACAA,gBACAA,sBAAuBA,EAAvBA,oBAGFA,kBACAA,kBAEAD,KAAKiB,UAAL,G,EAGFrC,gBACEwC,qBAAqBpB,KAAKiB,UAA1BG,Y,EAGFvC,kBAAU,IAAD,EACuEmB,KADvE,UACAC,EADA,KACIS,EADJ,iBACoBG,EADpB,cACiCE,EADjC,eAC+CP,EAD/C,UACwDC,EADxD,cAEPR,kBACAA,kBACAA,kBACAA,mBACAA,wB,GA3H0CvB,KAgI1C,oBAAOU,QAA2BA,OAAtC,UACwB,IAAtB,GACAiC,Q,4CC5JmBC,E,gLACnBC,kBAAU,IACAC,EAAgBxB,KADjB,kBAEDyB,EAAiBD,GAAeA,EAAhB,eAAtB,GACA,OACE,uBAA0BE,cAA1B,EAAwDD,cAAeA,K,GALxCE,IAAMC","file":"component---templates-getting-started-example-hello-instancing-low-jsx-52f6338d48f6ff69e9c5.js","sourcesContent":["/* global window, document */\n\n// Light class implementing the AnimationLoop interface\n// use by examples w/o creating a gl context\nexport class MiniAnimationLoop {\n  static getInfo() {\n    return '';\n  }\n\n  start() {}\n\n  stop() {}\n\n  delete() {}\n\n  _setDisplay() {}\n\n  _getCanvas(props = {}) {\n    let canvas;\n    if (props.canvas) {\n      canvas = document.getElementById(props.canvas);\n      const dpr = window.devicePixelRatio || 1;\n      canvas.height = canvas.clientHeight * dpr;\n      canvas.width = canvas.clientWidth * dpr;\n    } else {\n      canvas = document.createElement('canvas');\n      canvas.width = 800;\n      canvas.height = 600;\n      document.body.appendChild(canvas);\n    }\n\n    return canvas;\n  }\n}\n\n// Create a deterministic pseudorandom number generator\nexport function getRandom() {\n  let s = 1;\n  let c = 1;\n  return () => {\n    s = Math.sin(c * 17.23);\n    c = Math.cos(s * 27.92);\n    return fract(Math.abs(s * c) * 1432.71);\n  };\n}\n\nfunction fract(n) {\n  return n - Math.floor(n);\n}\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport {assembleShaders} from '@luma.gl/shadertools';\nimport {polyfillContext} from '@luma.gl/gltools';\nimport {MiniAnimationLoop} from '../../utils';\n\nconst INFO_HTML = `\n<p>\nHello Instancing - Low-level\n<p>\nInstanced triangles using luma.gl's low-level API\n`;\n\nconst colorShaderModule = {\n  name: 'color',\n  vs: `\n    varying vec3 color_vColor;\n\n    void color_setColor(vec3 color) {\n      color_vColor = color;\n    }\n  `,\n  fs: `\n    varying vec3 color_vColor;\n\n    vec3 color_getColor() {\n      return color_vColor;\n    }\n  `\n};\n\nexport default class AppAnimationLoop extends MiniAnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  start(props) {\n    const canvas = this._getCanvas(props);\n\n    const gl = polyfillContext(canvas.getContext('webgl'));\n    gl.clearColor(0, 0, 0, 1);\n\n    const vs = `\n      attribute vec2 position;\n      attribute vec3 color;\n      attribute vec2 offset;\n\n      void main() {\n        color_setColor(color);\n        gl_Position = vec4(position + offset, 0.0, 1.0);\n      }\n    `;\n    const fs = `\n      void main() {\n        gl_FragColor = vec4(color_getColor(), 1.0);\n      }\n    `;\n\n    const assembled = assembleShaders(gl, {\n      vs,\n      fs,\n      modules: [colorShaderModule]\n    });\n\n    const vShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vShader, assembled.vs);\n    gl.compileShader(vShader);\n\n    const fShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fShader, assembled.fs);\n    gl.compileShader(fShader);\n\n    const program = gl.createProgram();\n    gl.attachShader(program, vShader);\n    gl.attachShader(program, fShader);\n    gl.linkProgram(program);\n\n    const vertexArray = gl.createVertexArray();\n    gl.bindVertexArray(vertexArray);\n\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array([-0.2, -0.2, 0.2, -0.2, 0.0, 0.2]),\n      gl.STATIC_DRAW\n    );\n\n    const positionLocation = gl.getAttribLocation(program, 'position');\n    gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(positionLocation);\n\n    const colorBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array([1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0]),\n      gl.STATIC_DRAW\n    );\n\n    const colorLocation = gl.getAttribLocation(program, 'color');\n    gl.vertexAttribPointer(colorLocation, 3, gl.FLOAT, false, 0, 0);\n    gl.vertexAttribDivisor(colorLocation, 1);\n    gl.enableVertexAttribArray(colorLocation);\n\n    const offsetBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, offsetBuffer);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array([0.5, 0.5, -0.5, 0.5, 0.5, -0.5, -0.5, -0.5]),\n      gl.STATIC_DRAW\n    );\n\n    const offsetLocation = gl.getAttribLocation(program, 'offset');\n    gl.vertexAttribPointer(offsetLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.vertexAttribDivisor(offsetLocation, 1);\n    gl.enableVertexAttribArray(offsetLocation);\n\n    gl.bindVertexArray(null);\n\n    const resources = {\n      gl,\n      positionBuffer,\n      colorBuffer,\n      offsetBuffer,\n      program,\n      vertexArray\n    };\n\n    resources.rafHandle = requestAnimationFrame(function draw() {\n      resources.rafHandle = requestAnimationFrame(draw);\n\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      gl.bindVertexArray(vertexArray);\n      gl.useProgram(program);\n      gl.drawArraysInstanced(gl.TRIANGLES, 0, 3, 4);\n    });\n\n    gl.deleteShader(vShader);\n    gl.deleteShader(fShader);\n\n    this.resources = resources;\n  }\n\n  stop() {\n    cancelAnimationFrame(this.resources.rafHandle);\n  }\n\n  delete() {\n    const {gl, positionBuffer, colorBuffer, offsetBuffer, program, vertexArray} = this.resources;\n    gl.deleteBuffer(positionBuffer);\n    gl.deleteBuffer(colorBuffer);\n    gl.deleteBuffer(offsetBuffer);\n    gl.deleteProgram(program);\n    gl.deleteVertexArray(vertexArray);\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/getting-started/hello-instancing-low/app';\n\nexport default class Example extends React.Component {\n  render() {\n    const { pageContext } = this.props;\n    const exampleConfig = (pageContext && pageContext.exampleConfig) || {};\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={exampleConfig} />\n    );\n  }\n}\n"],"sourceRoot":""}