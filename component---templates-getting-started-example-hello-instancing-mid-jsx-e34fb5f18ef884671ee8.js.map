{"version":3,"sources":["webpack:///../examples/getting-started/hello-instancing-mid/app.js","webpack:///./templates/getting-started/example-hello-instancing-mid.jsx"],"names":["colorShaderModule","name","vs","fs","AppAnimationLoop","debug","getInfo","onInitialize","gl","positionBuffer","Float32Array","colorBuffer","offsetBuffer","assembled","assembleShaders","modules","program","vertexArray","attributes","position","color","divisor","offset","onRender","clear","vertexCount","instanceCount","onFinalize","AnimationLoop","window","animationLoop","Example","render","pageContext","this","exampleConfig","React","Component"],"mappings":"8NAIA,IAIMA,EAAoB,CACxBC,KADwB,QAExBC,GAFwB,oHASxBC,GAAG,0GASgBC,E,oBACnB,aAAe,OACb,YAAM,CAACC,OAAO,KADF,K,yFAIPC,QAAP,WACE,MA5BJ,yD,2BA+BEC,yBAAoB,IAANC,EAAK,EAALA,GACNC,EAAiB,IAAI,EAAJ,IAAe,IAAIC,aAAa,kBAAvD,MAEMC,EAAc,IAAI,EAAJ,IAElB,IAAID,aAAa,CAAC,EAAI,EAAL,kBAFnB,KAKME,EAAe,IAAI,EAAJ,IAEnB,IAAIF,aAAa,CAAC,GAAI,IAAL,kBAFnB,MAqBMG,EAAYC,YAAgBN,EAAI,CACpCN,GAjBF,8NAkBEC,GARF,4FASEY,QAAS,CAACf,KAGNgB,EAAU,IAAI,EAAJ,IAAhB,GAWA,MAAO,CAACA,QAAD,EAAUC,YATG,IAAI,EAAJ,IAAoB,CACtCD,QADsC,EAEtCE,WAAY,CACVC,SADU,EAEVC,MAAO,CAACT,EAAa,CAACU,QAAS,IAC/BC,OAAQ,CAACV,EAAc,CAACS,QAAS,OAIPZ,eAAvB,EAAuCE,YAAvC,EAAoDC,iB,EAG7DW,qBAAiF,IAAvEf,EAAsE,EAAtEA,GAAIQ,EAAkE,EAAlEA,QAASC,EAAyD,EAAzDA,YAAyD,EAA5CR,eAA4C,EAA5BE,YAA4B,EAAfC,aAC/DY,YAAMhB,EAAI,CAACY,MAAO,CAAC,EAAE,EAAH,OAClBJ,OAAa,CACXC,YADW,EAEXQ,YAFW,EAGXC,cAAe,K,EAInBC,uBAAkF,EAAtEnB,GAAuE,IAAnEQ,EAAkE,EAAlEA,QAASC,EAAyD,EAAzDA,YAAaR,EAA4C,EAA5CA,eAAgBE,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,aACjEI,WACAC,WACAR,WACAE,WACAC,Y,GAxE0CgB,KA6E1C,oBAAOC,QAA2BA,OAAtC,UACwB,IAAtB,GACAC,Q,4CCrGmBC,E,gLACnBC,kBAAU,IACAC,EAAgBC,KADjB,kBAEDC,EAAiBF,GAAeA,EAAhB,eAAtB,GACA,OACE,uBAA0BL,cAA1B,EAAwDO,cAAeA,K,GALxCC,IAAMC","file":"component---templates-getting-started-example-hello-instancing-mid-jsx-e34fb5f18ef884671ee8.js","sourcesContent":["import {AnimationLoop} from '@luma.gl/engine';\nimport {Program, VertexArray, Buffer, clear} from '@luma.gl/webgl';\nimport {assembleShaders} from '@luma.gl/shadertools';\n\nconst INFO_HTML = `\nInstanced triangles using luma.gl's mid-level API\n`;\n\nconst colorShaderModule = {\n  name: 'color',\n  vs: `\n    varying vec3 color_vColor;\n\n    void color_setColor(vec3 color) {\n      color_vColor = color;\n    }\n  `,\n  fs: `\n    varying vec3 color_vColor;\n\n    vec3 color_getColor() {\n      return color_vColor;\n    }\n  `\n};\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  constructor() {\n    super({debug: true});\n  }\n\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({gl}) {\n    const positionBuffer = new Buffer(gl, new Float32Array([-0.2, -0.2, 0.2, -0.2, 0.0, 0.2]));\n\n    const colorBuffer = new Buffer(\n      gl,\n      new Float32Array([1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0])\n    );\n\n    const offsetBuffer = new Buffer(\n      gl,\n      new Float32Array([0.5, 0.5, -0.5, 0.5, 0.5, -0.5, -0.5, -0.5])\n    );\n\n    const vs = `\n      attribute vec2 position;\n      attribute vec3 color;\n      attribute vec2 offset;\n\n      void main() {\n        color_setColor(color);\n        gl_Position = vec4(position + offset, 0.0, 1.0);\n      }\n    `;\n    const fs = `\n      void main() {\n        gl_FragColor = vec4(color_getColor(), 1.0);\n      }\n    `;\n\n    const assembled = assembleShaders(gl, {\n      vs,\n      fs,\n      modules: [colorShaderModule]\n    });\n\n    const program = new Program(gl, assembled);\n\n    const vertexArray = new VertexArray(gl, {\n      program,\n      attributes: {\n        position: positionBuffer,\n        color: [colorBuffer, {divisor: 1}],\n        offset: [offsetBuffer, {divisor: 1}]\n      }\n    });\n\n    return {program, vertexArray, positionBuffer, colorBuffer, offsetBuffer};\n  }\n\n  onRender({gl, program, vertexArray, positionBuffer, colorBuffer, offsetBuffer}) {\n    clear(gl, {color: [0, 0, 0, 1]});\n    program.draw({\n      vertexArray,\n      vertexCount: 3,\n      instanceCount: 4\n    });\n  }\n\n  onFinalize({gl, program, vertexArray, positionBuffer, colorBuffer, offsetBuffer}) {\n    program.delete();\n    vertexArray.delete();\n    positionBuffer.delete();\n    colorBuffer.delete();\n    offsetBuffer.delete();\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/getting-started/hello-instancing-mid/app';\n\nexport default class Example extends React.Component {\n  render() {\n    const { pageContext } = this.props;\n    const exampleConfig = (pageContext && pageContext.exampleConfig) || {};\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={exampleConfig} />\n    );\n  }\n}\n"],"sourceRoot":""}