{"version":3,"sources":["webpack:///../examples/lessons/08/app.js","webpack:///./templates/lessons/example-08.jsx","webpack:///../modules/core/src/scenegraph/nodes/scenegraph-node.js","webpack:///../modules/core/src/geometries/cube-geometry.js","webpack:///../node_modules/math.gl/dist/esm/classes/base/vector.js","webpack:///../node_modules/math.gl/dist/esm/classes/vector3.js","webpack:///../modules/core/src/scenegraph/nodes/model-node.js"],"names":["xRot","xSpeed","yRot","ySpeed","cubePositionZ","AppAnimationLoop","getInfo","onInitialize","canvas","gl","document","setParameters","clearColor","clearDepth","blendFunc","blend","texture","data","mipmap","parameters","cube","geometry","vs","fs","uniforms","uSampler","onRender","tick","aspect","GL","$id","$value","$checked","uMVMatrix","eye","id","defaultValue","Number","blendingEnabled","alpha","lightingEnabled","lightDirection","lightColor","ambientColor","uPMatrix","uAmbientColor","uUseLighting","uLightingDirection","uDirectionalColor","uAlpha","onFinalize","AnimationLoop","keyboardEventHandler","e","window","animationLoop","Example","render","exampleConfig","this","props","pageContext","React","Component","ScenegraphNode","uid","constructor","display","position","rotation","scale","matrix","userData","_setScenegraphNodeProps","delete","setProps","toString","setPosition","assert","setRotation","setScale","setMatrix","copyMatrix","copy","setMatrixComponents","update","updateMatrix","pos","rot","identity","translate","rotateXYZ","getCoordinateUniforms","modelMatrix","worldMatrix","worldInverse","worldInverseTranspose","viewMatrix","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","Object","CUBE_INDICES","Uint16Array","CUBE_POSITIONS","Float32Array","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","POSITION","size","value","NORMAL","TEXCOORD_0","CubeGeometry","indices","attributes","Geometry","_MathArray","Vector","apply","arguments","key","Math","sqrt","lengthSquared","len","length","i","ELEMENTS","mathArray","distanceSquared","dist","product","magnitude","check","_len","vectors","Array","_key","_i","_vectors","vector","_len2","_key2","_i2","_vectors2","distance","a","b","add","subtract","multiply","multiplyScalar","get","set","ORIGIN","_Vector","Vector3","_this","x","undefined","y","z","call","debug","array","object","vec3","_ref","radians","_ref$origin","origin","_ref2","_ref2$origin","_ref3","_ref3$origin","matrix4","transformAsPoint","matrix3","matrix2","quaternion","ModelNode","_setModelNodeProps","model","managedResources","forEach","resource","draw","setUniforms","setAttributes","updateModuleSettings"],"mappings":"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","file":"component---templates-lessons-example-08-jsx-21569a9b3bdce9bfeef6.js","sourcesContent":["/* eslint-disable max-statements, array-bracket-spacing, no-multi-spaces */\nimport GL from '@luma.gl/constants';\nimport {AnimationLoop, Texture2D, setParameters, ModelNode, CubeGeometry} from '@luma.gl/core';\nimport {Matrix4} from 'math.gl';\n\nconst INFO_HTML = `\n<div>\n  <p>\n    <a href=\"http://learningwebgl.com/blog/?p=859\" target=\"_blank\">\n      Depth buffer, transparency and blending\n    </a>\n  </p>\n\n  Use arrow keys to spin the box and <code>+</code>/<code>-</code> to zoom in/out.\n  <br/>\n\n  <div>\n    <div>\n      <input type=\"checkbox\" id=\"blending\" checked/> <b>Blending</b>\n      <br/>\n      Alpha level\n      <input id=\"directionalR\" type=\"range\" value=\"0.5\" min=\"0.0\" max=\"1.0\" step=\"0.01\"/>\n      <br/>\n    </div>\n\n    <br/>\n\n    <div>\n      <input type=\"checkbox\" id=\"lighting\" checked/> <b>Directional Lighting</b>\n      <br/>\n      <div class=\"control-block\">\n        <div class=\"control-row\">\n          Direction:\n          <div>X:\n            <input id=\"lightDirectionX\" type=\"range\" value=\"0\" min=\"-5\" max=\"5\" step=\"0.1\"/>\n          </div>\n          <div>Y:\n            <input id=\"lightDirectionY\" type=\"range\" value=\"0\" min=\"-5\" max=\"5\" step=\"0.1\"/>\n          </div>\n          <div>Z:\n            <input id=\"lightDirectionZ\" type=\"range\" value=\"2\" min=\"0\" max=\"5\" step=\"0.1\"/>\n          </div>\n        </div>\n        <div class=\"control-row\">\n          Colour:\n          <div>R:\n            <input id=\"directionalR\" type=\"range\" value=\"0.2\" min=\"0.0\" max=\"1.0\" step=\"0.01\"/>\n          </div>\n          <div>G:\n            <input id=\"directionalG\" type=\"range\" value=\"0.2\" min=\"0.0\" max=\"1.0\" step=\"0.01\"/>\n          </div>\n          <div>B:\n            <input id=\"directionalB\" type=\"range\" value=\"0.2\" min=\"0.0\" max=\"1.0\" step=\"0.01\"/>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <br/>\n\n  <div>\n    <div><b>Ambient Lighting</b></div>\n    <div class=\"control-block\">\n      <div class=\"control-row\">\n        Colour:\n        <div>R:\n          <input id=\"ambientR\" type=\"range\" value=\"0.2\" min=\"0.0\" max=\"1.0\" step=\"0.01\"/>\n        </div>\n        <div>G:\n          <input id=\"ambientG\" type=\"range\" value=\"0.2\" min=\"0.0\" max=\"1.0\" step=\"0.01\"/>\n        </div>\n        <div>B:\n          <input id=\"ambientB\" type=\"range\" value=\"0.2\" min=\"0.0\" max=\"1.0\" step=\"0.01\"/>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <br/>\n  The classic WebGL Lessons in luma.gl\n</div>\n`;\n\n// Read Lighting form elements variables\nfunction getHTMLControls() {\n  /* global document */\n  const $id = id => document.getElementById(id);\n  const $value = (id, defaultValue = 1) => ($id(id) ? Number($id(id).value) : defaultValue);\n  const $checked = id => ($id(id) ? $id(id).checked : true);\n\n  const blendingEnabled = $checked('blending');\n  const alpha = $value('alpha', 0.5);\n\n  // Get lighting form elements\n  const lightingEnabled = $checked('lighting');\n  const lightDirection = [\n    $value('lightDirectionX', 0),\n    $value('lightDirectionY', 0),\n    $value('lightDirectionZ', 1)\n  ];\n  const lightColor = [$value('directionalR'), $value('directionalG'), $value('directionalB')];\n  const ambientColor = [$value('ambientR'), $value('ambientG'), $value('ambientB')];\n\n  return {\n    blendingEnabled,\n    alpha,\n    lightingEnabled,\n    lightDirection,\n    lightColor,\n    ambientColor\n  };\n}\n\n// Vertex shader with lighting\nconst VERTEX_SHADER = `\\\nattribute vec3 positions;\nattribute vec2 texCoords;\nattribute vec3 normals;\n\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\nuniform vec3 uAmbientColor;\nuniform vec3 uLightingDirection;\nuniform vec3 uDirectionalColor;\nuniform bool uUseLighting;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vLightWeighting;\n\nvoid main(void) {\n  gl_Position = uPMatrix * uMVMatrix * vec4(positions, 1.0);\n  vTextureCoord = texCoords;\n\n  if (!uUseLighting) {\n    vLightWeighting = vec3(1.0, 1.0, 1.0);\n  } else {\n    // Perform lighting in world space\n    // we should use 'transpose(inverse(mat3(uMVMatrix)))', but\n    // 'inverse' matrix operation not supported in GLSL 1.0, for now use\n    // upper-left 3X3 matrix of model view matrix, it works since we are not\n    // doing any non-uniform scaling transormations in this example.\n    mat3 normalMatrix = mat3(uMVMatrix);\n    vec3 transformedNormal = normalMatrix * normals;\n    float directionalLightWeighting = max(dot(transformedNormal, uLightingDirection), 0.0);\n    vLightWeighting = uAmbientColor + uDirectionalColor * directionalLightWeighting;\n  }\n}\n`;\n\n// Fragment shader\nconst FRAGMENT_SHADER = `\\\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vLightWeighting;\n\nuniform sampler2D uSampler;\nuniform float uAlpha;\n\nvoid main(void) {\n  vec4 textureColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\n  gl_FragColor = vec4(textureColor.rgb * vLightWeighting, textureColor.a * uAlpha);\n}\n`;\n\nlet xRot = 0;\nlet xSpeed = 0.01;\nlet yRot = 0;\nlet ySpeed = 0.0;\nlet cubePositionZ = -5.0;\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({canvas, gl}) {\n    document.addEventListener('keydown', keyboardEventHandler);\n\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      blendFunc: [gl.SRC_ALPHA, gl.ONE],\n      blend: true\n    });\n\n    const texture = new Texture2D(gl, {\n      data: 'glass.gif',\n      mipmap: true,\n      parameters: {\n        [gl.TEXTURE_MIN_FILTER]: gl.LINEAR_MIPMAP_NEAREST,\n        [gl.TEXTURE_MAG_FILTER]: gl.LINEAR\n      }\n    });\n    return {\n      cube: new ModelNode(gl, {\n        geometry: new CubeGeometry(),\n        vs: VERTEX_SHADER,\n        fs: FRAGMENT_SHADER,\n        uniforms: {uSampler: texture}\n      })\n    };\n  }\n  onRender({gl, tick, aspect, cube}) {\n    xRot += xSpeed;\n    yRot += ySpeed;\n\n    gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n\n    // update element matrix to rotate cube on its center\n    cube.setRotation([xRot, yRot, 0]).updateMatrix();\n\n    const uMVMatrix = new Matrix4()\n      .lookAt({eye: [0, 0, 0]})\n      .translate([0, 0, cubePositionZ])\n      .rotateXYZ([tick * 0.01, tick * 0.01, tick * 0.01])\n      .multiplyRight(cube.matrix);\n\n    const {\n      blendingEnabled,\n      alpha,\n      lightingEnabled,\n      lightDirection,\n      lightColor,\n      ambientColor\n    } = getHTMLControls();\n\n    if (blendingEnabled) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.enable(gl.BLEND);\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n      cube.setUniforms({\n        alpha\n      });\n    } else {\n      gl.enable(gl.DEPTH_TEST);\n      gl.disable(gl.BLEND);\n    }\n\n    // Update scene config with light info\n    cube\n      .setUniforms({\n        uMVMatrix,\n        uPMatrix: new Matrix4().perspective({aspect}),\n        uAmbientColor: ambientColor,\n        uUseLighting: lightingEnabled,\n        uLightingDirection: lightDirection,\n        uDirectionalColor: lightColor,\n        uAlpha: Number(0.5)\n      })\n      .draw();\n  }\n\n  onFinalize() {\n    document.removeEventListener('keydown', keyboardEventHandler);\n  }\n}\n\nfunction keyboardEventHandler(e) {\n  switch (e.code) {\n    case 'ArrowUp':\n      xSpeed -= 0.02;\n      break;\n    case 'ArrowDown':\n      xSpeed += 0.02;\n      break;\n    case 'ArrowLeft':\n      ySpeed -= 0.02;\n      break;\n    case 'ArrowRight':\n      ySpeed += 0.02;\n      break;\n    case 'Equal': // '+'\n      cubePositionZ += 0.05;\n      break;\n    case 'Minus': // '-'\n      cubePositionZ -= 0.05;\n      break;\n    default:\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/lessons/08/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import {Vector3, Matrix4} from 'math.gl';\nimport {assert, uid} from '../../utils';\n\nexport default class ScenegraphNode {\n  constructor(props = {}) {\n    const {id} = props;\n\n    this.id = id || uid(this.constructor.name);\n\n    this.display = true; // whether to display the object at all\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n    this.userData = {};\n\n    this.props = {};\n    this._setScenegraphNodeProps(props);\n  }\n\n  delete() {}\n\n  setProps(props) {\n    this._setScenegraphNodeProps(props);\n    return this;\n  }\n\n  toString() {\n    return `{type: ScenegraphNode, id: ${this.id})}`;\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrix(matrix, copyMatrix = true) {\n    if (copyMatrix) {\n      this.matrix.copy(matrix);\n    } else {\n      this.matrix = matrix;\n    }\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update({position, rotation, scale} = {}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  /*\n  transform() {\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n  */\n\n  _setScenegraphNodeProps(props) {\n    if ('display' in props) {\n      this.display = props.display;\n    }\n\n    if ('position' in props) {\n      this.setPosition(props.position);\n    }\n    if ('rotation' in props) {\n      this.setRotation(props.rotation);\n    }\n    if ('scale' in props) {\n      this.setScale(props.scale);\n    }\n\n    // Matrix overwrites other props\n    if ('matrix' in props) {\n      this.setMatrix(props.matrix);\n    }\n\n    Object.assign(this.props, props);\n  }\n}\n","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport assert from '../../lib/assert';\n\nvar Vector = function (_MathArray) {\n  _inherits(Vector, _MathArray);\n\n  function Vector() {\n    _classCallCheck(this, Vector);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Vector).apply(this, arguments));\n  }\n\n  _createClass(Vector, [{\n    key: \"len\",\n    value: function len() {\n      return Math.sqrt(this.lengthSquared());\n    }\n  }, {\n    key: \"magnitude\",\n    value: function magnitude() {\n      return this.len();\n    }\n  }, {\n    key: \"lengthSquared\",\n    value: function lengthSquared() {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        length += this[i] * this[i];\n      }\n\n      return length;\n    }\n  }, {\n    key: \"magnitudeSquared\",\n    value: function magnitudeSquared() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distance\",\n    value: function distance(mathArray) {\n      return Math.sqrt(this.distanceSquared(mathArray));\n    }\n  }, {\n    key: \"distanceSquared\",\n    value: function distanceSquared(mathArray) {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        var dist = this[i] - mathArray[i];\n        length += dist * dist;\n      }\n\n      return checkNumber(length);\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(mathArray) {\n      var product = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        product += this[i] * mathArray[i];\n      }\n\n      return checkNumber(product);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var length = this.magnitude();\n\n      if (length !== 0) {\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= length;\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply() {\n      for (var _len = arguments.length, vectors = new Array(_len), _key = 0; _key < _len; _key++) {\n        vectors[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _vectors = vectors; _i < _vectors.length; _i++) {\n        var vector = _vectors[_i];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] *= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"divide\",\n    value: function divide() {\n      for (var _len2 = arguments.length, vectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        vectors[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _vectors2 = vectors; _i2 < _vectors2.length; _i2++) {\n        var vector = _vectors2[_i2];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"lengthSq\",\n    value: function lengthSq() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(vector) {\n      return this.distance(vector);\n    }\n  }, {\n    key: \"distanceToSquared\",\n    value: function distanceToSquared(vector) {\n      return this.distanceSquared(vector);\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(i) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      return checkNumber(this[i]);\n    }\n  }, {\n    key: \"setComponent\",\n    value: function setComponent(i, value) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      this[i] = value;\n      return this.check();\n    }\n  }, {\n    key: \"addVectors\",\n    value: function addVectors(a, b) {\n      return this.copy(a).add(b);\n    }\n  }, {\n    key: \"subVectors\",\n    value: function subVectors(a, b) {\n      return this.copy(a).subtract(b);\n    }\n  }, {\n    key: \"multiplyVectors\",\n    value: function multiplyVectors(a, b) {\n      return this.copy(a).multiply(b);\n    }\n  }, {\n    key: \"addScaledVector\",\n    value: function addScaledVector(a, b) {\n      return this.add(new this.constructor(a).multiplyScalar(b));\n    }\n  }, {\n    key: \"x\",\n    get: function get() {\n      return this[0];\n    },\n    set: function set(value) {\n      return this[0] = checkNumber(value);\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this[1];\n    },\n    set: function set(value) {\n      return this[1] = checkNumber(value);\n    }\n  }]);\n\n  return Vector;\n}(MathArray);\n\nexport { Vector as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nvar ORIGIN = [0, 0, 0];\n\nvar Vector3 = function (_Vector) {\n  _inherits(Vector3, _Vector);\n\n  function Vector3() {\n    var _this;\n\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Vector3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vector3).call(this, -0, -0, -0));\n\n    if (arguments.length === 1 && isArray(x)) {\n      _this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      _this[0] = x;\n      _this[1] = y;\n      _this[2] = z;\n    }\n\n    return _this;\n  }\n\n  _createClass(Vector3, [{\n    key: \"set\",\n    value: function set(x, y, z) {\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      return this.check();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      return this.check();\n    }\n  }, {\n    key: \"fromObject\",\n    value: function fromObject(object) {\n      if (config.debug) {\n        checkNumber(object.x);\n        checkNumber(object.y);\n        checkNumber(object.z);\n      }\n\n      this[0] = object.x;\n      this[1] = object.y;\n      this[2] = object.z;\n      return this.check();\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject(object) {\n      object.x = this[0];\n      object.y = this[1];\n      object.z = this[2];\n      return object;\n    }\n  }, {\n    key: \"angle\",\n    value: function angle(vector) {\n      return vec3.angle(this, vector);\n    }\n  }, {\n    key: \"cross\",\n    value: function cross(vector) {\n      vec3.cross(this, this, vector);\n      return this.check();\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(_ref) {\n      var radians = _ref.radians,\n          _ref$origin = _ref.origin,\n          origin = _ref$origin === void 0 ? ORIGIN : _ref$origin;\n      vec3.rotateX(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(_ref2) {\n      var radians = _ref2.radians,\n          _ref2$origin = _ref2.origin,\n          origin = _ref2$origin === void 0 ? ORIGIN : _ref2$origin;\n      vec3.rotateY(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(_ref3) {\n      var radians = _ref3.radians,\n          _ref3$origin = _ref3.origin,\n          origin = _ref3$origin === void 0 ? ORIGIN : _ref3$origin;\n      vec3.rotateZ(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix4) {\n      return this.transformAsPoint(matrix4);\n    }\n  }, {\n    key: \"transformAsPoint\",\n    value: function transformAsPoint(matrix4) {\n      vec3.transformMat4(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformAsVector\",\n    value: function transformAsVector(matrix4) {\n      vec3_transformMat4AsVector(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix3\",\n    value: function transformByMatrix3(matrix3) {\n      vec3.transformMat3(this, this, matrix3);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix2\",\n    value: function transformByMatrix2(matrix2) {\n      vec3_transformMat2(this, this, matrix2);\n      return this.check();\n    }\n  }, {\n    key: \"transformByQuaternion\",\n    value: function transformByQuaternion(quaternion) {\n      vec3.transformQuat(this, this, quaternion);\n      return this.check();\n    }\n  }, {\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 3;\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this[2];\n    },\n    set: function set(value) {\n      return this[2] = checkNumber(value);\n    }\n  }]);\n\n  return Vector3;\n}(Vector);\n\nexport { Vector3 as default };","import Model from '../../lib/model';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n"],"sourceRoot":""}