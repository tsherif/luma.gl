{"version":3,"sources":["webpack:///../examples/lessons/08/app.js","webpack:///./templates/lessons/example-08.jsx","webpack:///../modules/core/src/geometry/geometry.js","webpack:///../node_modules/seer/dist/index.js","webpack:///../modules/core/src/scenegraph/nodes/scenegraph-node.js","webpack:///../modules/core/src/geometries/cube-geometry.js","webpack:///../node_modules/math.gl/dist/esm/classes/base/vector.js","webpack:///../node_modules/math.gl/dist/esm/classes/vector3.js","webpack:///../modules/core/src/scenegraph/nodes/model-node.js"],"names":["xRot","xSpeed","yRot","ySpeed","cubePositionZ","AppAnimationLoop","getInfo","onInitialize","_ref","canvas","_parameters","gl","document","setParameters","clearColor","clearDepth","blendFunc","SRC_ALPHA","ONE","blend","texture","texture_2d","data","mipmap","parameters","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","TEXTURE_MAG_FILTER","LINEAR","cube","model_node","geometry","cube_geometry","vs","fs","uniforms","uSampler","onRender","_ref2","tick","aspect","GL","DEPTH_BUFFER_BIT","$id","$value","$checked","uMVMatrix","matrix4","lookAt","eye","translate","rotateXYZ","multiplyRight","matrix","_getHTMLControls","id","defaultValue","Number","blendingEnabled","alpha","lightingEnabled","lightDirection","lightColor","ambientColor","uPMatrix","perspective","uAmbientColor","uUseLighting","uLightingDirection","uDirectionalColor","uAlpha","onFinalize","AnimationLoop","keyboardEventHandler","e","code","window","website","app_AppAnimationLoop","animationLoop","Example","render","react_default","a","createElement","animation_loop_example_page","exampleConfig","this","props","pageContext","React","Component","DRAW_MODE","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","Geometry","_props","_props$id","uid","_props$drawMode","drawMode","_props$attributes","attributes","_props$indices","indices","_props$vertexCount","vertexCount","userData","_setAttributes","_calculateVertexCount","getVertexCount","getAttributes","Object","assign","_print","attributeName","ArrayBuffer","isView","value","size","attribute","assert","undefined","isIndexed","length","Infinity","constant","Math","__webpack_require__","defineProperty","exports","_typeof","Symbol","iterator","obj","constructor","prototype","isBrowser","addEventListener","timers","Map","isReady","__SEER_INITIALIZED__","throttle","key","delay","time","get","now","Date","set","send","type","arguments","seen","Set","payload","JSON","stringify","has","add","toString","call","slice","includes","Array","replacer","postMessage","source","console","log","listeners","listener","message","_message$data","typeListeners","forEach","cb","init","__SEER_LISTENER__","list","listItem","itemKey","updateItem","path","multiUpdate","array","deleteItem","addLog","msg","listenFor","Error","push","removeListener","filter","l","clean","removeEventListener","ScenegraphNode","name","display","position","math_gl__WEBPACK_IMPORTED_MODULE_4__","rotation","scale","math_gl__WEBPACK_IMPORTED_MODULE_5__","_setScenegraphNodeProps","delete","setProps","setPosition","setRotation","setScale","setMatrix","copyMatrix","copy","setMatrixComponents","_ref$update","update","updateMatrix","pos","rot","identity","_temp","getCoordinateUniforms","modelMatrix","worldMatrix","viewMatrix","worldInverse","invert","worldInverseTranspose","transpose","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","CUBE_INDICES","Uint16Array","CUBE_POSITIONS","Float32Array","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","POSITION","NORMAL","TEXCOORD_0","CubeGeometry","_Geometry","vector_Vector","_MathArray","Vector","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","sqrt","lengthSquared","len","i","ELEMENTS","mathArray","distanceSquared","dist","validators","product","magnitude","check","_len","vectors","_key","_i","_vectors","vector","_len2","_key2","_i2","_vectors2","distance","b","subtract","multiply","multiplyScalar","math_array","d","__webpack_exports__","vector3_Vector3","ORIGIN","_Vector","Vector3","_this","x","y","z","common","debug","object","vec3","radians","_ref$origin","origin","_ref2$origin","_ref3","_ref3$origin","transformAsPoint","gl_matrix_extras","matrix3","matrix2","quaternion","ModelNode","_ScenegraphNode","onBeforeRender","AfterRender","_lib_model__WEBPACK_IMPORTED_MODULE_0__","model","_setModelNodeProps","managedResources","resource","draw","_this$model","setUniforms","_this$model2","setAttributes","_this$model3","updateModuleSettings","_this$model4"],"mappings":"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","file":"component---templates-lessons-example-08-jsx-26a0d27a58f0179a8cf4.js","sourcesContent":["/* eslint-disable max-statements, array-bracket-spacing, no-multi-spaces */\nimport GL from '@luma.gl/constants';\nimport {AnimationLoop, Texture2D, setParameters, ModelNode, CubeGeometry} from '@luma.gl/core';\nimport {Matrix4} from 'math.gl';\n\nconst INFO_HTML = `\n<div>\n  <p>\n    <a href=\"http://learningwebgl.com/blog/?p=859\" target=\"_blank\">\n      Depth buffer, transparency and blending\n    </a>\n  </p>\n\n  Use arrow keys to spin the box and <code>+</code>/<code>-</code> to zoom in/out.\n  <br/>\n\n  <div>\n    <div>\n      <input type=\"checkbox\" id=\"blending\" checked/> <b>Blending</b>\n      <br/>\n      Alpha level\n      <input id=\"directionalR\" type=\"range\" value=\"0.5\" min=\"0.0\" max=\"1.0\" step=\"0.01\"/>\n      <br/>\n    </div>\n\n    <br/>\n\n    <div>\n      <input type=\"checkbox\" id=\"lighting\" checked/> <b>Directional Lighting</b>\n      <br/>\n      <div class=\"control-block\">\n        <div class=\"control-row\">\n          Direction:\n          <div>X:\n            <input id=\"lightDirectionX\" type=\"range\" value=\"0\" min=\"-5\" max=\"5\" step=\"0.1\"/>\n          </div>\n          <div>Y:\n            <input id=\"lightDirectionY\" type=\"range\" value=\"0\" min=\"-5\" max=\"5\" step=\"0.1\"/>\n          </div>\n          <div>Z:\n            <input id=\"lightDirectionZ\" type=\"range\" value=\"2\" min=\"0\" max=\"5\" step=\"0.1\"/>\n          </div>\n        </div>\n        <div class=\"control-row\">\n          Colour:\n          <div>R:\n            <input id=\"directionalR\" type=\"range\" value=\"0.2\" min=\"0.0\" max=\"1.0\" step=\"0.01\"/>\n          </div>\n          <div>G:\n            <input id=\"directionalG\" type=\"range\" value=\"0.2\" min=\"0.0\" max=\"1.0\" step=\"0.01\"/>\n          </div>\n          <div>B:\n            <input id=\"directionalB\" type=\"range\" value=\"0.2\" min=\"0.0\" max=\"1.0\" step=\"0.01\"/>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <br/>\n\n  <div>\n    <div><b>Ambient Lighting</b></div>\n    <div class=\"control-block\">\n      <div class=\"control-row\">\n        Colour:\n        <div>R:\n          <input id=\"ambientR\" type=\"range\" value=\"0.2\" min=\"0.0\" max=\"1.0\" step=\"0.01\"/>\n        </div>\n        <div>G:\n          <input id=\"ambientG\" type=\"range\" value=\"0.2\" min=\"0.0\" max=\"1.0\" step=\"0.01\"/>\n        </div>\n        <div>B:\n          <input id=\"ambientB\" type=\"range\" value=\"0.2\" min=\"0.0\" max=\"1.0\" step=\"0.01\"/>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <br/>\n  The classic WebGL Lessons in luma.gl\n</div>\n`;\n\n// Read Lighting form elements variables\nfunction getHTMLControls() {\n  /* global document */\n  const $id = id => document.getElementById(id);\n  const $value = (id, defaultValue = 1) => ($id(id) ? Number($id(id).value) : defaultValue);\n  const $checked = id => ($id(id) ? $id(id).checked : true);\n\n  const blendingEnabled = $checked('blending');\n  const alpha = $value('alpha', 0.5);\n\n  // Get lighting form elements\n  const lightingEnabled = $checked('lighting');\n  const lightDirection = [\n    $value('lightDirectionX', 0),\n    $value('lightDirectionY', 0),\n    $value('lightDirectionZ', 1)\n  ];\n  const lightColor = [$value('directionalR'), $value('directionalG'), $value('directionalB')];\n  const ambientColor = [$value('ambientR'), $value('ambientG'), $value('ambientB')];\n\n  return {\n    blendingEnabled,\n    alpha,\n    lightingEnabled,\n    lightDirection,\n    lightColor,\n    ambientColor\n  };\n}\n\n// Vertex shader with lighting\nconst VERTEX_SHADER = `\\\nattribute vec3 positions;\nattribute vec2 texCoords;\nattribute vec3 normals;\n\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\nuniform vec3 uAmbientColor;\nuniform vec3 uLightingDirection;\nuniform vec3 uDirectionalColor;\nuniform bool uUseLighting;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vLightWeighting;\n\nvoid main(void) {\n  gl_Position = uPMatrix * uMVMatrix * vec4(positions, 1.0);\n  vTextureCoord = texCoords;\n\n  if (!uUseLighting) {\n    vLightWeighting = vec3(1.0, 1.0, 1.0);\n  } else {\n    // Perform lighting in world space\n    // we should use 'transpose(inverse(mat3(uMVMatrix)))', but\n    // 'inverse' matrix operation not supported in GLSL 1.0, for now use\n    // upper-left 3X3 matrix of model view matrix, it works since we are not\n    // doing any non-uniform scaling transormations in this example.\n    mat3 normalMatrix = mat3(uMVMatrix);\n    vec3 transformedNormal = normalMatrix * normals;\n    float directionalLightWeighting = max(dot(transformedNormal, uLightingDirection), 0.0);\n    vLightWeighting = uAmbientColor + uDirectionalColor * directionalLightWeighting;\n  }\n}\n`;\n\n// Fragment shader\nconst FRAGMENT_SHADER = `\\\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vLightWeighting;\n\nuniform sampler2D uSampler;\nuniform float uAlpha;\n\nvoid main(void) {\n  vec4 textureColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\n  gl_FragColor = vec4(textureColor.rgb * vLightWeighting, textureColor.a * uAlpha);\n}\n`;\n\nlet xRot = 0;\nlet xSpeed = 0.01;\nlet yRot = 0;\nlet ySpeed = 0.0;\nlet cubePositionZ = -5.0;\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({canvas, gl}) {\n    document.addEventListener('keydown', keyboardEventHandler);\n\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      blendFunc: [gl.SRC_ALPHA, gl.ONE],\n      blend: true\n    });\n\n    const texture = new Texture2D(gl, {\n      data: 'glass.gif',\n      mipmap: true,\n      parameters: {\n        [gl.TEXTURE_MIN_FILTER]: gl.LINEAR_MIPMAP_NEAREST,\n        [gl.TEXTURE_MAG_FILTER]: gl.LINEAR\n      }\n    });\n    return {\n      cube: new ModelNode(gl, {\n        geometry: new CubeGeometry(),\n        vs: VERTEX_SHADER,\n        fs: FRAGMENT_SHADER,\n        uniforms: {uSampler: texture}\n      })\n    };\n  }\n  onRender({gl, tick, aspect, cube}) {\n    xRot += xSpeed;\n    yRot += ySpeed;\n\n    gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n\n    // update element matrix to rotate cube on its center\n    cube.setRotation([xRot, yRot, 0]).updateMatrix();\n\n    const uMVMatrix = new Matrix4()\n      .lookAt({eye: [0, 0, 0]})\n      .translate([0, 0, cubePositionZ])\n      .rotateXYZ([tick * 0.01, tick * 0.01, tick * 0.01])\n      .multiplyRight(cube.matrix);\n\n    const {\n      blendingEnabled,\n      alpha,\n      lightingEnabled,\n      lightDirection,\n      lightColor,\n      ambientColor\n    } = getHTMLControls();\n\n    if (blendingEnabled) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.enable(gl.BLEND);\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n      cube.setUniforms({\n        alpha\n      });\n    } else {\n      gl.enable(gl.DEPTH_TEST);\n      gl.disable(gl.BLEND);\n    }\n\n    // Update scene config with light info\n    cube\n      .setUniforms({\n        uMVMatrix,\n        uPMatrix: new Matrix4().perspective({aspect}),\n        uAmbientColor: ambientColor,\n        uUseLighting: lightingEnabled,\n        uLightingDirection: lightDirection,\n        uDirectionalColor: lightColor,\n        uAlpha: Number(0.5)\n      })\n      .draw();\n  }\n\n  onFinalize() {\n    document.removeEventListener('keydown', keyboardEventHandler);\n  }\n}\n\nfunction keyboardEventHandler(e) {\n  switch (e.code) {\n    case 'ArrowUp':\n      xSpeed -= 0.02;\n      break;\n    case 'ArrowDown':\n      xSpeed += 0.02;\n      break;\n    case 'ArrowLeft':\n      ySpeed -= 0.02;\n      break;\n    case 'ArrowRight':\n      ySpeed += 0.02;\n      break;\n    case 'Equal': // '+'\n      cubePositionZ += 0.05;\n      break;\n    case 'Minus': // '-'\n      cubePositionZ -= 0.05;\n      break;\n    default:\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/lessons/08/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import {uid, assert} from '../utils';\n\n// Rendering primitives - specify how to extract primitives from vertices.\n// NOTE: These are numerically identical to the corresponding WebGL/OpenGL constants\nexport const DRAW_MODE = {\n  POINTS: 0x0000, // draw single points.\n  LINES: 0x0001, // draw lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // draw lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // draw a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // draw triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // draw a connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // draw a connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\nexport default class Geometry {\n  static get DRAW_MODE() {\n    return DRAW_MODE;\n  }\n\n  constructor(props = {}) {\n    const {\n      id = uid('geometry'),\n      drawMode = DRAW_MODE.TRIANGLES,\n      attributes = {},\n      indices = null,\n      vertexCount = null\n    } = props;\n\n    this.id = id;\n    this.drawMode = drawMode | 0;\n    this.attributes = {};\n    this.userData = {};\n\n    this._setAttributes(attributes, indices);\n\n    this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n\n    // stubRemovedMethods(this, [\n    //   'setNeedsRedraw', 'needsRedraw', 'setAttributes'\n    // ], 'Immutable');\n\n    // stubRemovedMethods(this, [\n    //   'hasAttribute', 'getAttribute', 'getArray'\n    // ], 'Use geometry.attributes and geometry.indices');\n\n    // deprecateMethods(this, ['getAttributes'])\n  }\n\n  get mode() {\n    return this.drawMode;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  // Return an object with all attributes plus indices added as a field.\n  getAttributes() {\n    return this.indices ? {indices: this.indices, ...this.attributes} : this.attributes;\n  }\n\n  // PRIVATE\n\n  _print(attributeName) {\n    return `Geometry ${this.id} attribute ${attributeName}`;\n  }\n\n  // Attribute\n  // value: typed array\n  // type: indices, vertices, uvs\n  // size: elements per vertex\n  // target: WebGL buffer type (string or constant)\n  _setAttributes(attributes, indices) {\n    if (indices) {\n      this.indices = ArrayBuffer.isView(indices) ? {value: indices, size: 1} : indices;\n    }\n\n    for (const attributeName in attributes) {\n      let attribute = attributes[attributeName];\n\n      // Wrap \"unwrapped\" arrays and try to autodetect their type\n      attribute = ArrayBuffer.isView(attribute) ? {value: attribute} : attribute;\n\n      assert(\n        ArrayBuffer.isView(attribute.value),\n        `${this._print(attributeName)}: must be typed array or object with value as typed array`\n      );\n\n      if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\n        attribute.size = 3;\n      }\n\n      // Move indices to separate field\n      if (attributeName === 'indices') {\n        assert(!this.indices);\n        this.indices = attribute;\n      } else {\n        this.attributes[attributeName] = attribute;\n      }\n    }\n\n    if (this.indices && this.indices.isIndexed !== undefined) {\n      this.indices = Object.assign({}, this.indices);\n      delete this.indices.isIndexed;\n    }\n\n    return this;\n  }\n\n  _calculateVertexCount(attributes, indices) {\n    if (indices) {\n      return indices.value.length;\n    }\n    let vertexCount = Infinity;\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const {value, size, constant} = attribute;\n      if (!constant && value && size >= 1) {\n        vertexCount = Math.min(vertexCount, value.length / size);\n      }\n    }\n\n    assert(Number.isFinite(vertexCount));\n    return vertexCount;\n  }\n}\n","'use strict';\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n}; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nvar isBrowser = typeof window !== 'undefined' && window.addEventListener;\nvar timers = new Map();\n/**\n * Ready check for Seer initialization\n *\n * @returns {Boolean}\n */\n\nvar isReady = function isReady() {\n  return isBrowser && window.__SEER_INITIALIZED__;\n};\n/**\n * Utility method allowing to throttle a user action based on a key and a minimun delay.\n *\n * @param key {String} A unique key\n * @param delay {Number} The minimal delay to throttle\n * @returns {Boolean}\n */\n\n\nvar throttle = function throttle(key, delay) {\n  var time = timers.get(key);\n  var now = Date.now();\n\n  if (time && now - time < delay) {\n    return true;\n  }\n\n  timers.set(key, now);\n  return false;\n};\n\nvar replacer = function replacer(seen) {\n  return function (key, value) {\n    if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && seen.has(value)) {\n      return;\n    }\n\n    seen.add(value);\n    var isArray = Object.prototype.toString.call(value).slice(8, -1).includes('Array');\n\n    if (isArray) {\n      return Array.prototype.slice.call(value, 0, 20);\n    }\n\n    return value;\n  };\n};\n/**\n * Low-level api leveraging window.postMessage\n *\n * @param type {String} The action type\n * @param payload {Any} The action payload\n */\n\n\nvar send = function send(type) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isBrowser || !isReady()) {\n    return;\n  }\n\n  var seen = new Set();\n  var payload = JSON.stringify(data, replacer(seen));\n\n  try {\n    window.postMessage({\n      type: type,\n      payload: payload,\n      source: 'seer-agent'\n    }, '*');\n  } catch (e) {\n    if (throttle('seer-log', 2E3)) {\n      return;\n    }\n\n    console.log(e); // eslint-disable-line\n  }\n};\n\nvar listeners = new Map();\n\nvar listener = function listener(message) {\n  if (!message || !message.data || message.data.source !== 'seer-core') {\n    return;\n  }\n\n  var _message$data = message.data,\n      type = _message$data.type,\n      payload = _message$data.payload;\n  var typeListeners = listeners.get(type);\n\n  if (typeListeners) {\n    typeListeners.forEach(function (cb) {\n      return cb(payload);\n    });\n  }\n};\n/**\n * Initilize window listener. There will be only one for the whole process\n * to prevent too many registrations.\n *\n * This method will be called automatically if you use the `listenFor` method.\n */\n\n\nvar init = function init() {\n  if (!isBrowser || window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.addEventListener('message', listener);\n  window.__SEER_LISTENER__ = true;\n};\n/**\n * Clean listener. Can be useful in case you want to unregister upcoming events\n * or liberate memory.\n */\n\n\nvar clean = function clean() {\n  if (!isBrowser || !window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.removeEventListener('message', listener);\n  delete window.__SEER_LISTENER__;\n};\n/**\n * Create a listener that will be called upon events of the given key.\n *\n * @param key {String} The unique tab key\n * @param cb {Function} A callback that will receive the message payload\n */\n\n\nvar listenFor = function listenFor(type, cb) {\n  if (!isBrowser) {\n    return;\n  }\n\n  if (!type || !cb) {\n    throw new Error('Please provide a type and callback');\n  }\n\n  if (!listeners.has(type)) {\n    listeners.set(type, []);\n  }\n\n  if (!window.__SEER_LISTENER__) {\n    init();\n  }\n\n  listeners.get(type).push(cb);\n};\n/**\n * Remove an identity listener\n *\n * @param cb {Function} The callback to remove\n */\n\n\nvar removeListener = function removeListener(cb) {\n  listeners.forEach(function (typeListeners, key) {\n    listeners.set(key, typeListeners.filter(function (l) {\n      return l !== cb;\n    }));\n  });\n};\n/**\n * Creates a new indexed list.\n * It works by index to get O(1) accessing and performance.\n *\n * @param key {String} The key of the tab\n * @param data {Object} The indexed object\n */\n\n\nvar list = function list(key, data) {\n  return send('LIST', {\n    key: key,\n    data: data\n  });\n};\n/**\n * Creates an element in the indexed list, based on the itemKey.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param data {Any} The value of the item\n */\n\n\nvar listItem = function listItem(key, itemKey) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return send('LIST_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    data: data\n  });\n};\n/**\n * Update an item property, can be deeply nested.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param path {String} The path of the variable you want to update\n * @param data {Object} The new value\n */\n\n\nvar updateItem = function updateItem(key, itemKey, path, data) {\n  return send('UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    path: path,\n    data: data\n  });\n};\n/**\n * Similar to updateItem, but allows to pass an array with {path,data} pairs for\n * multiple update of the same item without having to send multiple messages.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param array {Array} The array of updates\n * @param array.path {String} The path for this update\n * @param array.data {Object} The value of this update\n */\n\n\nvar multiUpdate = function multiUpdate(key, itemKey, array) {\n  return send('MULTI_UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    array: array\n  });\n};\n/**\n * Remove a specific item in a specific tab.\n *\n * @param key {String} They key of the tab\n * @param itemKey {String} The key of the item\n */\n\n\nvar deleteItem = function deleteItem(key, itemKey) {\n  return send('DELETE_ITEM', {\n    key: key,\n    itemKey: itemKey\n  });\n};\n/**\n * Will create a log message to an item, that will be displayde with the current time.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param msg {String} The message to display\n */\n\n\nvar addLog = function addLog(key, itemKey, msg) {\n  return send('ADD_LOG', {\n    key: key,\n    itemKey: itemKey,\n    msg: msg\n  });\n};\n\nexports[\"default\"] = {\n  send: send,\n  throttle: throttle,\n  isReady: isReady,\n  list: list,\n  listItem: listItem,\n  updateItem: updateItem,\n  multiUpdate: multiUpdate,\n  deleteItem: deleteItem,\n  addLog: addLog,\n  listeners: listeners,\n  listenFor: listenFor,\n  removeListener: removeListener,\n  init: init,\n  clean: clean\n};","import {Vector3, Matrix4} from 'math.gl';\nimport {assert, uid} from '../../utils';\n\nexport default class ScenegraphNode {\n  constructor(props = {}) {\n    const {id} = props;\n\n    this.id = id || uid(this.constructor.name);\n\n    this.display = true; // whether to display the object at all\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n    this.userData = {};\n\n    this.props = {};\n    this._setScenegraphNodeProps(props);\n  }\n\n  delete() {}\n\n  setProps(props) {\n    this._setScenegraphNodeProps(props);\n    return this;\n  }\n\n  toString() {\n    return `{type: ScenegraphNode, id: ${this.id})}`;\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrix(matrix, copyMatrix = true) {\n    if (copyMatrix) {\n      this.matrix.copy(matrix);\n    } else {\n      this.matrix = matrix;\n    }\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update({position, rotation, scale} = {}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  /*\n  transform() {\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n  */\n\n  _setScenegraphNodeProps(props) {\n    if ('display' in props) {\n      this.display = props.display;\n    }\n\n    if ('position' in props) {\n      this.setPosition(props.position);\n    }\n    if ('rotation' in props) {\n      this.setRotation(props.rotation);\n    }\n    if ('scale' in props) {\n      this.setScale(props.scale);\n    }\n\n    // Matrix overwrites other props\n    if ('matrix' in props) {\n      this.setMatrix(props.matrix);\n    }\n\n    Object.assign(this.props, props);\n  }\n}\n","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport assert from '../../lib/assert';\n\nvar Vector = function (_MathArray) {\n  _inherits(Vector, _MathArray);\n\n  function Vector() {\n    _classCallCheck(this, Vector);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Vector).apply(this, arguments));\n  }\n\n  _createClass(Vector, [{\n    key: \"len\",\n    value: function len() {\n      return Math.sqrt(this.lengthSquared());\n    }\n  }, {\n    key: \"magnitude\",\n    value: function magnitude() {\n      return this.len();\n    }\n  }, {\n    key: \"lengthSquared\",\n    value: function lengthSquared() {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        length += this[i] * this[i];\n      }\n\n      return length;\n    }\n  }, {\n    key: \"magnitudeSquared\",\n    value: function magnitudeSquared() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distance\",\n    value: function distance(mathArray) {\n      return Math.sqrt(this.distanceSquared(mathArray));\n    }\n  }, {\n    key: \"distanceSquared\",\n    value: function distanceSquared(mathArray) {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        var dist = this[i] - mathArray[i];\n        length += dist * dist;\n      }\n\n      return checkNumber(length);\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(mathArray) {\n      var product = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        product += this[i] * mathArray[i];\n      }\n\n      return checkNumber(product);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var length = this.magnitude();\n\n      if (length !== 0) {\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= length;\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply() {\n      for (var _len = arguments.length, vectors = new Array(_len), _key = 0; _key < _len; _key++) {\n        vectors[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _vectors = vectors; _i < _vectors.length; _i++) {\n        var vector = _vectors[_i];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] *= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"divide\",\n    value: function divide() {\n      for (var _len2 = arguments.length, vectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        vectors[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _vectors2 = vectors; _i2 < _vectors2.length; _i2++) {\n        var vector = _vectors2[_i2];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"lengthSq\",\n    value: function lengthSq() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(vector) {\n      return this.distance(vector);\n    }\n  }, {\n    key: \"distanceToSquared\",\n    value: function distanceToSquared(vector) {\n      return this.distanceSquared(vector);\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(i) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      return checkNumber(this[i]);\n    }\n  }, {\n    key: \"setComponent\",\n    value: function setComponent(i, value) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      this[i] = value;\n      return this.check();\n    }\n  }, {\n    key: \"addVectors\",\n    value: function addVectors(a, b) {\n      return this.copy(a).add(b);\n    }\n  }, {\n    key: \"subVectors\",\n    value: function subVectors(a, b) {\n      return this.copy(a).subtract(b);\n    }\n  }, {\n    key: \"multiplyVectors\",\n    value: function multiplyVectors(a, b) {\n      return this.copy(a).multiply(b);\n    }\n  }, {\n    key: \"addScaledVector\",\n    value: function addScaledVector(a, b) {\n      return this.add(new this.constructor(a).multiplyScalar(b));\n    }\n  }, {\n    key: \"x\",\n    get: function get() {\n      return this[0];\n    },\n    set: function set(value) {\n      return this[0] = checkNumber(value);\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this[1];\n    },\n    set: function set(value) {\n      return this[1] = checkNumber(value);\n    }\n  }]);\n\n  return Vector;\n}(MathArray);\n\nexport { Vector as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nvar ORIGIN = [0, 0, 0];\n\nvar Vector3 = function (_Vector) {\n  _inherits(Vector3, _Vector);\n\n  function Vector3() {\n    var _this;\n\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Vector3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vector3).call(this, -0, -0, -0));\n\n    if (arguments.length === 1 && isArray(x)) {\n      _this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      _this[0] = x;\n      _this[1] = y;\n      _this[2] = z;\n    }\n\n    return _this;\n  }\n\n  _createClass(Vector3, [{\n    key: \"set\",\n    value: function set(x, y, z) {\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      return this.check();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      return this.check();\n    }\n  }, {\n    key: \"fromObject\",\n    value: function fromObject(object) {\n      if (config.debug) {\n        checkNumber(object.x);\n        checkNumber(object.y);\n        checkNumber(object.z);\n      }\n\n      this[0] = object.x;\n      this[1] = object.y;\n      this[2] = object.z;\n      return this.check();\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject(object) {\n      object.x = this[0];\n      object.y = this[1];\n      object.z = this[2];\n      return object;\n    }\n  }, {\n    key: \"angle\",\n    value: function angle(vector) {\n      return vec3.angle(this, vector);\n    }\n  }, {\n    key: \"cross\",\n    value: function cross(vector) {\n      vec3.cross(this, this, vector);\n      return this.check();\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(_ref) {\n      var radians = _ref.radians,\n          _ref$origin = _ref.origin,\n          origin = _ref$origin === void 0 ? ORIGIN : _ref$origin;\n      vec3.rotateX(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(_ref2) {\n      var radians = _ref2.radians,\n          _ref2$origin = _ref2.origin,\n          origin = _ref2$origin === void 0 ? ORIGIN : _ref2$origin;\n      vec3.rotateY(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(_ref3) {\n      var radians = _ref3.radians,\n          _ref3$origin = _ref3.origin,\n          origin = _ref3$origin === void 0 ? ORIGIN : _ref3$origin;\n      vec3.rotateZ(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix4) {\n      return this.transformAsPoint(matrix4);\n    }\n  }, {\n    key: \"transformAsPoint\",\n    value: function transformAsPoint(matrix4) {\n      vec3.transformMat4(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformAsVector\",\n    value: function transformAsVector(matrix4) {\n      vec3_transformMat4AsVector(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix3\",\n    value: function transformByMatrix3(matrix3) {\n      vec3.transformMat3(this, this, matrix3);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix2\",\n    value: function transformByMatrix2(matrix2) {\n      vec3_transformMat2(this, this, matrix2);\n      return this.check();\n    }\n  }, {\n    key: \"transformByQuaternion\",\n    value: function transformByQuaternion(quaternion) {\n      vec3.transformQuat(this, this, quaternion);\n      return this.check();\n    }\n  }, {\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 3;\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this[2];\n    },\n    set: function set(value) {\n      return this[2] = checkNumber(value);\n    }\n  }]);\n\n  return Vector3;\n}(Vector);\n\nexport { Vector3 as default };","import Model from '../../lib/model';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n"],"sourceRoot":""}