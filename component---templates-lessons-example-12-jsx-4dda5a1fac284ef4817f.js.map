{"version":3,"sources":["webpack:///../examples/lessons/12/app.js","webpack:///./templates/lessons/example-12.jsx","webpack:///../modules/core/src/geometries/cube-geometry.js","webpack:///../node_modules/math.gl/dist/esm/classes/base/vector.js","webpack:///../node_modules/math.gl/dist/esm/classes/vector3.js","webpack:///../modules/core/src/geometries/sphere-geometry.js"],"names":["VERTEX_SHADER","FRAGMENT_SHADER","appState","moonRotationMatrix","radians","cubeRotationMatrix","lastTime","AppAnimationLoop","getInfo","onInitialize","canvas","gl","setParameters","clearColor","clearDepth","depthTest","moon","geometry","nlat","nlong","radius","fs","vs","uniforms","uSampler","cube","onRender","aspect","tick","GL","uVMatrix","eye","center","up","getElementValue","id","element","document","lighting","uUseLighting","ambientColor","parseFloat","pointLightingLocation","pointLightColor","uAmbientColor","uPointLightingLocation","uPointLightingColor","uMMatrix","uPMatrix","fov","Math","near","far","timeNow","Date","elapsed","newMatrix","animateAppState","AnimationLoop","window","animationLoop","Example","render","exampleConfig","this","props","pageContext","React","Component","CUBE_INDICES","Uint16Array","CUBE_POSITIONS","Float32Array","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","POSITION","size","value","NORMAL","TEXCOORD_0","CubeGeometry","uid","indices","attributes","Geometry","_MathArray","Vector","apply","arguments","key","sqrt","lengthSquared","len","length","i","ELEMENTS","mathArray","distanceSquared","dist","product","magnitude","check","_len","vectors","Array","_key","_i","_vectors","vector","_len2","_key2","_i2","_vectors2","distance","assert","a","b","copy","add","subtract","multiply","constructor","multiplyScalar","get","set","ORIGIN","_Vector","Vector3","_this","x","undefined","y","z","call","debug","array","object","vec3","_ref","_ref$origin","origin","_ref2","_ref2$origin","_ref3","_ref3$origin","matrix4","transformAsPoint","matrix3","matrix2","quaternion","SphereGeometry","latRange","longRange","numVertices","positions","normals","texCoords","u","v","index","i2","i3","theta","phi","sinTheta","cosTheta","sinPhi","cosPhi","ux","uy","uz","r","numVertsAround","tesselateSphere"],"mappings":"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","file":"component---templates-lessons-example-12-jsx-4dda5a1fac284ef4817f.js","sourcesContent":["import GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  Texture2D,\n  setParameters,\n  Model,\n  SphereGeometry,\n  CubeGeometry\n} from '@luma.gl/core';\nimport {Vector3, Matrix4, radians} from 'math.gl';\n/* eslint-disable complexity */\n\nconst VERTEX_SHADER = `\\\nattribute vec3 positions;\nattribute vec3 normals;\nattribute vec2 texCoords;\n\nuniform mat4 uMMatrix;\nuniform mat4 uVMatrix;\nuniform mat4 uPMatrix;\n\nuniform vec3 uAmbientColor;\n\nuniform vec3 uPointLightingLocation;\nuniform vec3 uPointLightingColor;\n\nuniform bool uUseLighting;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vLightWeighting;\n\nvoid main(void) {\n    vec4 mPosition = uMMatrix * vec4(positions, 1.0);\n    gl_Position = uPMatrix * uVMatrix * mPosition;\n    vTextureCoord = texCoords;\n\n    if (!uUseLighting) {\n        vLightWeighting = vec3(1.0, 1.0, 1.0);\n    } else {\n        vec3 lightDirection = normalize(uPointLightingLocation - mPosition.xyz);\n        vec4 transformedNormal = uMMatrix * vec4(normals, 0.0);\n        float pointLightWeighting = max(dot(transformedNormal.xyz, lightDirection), 0.0);\n        vLightWeighting = uAmbientColor + uPointLightingColor * pointLightWeighting;\n    }\n}\n`;\n\nconst FRAGMENT_SHADER = `\\\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vLightWeighting;\n\nuniform sampler2D uSampler;\n\nvoid main(void) {\n  vec4 textureColor = texture2D(uSampler, vec2(1.0 - vTextureCoord.s, 1.0 - vTextureCoord.t));\n  gl_FragColor = vec4(textureColor.rgb * vLightWeighting, textureColor.a);\n}\n`;\n\nconst INFO_HTML = `\n<p>\n  <a href=\"http://learningwebgl.com/blog/?p=1359\" target=\"_blank\">\n  Point lighting\n  </a>\n<p>\n  The classic WebGL Lessons in luma.gl\n`;\n\nconst appState = {\n  moonRotationMatrix: new Matrix4().rotateY(radians(180)).translate([5, 0, 0]),\n  cubeRotationMatrix: new Matrix4().translate([5, 0, 0]),\n  lastTime: 0\n};\n\nfunction animateAppState() {\n  const timeNow = Date.now();\n  if (appState.lastTime !== 0) {\n    const elapsed = timeNow - appState.lastTime;\n    const newMatrix = new Matrix4().rotateY(radians(elapsed / 20));\n    appState.moonRotationMatrix.multiplyLeft(newMatrix);\n    appState.cubeRotationMatrix.multiplyLeft(newMatrix);\n  }\n  appState.lastTime = timeNow;\n}\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({canvas, gl}) {\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      depthTest: true\n    });\n\n    return {\n      moon: new Model(gl, {\n        geometry: new SphereGeometry({\n          nlat: 30,\n          nlong: 30,\n          radius: 2\n        }),\n        fs: FRAGMENT_SHADER,\n        vs: VERTEX_SHADER,\n        uniforms: {\n          uSampler: new Texture2D(gl, 'moon.gif')\n        }\n      }),\n      cube: new Model(gl, {\n        geometry: new CubeGeometry(),\n        vs: VERTEX_SHADER,\n        fs: FRAGMENT_SHADER,\n        uniforms: {\n          uSampler: new Texture2D(gl, 'crate.gif')\n        }\n      })\n    };\n  }\n\n  onRender({gl, tick, aspect, moon, cube}) {\n    // eslint-disable-line complexity\n    // set camera position\n    const eyePos = [0, 0, 20];\n\n    gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n\n    const uVMatrix = new Matrix4().lookAt({eye: eyePos, center: [0, 0, 0], up: [0, 1, 0]});\n\n    /* global document */\n    function getElementValue(id, defaultValue) {\n      const element = document.getElementById(id);\n      return element ? element.value : defaultValue;\n    }\n\n    const element = document.getElementById('lighting');\n    const lighting = element ? element.checked : true;\n\n    moon.setUniforms({uUseLighting: lighting});\n    cube.setUniforms({uUseLighting: lighting});\n\n    if (lighting) {\n      const ambientColor = new Vector3(\n        parseFloat(getElementValue('ambientR', 0.2)),\n        parseFloat(getElementValue('ambientG', 0.2)),\n        parseFloat(getElementValue('ambientB', 0.2))\n      );\n\n      const pointLightingLocation = new Vector3(\n        parseFloat(getElementValue('lightPositionX', 0)),\n        parseFloat(getElementValue('lightPositionY', 0)),\n        parseFloat(getElementValue('lightPositionZ', 0))\n      );\n\n      const pointLightColor = new Vector3(\n        parseFloat(getElementValue('pointR', 0.8)),\n        parseFloat(getElementValue('pointG', 0.8)),\n        parseFloat(getElementValue('pointB', 0.8))\n      );\n\n      moon.setUniforms({\n        uAmbientColor: ambientColor,\n        uPointLightingLocation: pointLightingLocation,\n        uPointLightingColor: pointLightColor\n      });\n\n      cube.setUniforms({\n        uAmbientColor: ambientColor,\n        uPointLightingLocation: pointLightingLocation,\n        uPointLightingColor: pointLightColor\n      });\n    }\n\n    moon\n      .setUniforms({\n        uMMatrix: appState.moonRotationMatrix,\n        uVMatrix,\n        uPMatrix: new Matrix4().perspective({\n          fov: (45 * Math.PI) / 180,\n          aspect,\n          near: 0.1,\n          far: 100\n        })\n      })\n      .draw();\n\n    cube\n      .setUniforms({\n        uMMatrix: appState.cubeRotationMatrix,\n        uVMatrix,\n        uPMatrix: new Matrix4().perspective({\n          fov: (45 * Math.PI) / 180,\n          aspect,\n          near: 0.1,\n          far: 100\n        })\n      })\n      .draw();\n\n    animateAppState();\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/lessons/12/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport assert from '../../lib/assert';\n\nvar Vector = function (_MathArray) {\n  _inherits(Vector, _MathArray);\n\n  function Vector() {\n    _classCallCheck(this, Vector);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Vector).apply(this, arguments));\n  }\n\n  _createClass(Vector, [{\n    key: \"len\",\n    value: function len() {\n      return Math.sqrt(this.lengthSquared());\n    }\n  }, {\n    key: \"magnitude\",\n    value: function magnitude() {\n      return this.len();\n    }\n  }, {\n    key: \"lengthSquared\",\n    value: function lengthSquared() {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        length += this[i] * this[i];\n      }\n\n      return length;\n    }\n  }, {\n    key: \"magnitudeSquared\",\n    value: function magnitudeSquared() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distance\",\n    value: function distance(mathArray) {\n      return Math.sqrt(this.distanceSquared(mathArray));\n    }\n  }, {\n    key: \"distanceSquared\",\n    value: function distanceSquared(mathArray) {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        var dist = this[i] - mathArray[i];\n        length += dist * dist;\n      }\n\n      return checkNumber(length);\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(mathArray) {\n      var product = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        product += this[i] * mathArray[i];\n      }\n\n      return checkNumber(product);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var length = this.magnitude();\n\n      if (length !== 0) {\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= length;\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply() {\n      for (var _len = arguments.length, vectors = new Array(_len), _key = 0; _key < _len; _key++) {\n        vectors[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _vectors = vectors; _i < _vectors.length; _i++) {\n        var vector = _vectors[_i];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] *= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"divide\",\n    value: function divide() {\n      for (var _len2 = arguments.length, vectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        vectors[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _vectors2 = vectors; _i2 < _vectors2.length; _i2++) {\n        var vector = _vectors2[_i2];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"lengthSq\",\n    value: function lengthSq() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(vector) {\n      return this.distance(vector);\n    }\n  }, {\n    key: \"distanceToSquared\",\n    value: function distanceToSquared(vector) {\n      return this.distanceSquared(vector);\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(i) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      return checkNumber(this[i]);\n    }\n  }, {\n    key: \"setComponent\",\n    value: function setComponent(i, value) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      this[i] = value;\n      return this.check();\n    }\n  }, {\n    key: \"addVectors\",\n    value: function addVectors(a, b) {\n      return this.copy(a).add(b);\n    }\n  }, {\n    key: \"subVectors\",\n    value: function subVectors(a, b) {\n      return this.copy(a).subtract(b);\n    }\n  }, {\n    key: \"multiplyVectors\",\n    value: function multiplyVectors(a, b) {\n      return this.copy(a).multiply(b);\n    }\n  }, {\n    key: \"addScaledVector\",\n    value: function addScaledVector(a, b) {\n      return this.add(new this.constructor(a).multiplyScalar(b));\n    }\n  }, {\n    key: \"x\",\n    get: function get() {\n      return this[0];\n    },\n    set: function set(value) {\n      return this[0] = checkNumber(value);\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this[1];\n    },\n    set: function set(value) {\n      return this[1] = checkNumber(value);\n    }\n  }]);\n\n  return Vector;\n}(MathArray);\n\nexport { Vector as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nvar ORIGIN = [0, 0, 0];\n\nvar Vector3 = function (_Vector) {\n  _inherits(Vector3, _Vector);\n\n  function Vector3() {\n    var _this;\n\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Vector3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vector3).call(this, -0, -0, -0));\n\n    if (arguments.length === 1 && isArray(x)) {\n      _this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      _this[0] = x;\n      _this[1] = y;\n      _this[2] = z;\n    }\n\n    return _this;\n  }\n\n  _createClass(Vector3, [{\n    key: \"set\",\n    value: function set(x, y, z) {\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      return this.check();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      return this.check();\n    }\n  }, {\n    key: \"fromObject\",\n    value: function fromObject(object) {\n      if (config.debug) {\n        checkNumber(object.x);\n        checkNumber(object.y);\n        checkNumber(object.z);\n      }\n\n      this[0] = object.x;\n      this[1] = object.y;\n      this[2] = object.z;\n      return this.check();\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject(object) {\n      object.x = this[0];\n      object.y = this[1];\n      object.z = this[2];\n      return object;\n    }\n  }, {\n    key: \"angle\",\n    value: function angle(vector) {\n      return vec3.angle(this, vector);\n    }\n  }, {\n    key: \"cross\",\n    value: function cross(vector) {\n      vec3.cross(this, this, vector);\n      return this.check();\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(_ref) {\n      var radians = _ref.radians,\n          _ref$origin = _ref.origin,\n          origin = _ref$origin === void 0 ? ORIGIN : _ref$origin;\n      vec3.rotateX(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(_ref2) {\n      var radians = _ref2.radians,\n          _ref2$origin = _ref2.origin,\n          origin = _ref2$origin === void 0 ? ORIGIN : _ref2$origin;\n      vec3.rotateY(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(_ref3) {\n      var radians = _ref3.radians,\n          _ref3$origin = _ref3.origin,\n          origin = _ref3$origin === void 0 ? ORIGIN : _ref3$origin;\n      vec3.rotateZ(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix4) {\n      return this.transformAsPoint(matrix4);\n    }\n  }, {\n    key: \"transformAsPoint\",\n    value: function transformAsPoint(matrix4) {\n      vec3.transformMat4(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformAsVector\",\n    value: function transformAsVector(matrix4) {\n      vec3_transformMat4AsVector(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix3\",\n    value: function transformByMatrix3(matrix3) {\n      vec3.transformMat3(this, this, matrix3);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix2\",\n    value: function transformByMatrix2(matrix2) {\n      vec3_transformMat2(this, this, matrix2);\n      return this.check();\n    }\n  }, {\n    key: \"transformByQuaternion\",\n    value: function transformByQuaternion(quaternion) {\n      vec3.transformQuat(this, this, quaternion);\n      return this.check();\n    }\n  }, {\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 3;\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this[2];\n    },\n    set: function set(value) {\n      return this[2] = checkNumber(value);\n    }\n  }]);\n\n  return Vector3;\n}(Vector);\n\nexport { Vector3 as default };","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\nexport default class SphereGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('sphere-geometry')} = props;\n    const {indices, attributes} = tesselateSphere(props);\n    super({\n      ...props,\n      id,\n      indices,\n      attributes: {...attributes, ...props.attributes}\n    });\n  }\n}\n\n// Primitives inspired by TDL http://code.google.com/p/webglsamples/,\n// copyright 2011 Google Inc. new BSD License\n// (http://www.opensource.org/licenses/bsd-license.php).\n/* eslint-disable max-statements, complexity */\nfunction tesselateSphere(props) {\n  const {nlat = 10, nlong = 10} = props;\n  let {radius = 1} = props;\n\n  const startLat = 0;\n  const endLat = Math.PI;\n  const latRange = endLat - startLat;\n  const startLong = 0;\n  const endLong = 2 * Math.PI;\n  const longRange = endLong - startLong;\n  const numVertices = (nlat + 1) * (nlong + 1);\n\n  if (typeof radius === 'number') {\n    const value = radius;\n    radius = (n1, n2, n3, u, v) => value;\n  }\n\n  const positions = new Float32Array(numVertices * 3);\n  const normals = new Float32Array(numVertices * 3);\n  const texCoords = new Float32Array(numVertices * 2);\n  const indices = new Uint16Array(nlat * nlong * 6);\n\n  // Create positions, normals and texCoords\n  for (let y = 0; y <= nlat; y++) {\n    for (let x = 0; x <= nlong; x++) {\n      const u = x / nlong;\n      const v = y / nlat;\n\n      const index = x + y * (nlong + 1);\n      const i2 = index * 2;\n      const i3 = index * 3;\n\n      const theta = longRange * u;\n      const phi = latRange * v;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n\n      const r = radius(ux, uy, uz, u, v);\n\n      positions[i3 + 0] = r * ux;\n      positions[i3 + 1] = r * uy;\n      positions[i3 + 2] = r * uz;\n\n      normals[i3 + 0] = ux;\n      normals[i3 + 1] = uy;\n      normals[i3 + 2] = uz;\n\n      texCoords[i2 + 0] = u;\n      texCoords[i2 + 1] = 1 - v;\n    }\n  }\n\n  // Create indices\n  const numVertsAround = nlat + 1;\n  for (let x = 0; x < nlat; x++) {\n    for (let y = 0; y < nlong; y++) {\n      const index = (x * nlong + y) * 6;\n\n      indices[index + 0] = y * numVertsAround + x;\n      indices[index + 1] = y * numVertsAround + x + 1;\n      indices[index + 2] = (y + 1) * numVertsAround + x;\n\n      indices[index + 3] = (y + 1) * numVertsAround + x;\n      indices[index + 4] = y * numVertsAround + x + 1;\n      indices[index + 5] = (y + 1) * numVertsAround + x + 1;\n    }\n  }\n\n  return {\n    indices: {size: 1, value: indices},\n    attributes: {\n      POSITION: {size: 3, value: positions},\n      NORMAL: {size: 3, value: normals},\n      TEXCOORD_0: {size: 2, value: texCoords}\n    }\n  };\n}\n"],"sourceRoot":""}