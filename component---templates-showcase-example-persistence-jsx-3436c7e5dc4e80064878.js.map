{"version":3,"sources":["webpack:///../modules/engine/src/geometries/ico-sphere-geometry.js","webpack:///../examples/showcase/persistence/app.js","webpack:///./templates/showcase/example-persistence.jsx","webpack:///../modules/engine/src/geometry/geometry.js","webpack:///../node_modules/math.gl/dist/esm/classes/base/vector.js","webpack:///../node_modules/math.gl/dist/esm/classes/vector3.js"],"names":["ICO_POSITIONS","ICO_INDICES","IcoSphereGeometry","props","id","uid","iterations","PI","Math","PI2","positions","indices","getMiddlePoint","pointMemo","key","i1","i2","x1","y1","z1","xm","ym","zm","len","i","indices2","j","a","b","c","normals","Array","texCoords","i3","in1","in2","in3","iu1","iu2","iu3","theta1","phi1","v1","u1","x2","y2","z2","theta2","phi2","v2","u2","x3","y3","z3","theta3","phi3","v3","u3","vec1","vec2","normal","newIndex","size","value","Uint16Array","attributes","POSITION","Float32Array","NORMAL","TEXCOORD_0","tesselateIcosaHedron","Geometry","SCREEN_QUAD_VS","random","getRandom","ePos","eRot","nPos","AppAnimationLoop","getInfo","onInitialize","gl","width","height","setParameters","clearColor","clearDepth","depthTest","depthFunc","faceCulling","cullFace","BACK","mainFramebuffer","pingpongFramebuffers","quadGeometry","aPosition","vertexCount","quad","program","vs","fs","geometry","persistenceQuad","sphere","pos","distanceFromCenter","q","axis","theta","rot","onRender","tick","aspect","projection","fov","radians","view","eye","clear","framebuffer","color","depth","modelMatrix","uniforms","uModelView","uView","uProjection","uColor","uLighting","translation","ppi","currentFramebuffer","nextFramebuffer","uScene","uPersistence","uRes","uTexture","AnimationLoop","window","animationLoop","Example","render","exampleConfig","this","pageContext","React","Component","DRAW_MODE","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","drawMode","userData","_setAttributes","_calculateVertexCount","getVertexCount","getAttributes","_print","ArrayBuffer","attribute","assert","attributeName","isIndexed","Object","Number","_MathArray","Vector","apply","arguments","sqrt","lengthSquared","length","ELEMENTS","mathArray","distanceSquared","dist","product","magnitude","check","_len","vectors","_key","_i","_vectors","vector","_len2","_key2","_i2","_vectors2","distance","copy","add","subtract","multiply","constructor","multiplyScalar","get","set","ORIGIN","_Vector","Vector3","_this","x","undefined","y","z","call","debug","array","object","vec3","_ref","_ref$origin","origin","_ref2","_ref2$origin","_ref3","_ref3$origin","matrix4","transformAsPoint","matrix3","matrix2","quaternion"],"mappings":"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","file":"component---templates-showcase-example-persistence-jsx-3436c7e5dc4e80064878.js","sourcesContent":["import {Vector3} from 'math.gl';\nimport Geometry from '../geometry/geometry';\nimport {uid} from '@luma.gl/webgl';\n\n/* eslint-disable comma-spacing, max-statements, complexity */\n\nconst ICO_POSITIONS = [-1, 0, 0, 0, 1, 0, 0, 0, -1, 0, 0, 1, 0, -1, 0, 1, 0, 0];\nconst ICO_INDICES = [3, 4, 5, 3, 5, 1, 3, 1, 0, 3, 0, 4, 4, 0, 2, 4, 2, 5, 2, 0, 1, 5, 2, 1];\n\nexport default class IcoSphereGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('ico-sphere-geometry')} = props;\n    const {indices, attributes} = tesselateIcosaHedron(props);\n    super({\n      ...props,\n      id,\n      indices,\n      attributes: {...attributes, ...props.attributes}\n    });\n  }\n}\n\nfunction tesselateIcosaHedron(props) {\n  const {iterations = 0} = props;\n\n  const PI = Math.PI;\n  const PI2 = PI * 2;\n\n  const positions = [...ICO_POSITIONS];\n  let indices = [...ICO_INDICES];\n\n  positions.push();\n  indices.push();\n\n  const getMiddlePoint = (() => {\n    const pointMemo = {};\n\n    return (i1, i2) => {\n      i1 *= 3;\n      i2 *= 3;\n      const mini = i1 < i2 ? i1 : i2;\n      const maxi = i1 > i2 ? i1 : i2;\n      const key = `${mini}|${maxi}`;\n\n      if (key in pointMemo) {\n        return pointMemo[key];\n      }\n\n      const x1 = positions[i1];\n      const y1 = positions[i1 + 1];\n      const z1 = positions[i1 + 2];\n      const x2 = positions[i2];\n      const y2 = positions[i2 + 1];\n      const z2 = positions[i2 + 2];\n      let xm = (x1 + x2) / 2;\n      let ym = (y1 + y2) / 2;\n      let zm = (z1 + z2) / 2;\n      const len = Math.sqrt(xm * xm + ym * ym + zm * zm);\n\n      xm /= len;\n      ym /= len;\n      zm /= len;\n\n      positions.push(xm, ym, zm);\n\n      return (pointMemo[key] = positions.length / 3 - 1);\n    };\n  })();\n\n  for (let i = 0; i < iterations; i++) {\n    const indices2 = [];\n    for (let j = 0; j < indices.length; j += 3) {\n      const a = getMiddlePoint(indices[j + 0], indices[j + 1]);\n      const b = getMiddlePoint(indices[j + 1], indices[j + 2]);\n      const c = getMiddlePoint(indices[j + 2], indices[j + 0]);\n\n      indices2.push(c, indices[j + 0], a, a, indices[j + 1], b, b, indices[j + 2], c, a, b, c);\n    }\n    indices = indices2;\n  }\n\n  // Calculate texCoords and normals\n  const normals = new Array(positions.length);\n  const texCoords = new Array((positions.length / 3) * 2);\n\n  const l = indices.length;\n  for (let i = l - 3; i >= 0; i -= 3) {\n    const i1 = indices[i + 0];\n    const i2 = indices[i + 1];\n    const i3 = indices[i + 2];\n    const in1 = i1 * 3;\n    const in2 = i2 * 3;\n    const in3 = i3 * 3;\n    const iu1 = i1 * 2;\n    const iu2 = i2 * 2;\n    const iu3 = i3 * 2;\n    const x1 = positions[in1 + 0];\n    const y1 = positions[in1 + 1];\n    const z1 = positions[in1 + 2];\n    const theta1 = Math.acos(z1 / Math.sqrt(x1 * x1 + y1 * y1 + z1 * z1));\n    const phi1 = Math.atan2(y1, x1) + PI;\n    const v1 = theta1 / PI;\n    const u1 = 1 - phi1 / PI2;\n    const x2 = positions[in2 + 0];\n    const y2 = positions[in2 + 1];\n    const z2 = positions[in2 + 2];\n    const theta2 = Math.acos(z2 / Math.sqrt(x2 * x2 + y2 * y2 + z2 * z2));\n    const phi2 = Math.atan2(y2, x2) + PI;\n    const v2 = theta2 / PI;\n    const u2 = 1 - phi2 / PI2;\n    const x3 = positions[in3 + 0];\n    const y3 = positions[in3 + 1];\n    const z3 = positions[in3 + 2];\n    const theta3 = Math.acos(z3 / Math.sqrt(x3 * x3 + y3 * y3 + z3 * z3));\n    const phi3 = Math.atan2(y3, x3) + PI;\n    const v3 = theta3 / PI;\n    const u3 = 1 - phi3 / PI2;\n    const vec1 = [x3 - x2, y3 - y2, z3 - z2];\n    const vec2 = [x1 - x2, y1 - y2, z1 - z2];\n    const normal = new Vector3(vec1).cross(vec2).normalize();\n    let newIndex;\n\n    if (\n      (u1 === 0 || u2 === 0 || u3 === 0) &&\n      (u1 === 0 || u1 > 0.5) &&\n      (u2 === 0 || u2 > 0.5) &&\n      (u3 === 0 || u3 > 0.5)\n    ) {\n      positions.push(positions[in1 + 0], positions[in1 + 1], positions[in1 + 2]);\n      newIndex = positions.length / 3 - 1;\n      indices.push(newIndex);\n      texCoords[newIndex * 2 + 0] = 1;\n      texCoords[newIndex * 2 + 1] = v1;\n      normals[newIndex * 3 + 0] = normal.x;\n      normals[newIndex * 3 + 1] = normal.y;\n      normals[newIndex * 3 + 2] = normal.z;\n\n      positions.push(positions[in2 + 0], positions[in2 + 1], positions[in2 + 2]);\n      newIndex = positions.length / 3 - 1;\n      indices.push(newIndex);\n      texCoords[newIndex * 2 + 0] = 1;\n      texCoords[newIndex * 2 + 1] = v2;\n      normals[newIndex * 3 + 0] = normal.x;\n      normals[newIndex * 3 + 1] = normal.y;\n      normals[newIndex * 3 + 2] = normal.z;\n\n      positions.push(positions[in3 + 0], positions[in3 + 1], positions[in3 + 2]);\n      newIndex = positions.length / 3 - 1;\n      indices.push(newIndex);\n      texCoords[newIndex * 2 + 0] = 1;\n      texCoords[newIndex * 2 + 1] = v3;\n      normals[newIndex * 3 + 0] = normal.x;\n      normals[newIndex * 3 + 1] = normal.y;\n      normals[newIndex * 3 + 2] = normal.z;\n    }\n\n    normals[in1 + 0] = normals[in2 + 0] = normals[in3 + 0] = normal.x;\n    normals[in1 + 1] = normals[in2 + 1] = normals[in3 + 1] = normal.y;\n    normals[in1 + 2] = normals[in2 + 2] = normals[in3 + 2] = normal.z;\n\n    texCoords[iu1 + 0] = u1;\n    texCoords[iu1 + 1] = v1;\n\n    texCoords[iu2 + 0] = u2;\n    texCoords[iu2 + 1] = v2;\n\n    texCoords[iu3 + 0] = u3;\n    texCoords[iu3 + 1] = v3;\n  }\n\n  return {\n    indices: {size: 1, value: new Uint16Array(indices)},\n    attributes: {\n      POSITION: {size: 3, value: new Float32Array(positions)},\n      NORMAL: {size: 3, value: new Float32Array(normals)},\n      TEXCOORD_0: {size: 2, value: new Float32Array(texCoords)}\n    }\n  };\n}\n","import {AnimationLoop, Model, Geometry, IcoSphereGeometry} from '@luma.gl/engine';\nimport {clear, Framebuffer, Program} from '@luma.gl/webgl';\nimport {setParameters} from '@luma.gl/gltools';\nimport {Matrix4, Vector3, radians} from 'math.gl';\nimport {getRandom} from '../../utils';\n\nconst INFO_HTML = `\n<p>\n  Electron trails renderings persist across multiple frames.\n<p>\n  Uses multiple luma.gl <code>Framebuffer</code>s to hold previously rendered data between frames.\n</p>\n`;\n\nconst SCREEN_QUAD_VS = `\\\nattribute vec2 aPosition;\n\nvoid main(void) {\n  gl_Position = vec4(aPosition, 0, 1);\n}\n`;\n\nconst SCREEN_QUAD_FS = `\\\nprecision highp float;\n\nuniform sampler2D uTexture;\nuniform vec2 uRes;\n\nvoid main(void) {\n  vec2 p = gl_FragCoord.xy/uRes.xy;\n  gl_FragColor = texture2D(uTexture, p);\n}\n`;\n\nconst PERSISTENCE_FS = `\\\nprecision highp float;\n\nuniform sampler2D uScene;\nuniform sampler2D uPersistence;\nuniform vec2 uRes;\n\nvoid main(void) {\n  vec2 p = gl_FragCoord.xy / uRes.xy;\n  vec4 cS = texture2D(uScene, p);\n  vec4 cP = texture2D(uPersistence, p);\n  gl_FragColor = mix(cS*4.0, cP, 0.9);\n}\n`;\n\nconst SPHERE_VS = `\\\nattribute vec3 positions;\nattribute vec3 normals;\n\nuniform mat4 uModelView;\nuniform mat4 uProjection;\n\nvarying vec3 normal;\n\nvoid main(void) {\n  gl_Position = uProjection * uModelView * vec4(positions, 1.0);\n  normal = vec3((uModelView * vec4(normals, 0.0)));\n}\n`;\n\nconst SPHERE_FS = `\\\nprecision highp float;\n\nuniform vec3 uColor;\nuniform bool uLighting;\n\nvarying vec3 normal;\n\nvoid main(void) {\n  float d = 1.0;\n  if (uLighting) {\n    vec3 l = normalize(vec3(1,1,2));\n    d = dot(normal, l);\n  }\n  gl_FragColor = vec4(uColor * d, 1);\n}\n`;\n\nconst random = getRandom();\n\nconst ELECTRON_COUNT = 64;\nconst ePos = [];\nconst eRot = [];\nconst nPos = [];\n\nlet mainFramebuffer;\nlet pingpongFramebuffers;\nlet quad;\nlet persistenceQuad;\nlet sphere;\n\n/* eslint-disable max-statements */\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({gl, width, height}) {\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      depthTest: true,\n      depthFunc: gl.LEQUAL,\n      faceCulling: true,\n      cullFace: gl.BACK\n    });\n\n    mainFramebuffer = new Framebuffer(gl, {width, height});\n\n    pingpongFramebuffers = [\n      new Framebuffer(gl, {width, height}),\n      new Framebuffer(gl, {width, height})\n    ];\n\n    const QUAD_POSITIONS = [-1, -1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1];\n\n    const quadGeometry = new Geometry({\n      attributes: {\n        aPosition: {\n          value: new Float32Array(QUAD_POSITIONS),\n          size: 2\n        }\n      },\n      vertexCount: 6\n    });\n\n    quad = new Model(gl, {\n      id: 'quad',\n      program: new Program(gl, {vs: SCREEN_QUAD_VS, fs: SCREEN_QUAD_FS}),\n      geometry: quadGeometry\n    });\n\n    persistenceQuad = new Model(gl, {\n      id: 'persistence-quad',\n      program: new Program(gl, {vs: SCREEN_QUAD_VS, fs: PERSISTENCE_FS}),\n      geometry: quadGeometry\n    });\n\n    sphere = new Model(gl, {\n      id: 'electron',\n      geometry: new IcoSphereGeometry({\n        iterations: 4\n      }),\n      program: new Program(gl, {vs: SPHERE_VS, fs: SPHERE_FS})\n    });\n\n    const dt = 0.0125;\n\n    for (let i = 0; i < ELECTRON_COUNT; i++) {\n      // Place electron cloud at random positions\n      const pos = new Vector3(random() - 0.5, random() - 0.5, random() - 0.5);\n\n      // Push them out a bit\n      const distanceFromCenter = random() + 1.0;\n      pos.normalize().scale(distanceFromCenter);\n      const s = 1.25;\n      pos.scale(s);\n      ePos.push(pos);\n\n      // Get a random vector and cross\n      const q = new Vector3(random() - 0.5, random() - 0.5, random() - 0.5);\n      const axis = pos\n        .clone()\n        .cross(q)\n        .normalize();\n\n      const theta = (4 / distanceFromCenter) * dt;\n      const rot = new Matrix4().rotateAxis(theta, axis);\n      eRot.push(rot);\n    }\n\n    for (let i = 0; i < ELECTRON_COUNT; i++) {\n      let pos = new Vector3(random() - 0.5, random() - 0.5, random() - 0.5);\n      pos = pos.normalize().scale(0.5);\n      nPos.push(pos);\n    }\n  }\n\n  onRender({gl, tick, width, height, aspect}) {\n    mainFramebuffer.resize({width, height});\n    pingpongFramebuffers[0].resize({width, height});\n    pingpongFramebuffers[1].resize({width, height});\n\n    const projection = new Matrix4().perspective({fov: radians(75), aspect});\n    const view = new Matrix4().lookAt({eye: [0, 0, 4]});\n\n    clear(gl, {framebuffer: mainFramebuffer, color: [0, 0, 0, 1.0], depth: 1});\n\n    // Render electrons to framebuffer\n    for (let i = 0; i < ELECTRON_COUNT; i++) {\n      ePos[i] = eRot[i].transformVector(ePos[i]);\n      const modelMatrix = new Matrix4().translate(ePos[i]).scale([0.06125, 0.06125, 0.06125]);\n\n      sphere.draw({\n        framebuffer: mainFramebuffer,\n        uniforms: {\n          uModelView: view.clone().multiplyRight(modelMatrix),\n          uView: view,\n          uProjection: projection,\n          uColor: [0.0, 0.5, 1],\n          uLighting: 0\n        }\n      });\n    }\n\n    // Render core to framebuffer\n    for (let i = 0; i < ELECTRON_COUNT; i++) {\n      const modelMatrix = new Matrix4()\n        .rotateXYZ([tick * 0.013, 0, 0])\n        .rotateXYZ([0, tick * 0.021, 0])\n        .translate(nPos[i]);\n\n      const translation = [modelMatrix[12], modelMatrix[13], modelMatrix[14]];\n      modelMatrix\n        .identity()\n        .translate(translation)\n        .scale([0.25, 0.25, 0.25]);\n\n      sphere.draw({\n        framebuffer: mainFramebuffer,\n        uniforms: {\n          uModelView: view.clone().multiplyRight(modelMatrix),\n          uProjection: projection,\n          uColor: [1, 0.25, 0.25],\n          uLighting: 1\n        }\n      });\n    }\n\n    const ppi = tick % 2;\n    const currentFramebuffer = pingpongFramebuffers[ppi];\n    const nextFramebuffer = pingpongFramebuffers[1 - ppi];\n\n    // Accumulate in persistence buffer\n    clear(gl, {framebuffer: currentFramebuffer, color: true, depth: true});\n    persistenceQuad.draw({\n      framebuffer: currentFramebuffer,\n      uniforms: {\n        uScene: mainFramebuffer.texture,\n        uPersistence: nextFramebuffer.texture,\n        uRes: [width, height]\n      }\n    });\n\n    // Render to screen\n    clear(gl, {color: true, depth: true});\n    quad.draw({\n      uniforms: {\n        uTexture: currentFramebuffer.texture,\n        uRes: [width, height]\n      }\n    });\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/showcase/persistence/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import {uid, assert} from '@luma.gl/webgl';\n\n// Rendering primitives - specify how to extract primitives from vertices.\n// NOTE: These are numerically identical to the corresponding WebGL/OpenGL constants\nexport const DRAW_MODE = {\n  POINTS: 0x0000, // draw single points.\n  LINES: 0x0001, // draw lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // draw lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // draw a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // draw triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // draw a connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // draw a connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\nexport default class Geometry {\n  static get DRAW_MODE() {\n    return DRAW_MODE;\n  }\n\n  constructor(props = {}) {\n    const {\n      id = uid('geometry'),\n      drawMode = DRAW_MODE.TRIANGLES,\n      attributes = {},\n      indices = null,\n      vertexCount = null\n    } = props;\n\n    this.id = id;\n    this.drawMode = drawMode | 0;\n    this.attributes = {};\n    this.userData = {};\n\n    this._setAttributes(attributes, indices);\n\n    this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n\n    // stubRemovedMethods(this, [\n    //   'setNeedsRedraw', 'needsRedraw', 'setAttributes'\n    // ], 'Immutable');\n\n    // stubRemovedMethods(this, [\n    //   'hasAttribute', 'getAttribute', 'getArray'\n    // ], 'Use geometry.attributes and geometry.indices');\n\n    // deprecateMethods(this, ['getAttributes'])\n  }\n\n  get mode() {\n    return this.drawMode;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  // Return an object with all attributes plus indices added as a field.\n  getAttributes() {\n    return this.indices ? {indices: this.indices, ...this.attributes} : this.attributes;\n  }\n\n  // PRIVATE\n\n  _print(attributeName) {\n    return `Geometry ${this.id} attribute ${attributeName}`;\n  }\n\n  // Attribute\n  // value: typed array\n  // type: indices, vertices, uvs\n  // size: elements per vertex\n  // target: WebGL buffer type (string or constant)\n  _setAttributes(attributes, indices) {\n    if (indices) {\n      this.indices = ArrayBuffer.isView(indices) ? {value: indices, size: 1} : indices;\n    }\n\n    for (const attributeName in attributes) {\n      let attribute = attributes[attributeName];\n\n      // Wrap \"unwrapped\" arrays and try to autodetect their type\n      attribute = ArrayBuffer.isView(attribute) ? {value: attribute} : attribute;\n\n      assert(\n        ArrayBuffer.isView(attribute.value),\n        `${this._print(attributeName)}: must be typed array or object with value as typed array`\n      );\n\n      if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\n        attribute.size = 3;\n      }\n\n      // Move indices to separate field\n      if (attributeName === 'indices') {\n        assert(!this.indices);\n        this.indices = attribute;\n      } else {\n        this.attributes[attributeName] = attribute;\n      }\n    }\n\n    if (this.indices && this.indices.isIndexed !== undefined) {\n      this.indices = Object.assign({}, this.indices);\n      delete this.indices.isIndexed;\n    }\n\n    return this;\n  }\n\n  _calculateVertexCount(attributes, indices) {\n    if (indices) {\n      return indices.value.length;\n    }\n    let vertexCount = Infinity;\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const {value, size, constant} = attribute;\n      if (!constant && value && size >= 1) {\n        vertexCount = Math.min(vertexCount, value.length / size);\n      }\n    }\n\n    assert(Number.isFinite(vertexCount));\n    return vertexCount;\n  }\n}\n","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport assert from '../../lib/assert';\n\nvar Vector = function (_MathArray) {\n  _inherits(Vector, _MathArray);\n\n  function Vector() {\n    _classCallCheck(this, Vector);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Vector).apply(this, arguments));\n  }\n\n  _createClass(Vector, [{\n    key: \"len\",\n    value: function len() {\n      return Math.sqrt(this.lengthSquared());\n    }\n  }, {\n    key: \"magnitude\",\n    value: function magnitude() {\n      return this.len();\n    }\n  }, {\n    key: \"lengthSquared\",\n    value: function lengthSquared() {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        length += this[i] * this[i];\n      }\n\n      return length;\n    }\n  }, {\n    key: \"magnitudeSquared\",\n    value: function magnitudeSquared() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distance\",\n    value: function distance(mathArray) {\n      return Math.sqrt(this.distanceSquared(mathArray));\n    }\n  }, {\n    key: \"distanceSquared\",\n    value: function distanceSquared(mathArray) {\n      var length = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        var dist = this[i] - mathArray[i];\n        length += dist * dist;\n      }\n\n      return checkNumber(length);\n    }\n  }, {\n    key: \"dot\",\n    value: function dot(mathArray) {\n      var product = 0;\n\n      for (var i = 0; i < this.ELEMENTS; ++i) {\n        product += this[i] * mathArray[i];\n      }\n\n      return checkNumber(product);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var length = this.magnitude();\n\n      if (length !== 0) {\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= length;\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply() {\n      for (var _len = arguments.length, vectors = new Array(_len), _key = 0; _key < _len; _key++) {\n        vectors[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _vectors = vectors; _i < _vectors.length; _i++) {\n        var vector = _vectors[_i];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] *= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"divide\",\n    value: function divide() {\n      for (var _len2 = arguments.length, vectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        vectors[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _vectors2 = vectors; _i2 < _vectors2.length; _i2++) {\n        var vector = _vectors2[_i2];\n\n        for (var i = 0; i < this.ELEMENTS; ++i) {\n          this[i] /= vector[i];\n        }\n      }\n\n      return this.check();\n    }\n  }, {\n    key: \"lengthSq\",\n    value: function lengthSq() {\n      return this.lengthSquared();\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(vector) {\n      return this.distance(vector);\n    }\n  }, {\n    key: \"distanceToSquared\",\n    value: function distanceToSquared(vector) {\n      return this.distanceSquared(vector);\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(i) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      return checkNumber(this[i]);\n    }\n  }, {\n    key: \"setComponent\",\n    value: function setComponent(i, value) {\n      assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n      this[i] = value;\n      return this.check();\n    }\n  }, {\n    key: \"addVectors\",\n    value: function addVectors(a, b) {\n      return this.copy(a).add(b);\n    }\n  }, {\n    key: \"subVectors\",\n    value: function subVectors(a, b) {\n      return this.copy(a).subtract(b);\n    }\n  }, {\n    key: \"multiplyVectors\",\n    value: function multiplyVectors(a, b) {\n      return this.copy(a).multiply(b);\n    }\n  }, {\n    key: \"addScaledVector\",\n    value: function addScaledVector(a, b) {\n      return this.add(new this.constructor(a).multiplyScalar(b));\n    }\n  }, {\n    key: \"x\",\n    get: function get() {\n      return this[0];\n    },\n    set: function set(value) {\n      return this[0] = checkNumber(value);\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this[1];\n    },\n    set: function set(value) {\n      return this[1] = checkNumber(value);\n    }\n  }]);\n\n  return Vector;\n}(MathArray);\n\nexport { Vector as default };","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nvar ORIGIN = [0, 0, 0];\n\nvar Vector3 = function (_Vector) {\n  _inherits(Vector3, _Vector);\n\n  function Vector3() {\n    var _this;\n\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Vector3);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vector3).call(this, -0, -0, -0));\n\n    if (arguments.length === 1 && isArray(x)) {\n      _this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      _this[0] = x;\n      _this[1] = y;\n      _this[2] = z;\n    }\n\n    return _this;\n  }\n\n  _createClass(Vector3, [{\n    key: \"set\",\n    value: function set(x, y, z) {\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      return this.check();\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(array) {\n      this[0] = array[0];\n      this[1] = array[1];\n      this[2] = array[2];\n      return this.check();\n    }\n  }, {\n    key: \"fromObject\",\n    value: function fromObject(object) {\n      if (config.debug) {\n        checkNumber(object.x);\n        checkNumber(object.y);\n        checkNumber(object.z);\n      }\n\n      this[0] = object.x;\n      this[1] = object.y;\n      this[2] = object.z;\n      return this.check();\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject(object) {\n      object.x = this[0];\n      object.y = this[1];\n      object.z = this[2];\n      return object;\n    }\n  }, {\n    key: \"angle\",\n    value: function angle(vector) {\n      return vec3.angle(this, vector);\n    }\n  }, {\n    key: \"cross\",\n    value: function cross(vector) {\n      vec3.cross(this, this, vector);\n      return this.check();\n    }\n  }, {\n    key: \"rotateX\",\n    value: function rotateX(_ref) {\n      var radians = _ref.radians,\n          _ref$origin = _ref.origin,\n          origin = _ref$origin === void 0 ? ORIGIN : _ref$origin;\n      vec3.rotateX(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateY\",\n    value: function rotateY(_ref2) {\n      var radians = _ref2.radians,\n          _ref2$origin = _ref2.origin,\n          origin = _ref2$origin === void 0 ? ORIGIN : _ref2$origin;\n      vec3.rotateY(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"rotateZ\",\n    value: function rotateZ(_ref3) {\n      var radians = _ref3.radians,\n          _ref3$origin = _ref3.origin,\n          origin = _ref3$origin === void 0 ? ORIGIN : _ref3$origin;\n      vec3.rotateZ(this, this, origin, radians);\n      return this.check();\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(matrix4) {\n      return this.transformAsPoint(matrix4);\n    }\n  }, {\n    key: \"transformAsPoint\",\n    value: function transformAsPoint(matrix4) {\n      vec3.transformMat4(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformAsVector\",\n    value: function transformAsVector(matrix4) {\n      vec3_transformMat4AsVector(this, this, matrix4);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix3\",\n    value: function transformByMatrix3(matrix3) {\n      vec3.transformMat3(this, this, matrix3);\n      return this.check();\n    }\n  }, {\n    key: \"transformByMatrix2\",\n    value: function transformByMatrix2(matrix2) {\n      vec3_transformMat2(this, this, matrix2);\n      return this.check();\n    }\n  }, {\n    key: \"transformByQuaternion\",\n    value: function transformByQuaternion(quaternion) {\n      vec3.transformQuat(this, this, quaternion);\n      return this.check();\n    }\n  }, {\n    key: \"ELEMENTS\",\n    get: function get() {\n      return 3;\n    }\n  }, {\n    key: \"z\",\n    get: function get() {\n      return this[2];\n    },\n    set: function set(value) {\n      return this[2] = checkNumber(value);\n    }\n  }]);\n\n  return Vector3;\n}(Vector);\n\nexport { Vector3 as default };"],"sourceRoot":""}