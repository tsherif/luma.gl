{"version":3,"sources":["webpack:///./node_modules/ocular-gatsby/src/templates/doc-page-markdown.jsx"],"names":["query","replaceLinks","props","html","docBySlug","relativeLinks","pageContext","replace","link","href","hrefWithoutLeadingSlash","DocTemplate","_this","_React$Component","call","this","state","render","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","dangerouslySetInnerHTML","__html","React","Component"],"mappings":"2MAMO,IAAMA,EAAN,aAgBP,SAAAC,EAAAC,GAA6B,IACpBC,EAAQD,OADYE,UAAAD,KAEpBE,EAAiBH,EAFGI,YAAAD,cAI3B,OAAOF,EAAAI,QAAA,kBAAgC,SAAAC,EAAAC,GAErC,GAAIA,sBAA2BA,aAA/B,KAEE,OAAAD,EAEF,IAAME,EAA0BD,kBAAuBA,QAAvBA,GANqBA,EAWrD,eAAgBJ,EAAhBK,GAAA,UAIiBC,sBACnB,SAAAA,EAAAT,GAAmB,IAAAU,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAAb,IAAAa,MACAC,MAAa,CAACb,KAAMF,EAAYC,IAFfU,4GAKnBK,kBAAS,IACAd,EAAQY,KADRC,MAAAb,KAEP,OACEe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEC,UADF,gBAEEC,wBAAyB,CAACC,OAAQpB,UAZHqB,IAAMC","file":"component---node-modules-ocular-gatsby-src-templates-doc-page-markdown-jsx-161568c17611402a6426.js","sourcesContent":["import React from 'react';\n\nimport {graphql} from 'gatsby';\n\n// Query for the markdown doc by slug\n// (Note: We could just search the allMarkdown from WebsiteConfig ourselves)\nexport const query = graphql`\n  query DocBySlug($slug: String!) {\n    docBySlug: markdownRemark(fields: {slug: {eq: $slug}}) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        category\n        tags\n      }\n    }\n  }\n`;\n\nfunction replaceLinks(props) {\n  const {html} = props.data.docBySlug;\n  const {relativeLinks} = props.pageContext;\n\n  return html.replace(/href=\"([^\"]+)\"/g, (link, href) => {\n    // don't rewrite external links, don't rewrite links to anchors\n    if (href.startsWith('http') || href.startsWith('#')) {\n      // TODO - we could style them differently though\n      return link;\n    }\n    const hrefWithoutLeadingSlash = href.startsWith('/') ? href.slice(1) : href;\n    // replace links to:\n    // - known physical files, either relative to this file or relative to root\n    // - known routes, either relative to the route of this page or to the home page\n    // by a link to their corresponding route, expresed relative to the home page\n    return `href=\"${relativeLinks[hrefWithoutLeadingSlash]}\"`;\n  });\n}\n\nexport default class DocTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {html: replaceLinks(props)};\n  }\n\n  render() {\n    const {html} = this.state;\n    return (\n      <div>\n        <div\n          className=\"markdown-body\"\n          dangerouslySetInnerHTML={{__html: html}}\n        />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}