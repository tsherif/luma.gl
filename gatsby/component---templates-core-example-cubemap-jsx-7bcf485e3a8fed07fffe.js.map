{"version":3,"sources":["webpack:///../examples/core/cubemap/app.js","webpack:///./templates/core/example-cubemap.jsx","webpack:///../modules/core/src/geometry/geometry.js","webpack:///../node_modules/seer/dist/index.js","webpack:///../modules/core/src/geometries/cube-geometry.js"],"names":["RoomCube","gl","props","_Model","call","this","Object","assign","geometry","cube_geometry","fs","vs","Model","Prism","_Model2","AppAnimationLoop","getInfo","onInitialize","_ref","canvas","setParameters","clearColor","clearDepth","depthTest","depthFunc","GL","LEQUAL","cubemap","texture_cube","data","getFaceTextures","size","cube","app_RoomCube","uniforms","uTextureCube","uModel","matrix4","scale","prism","app_Prism","_animationLoop","_ref2","tick","rotateX","rotateY","onRender","animationProps","aspect","view","lookAt","eye","translate","projection","perspective","fov","radians","_readHTMLControls","document","uReflect","uRefract","reflectionElement","refractionElement","parseFloat","value","readHTMLControls","uView","uProjection","AnimationLoop","_ref3","signs","textures","pos","neg","face","OffscreenCanvas","ctx","_i","_axes","length","axis","_i2","_signs","sign","drawTexture","TextureCube","_ref4","color","window","website","app_AppAnimationLoop","animationLoop","Example","render","react_default","a","createElement","animation_loop_example_page","exampleConfig","pageContext","React","Component","DRAW_MODE","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","Geometry","_props","_props$id","id","uid","_props$drawMode","drawMode","_props$attributes","attributes","_props$indices","indices","_props$vertexCount","vertexCount","userData","_setAttributes","_calculateVertexCount","getVertexCount","getAttributes","_print","attributeName","ArrayBuffer","isView","attribute","assert","undefined","isIndexed","Infinity","constant","Math","Number","__webpack_require__","defineProperty","exports","_typeof","Symbol","iterator","obj","constructor","prototype","isBrowser","addEventListener","timers","Map","isReady","__SEER_INITIALIZED__","throttle","key","delay","time","get","now","Date","set","send","type","arguments","seen","Set","payload","JSON","stringify","has","add","toString","slice","includes","Array","replacer","postMessage","source","e","console","log","listeners","listener","message","_message$data","typeListeners","forEach","cb","init","__SEER_LISTENER__","list","listItem","itemKey","updateItem","path","multiUpdate","array","deleteItem","addLog","msg","listenFor","Error","push","removeListener","filter","l","clean","removeEventListener","CUBE_INDICES","Uint16Array","CUBE_POSITIONS","Float32Array","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","POSITION","NORMAL","TEXCOORD_0","CubeGeometry","_Geometry"],"mappings":"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","file":"component---templates-core-example-cubemap-jsx-7bcf485e3a8fed07fffe.js","sourcesContent":["import GL from '@luma.gl/constants';\nimport {AnimationLoop, TextureCube, setParameters, Model, CubeGeometry} from '@luma.gl/core';\nimport {Matrix4, radians} from 'math.gl';\n\nconst INFO_HTML = `\n<p>\nA <code>cubemapped</code> prism within a larger cubemapped cube\n<p>\nUses a luma.gl <code>TextureCube</code> and\nthe GLSL <code>reflect</code> and <code>refract</code> builtin functions\nto calculate reflection and refraction directions from the prism normals\n</p>\n<div>\n  Reflection\n  <input id=\"reflection\"\n    type=\"range\" min=\"0.0\" max=\"1.0\" value=\"1.0\" step=\"0.01\">\n  <br>\n  Refraction\n  <input id=\"refraction\"\n    type=\"range\" min=\"0.0\" max=\"1.0\" value=\"1.0\" step=\"0.01\">\n  <br>\n</div>\n`;\n\nfunction readHTMLControls() {\n  /* global document */\n  if (typeof document === 'undefined') {\n    return {uReflect: 1, uRefract: 1};\n  }\n  const reflectionElement = document.getElementById('reflection');\n  const refractionElement = document.getElementById('refraction');\n\n  const uReflect = reflectionElement ? parseFloat(reflectionElement.value) : 1;\n  const uRefract = refractionElement ? parseFloat(refractionElement.value) : 1;\n\n  return {uReflect, uRefract};\n}\n\nclass RoomCube extends Model {\n  constructor(gl, props) {\n    const vs = `\\\nattribute vec3 positions;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nvarying vec3 vPosition;\n\nvoid main(void) {\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n  vPosition = positions;\n}\n`;\n    const fs = `\\\nprecision highp float;\n\nuniform samplerCube uTextureCube;\nvarying vec3 vPosition;\n\nvoid main(void) {\n  // The outer cube just samples the texture cube directly\n  gl_FragColor = textureCube(uTextureCube, normalize(vPosition) * vec3(-1.0, 1.0, 1.0));\n}\n`;\n\n    super(gl, Object.assign({geometry: new CubeGeometry()}, props, {fs, vs}));\n  }\n}\n\nclass Prism extends Model {\n  constructor(gl, props) {\n    const vs = `\\\nattribute vec3 positions;\nattribute vec3 normals;\n\nuniform mat4 uModel;\nuniform mat4 uView;\nuniform mat4 uProjection;\n\nvarying vec3 vPosition;\nvarying vec3 vNormal;\n\nvoid main(void) {\n  gl_Position = uProjection * uView * uModel * vec4(positions, 1.0);\n  vPosition = vec3(uModel * vec4(positions,1));\n  vNormal = vec3(uModel * vec4(normals, 1));\n}\n`;\n    const fs = `\\\nprecision highp float;\n\nuniform samplerCube uTextureCube;\nuniform float uReflect;\nuniform float uRefract;\n\nvarying vec3 vPosition;\nvarying vec3 vNormal;\n\nvoid main(void) {\n  vec4 color = vec4(1, 0, 0, 1); // Prism color is red\n\n  vec3 offsetPosition = vPosition - vec3(0, 0, 2.5);\n\n  // The inner prism samples the texture cube in refract and reflect directions\n  vec3 reflectedDir = normalize(reflect(offsetPosition, vNormal));\n  vec3 refractedDir = normalize(refract(offsetPosition, vNormal, 0.75));\n  vec4 reflectedColor = mix(color, textureCube(uTextureCube, reflectedDir), uReflect);\n  vec4 refractedColor = mix(color, textureCube(uTextureCube, refractedDir), uRefract);\n\n  // Mix and multiply to keep it red\n  gl_FragColor = color * mix(reflectedColor, refractedColor, 0.5);\n}\n`;\n    super(gl, Object.assign({geometry: new CubeGeometry()}, props, {vs, fs}));\n  }\n}\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({gl, canvas}) {\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    const cubemap = new TextureCube(gl, {data: getFaceTextures({size: 512})});\n\n    return {\n      cube: new RoomCube(gl, {\n        uniforms: {\n          uTextureCube: cubemap,\n          uModel: new Matrix4().scale([5, 5, 5])\n        }\n      }),\n      prism: new Prism(gl, {\n        _animationLoop: this,\n        uniforms: {\n          uTextureCube: cubemap,\n          uModel: ({tick}) => new Matrix4().rotateX(tick * 0.01).rotateY(tick * 0.013)\n        }\n      })\n    };\n  }\n\n  onRender(animationProps) {\n    const {gl, aspect, cube, prism} = animationProps;\n\n    const view = new Matrix4().lookAt({eye: [0, 0, -1]}).translate([0, 0, 4]);\n    const projection = new Matrix4().perspective({fov: radians(75), aspect});\n\n    const {uReflect, uRefract} = readHTMLControls();\n\n    gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n\n    cube.draw({\n      uniforms: {\n        uView: view,\n        uProjection: projection\n      }\n    });\n\n    prism.draw({\n      uniforms: {\n        uView: view,\n        uProjection: projection,\n        uReflect,\n        uRefract\n      }\n    });\n  }\n}\n\n// Create six textures for the cube map sides\nfunction getFaceTextures({size}) {\n  /* global document, OffscreenCanvas */\n  const signs = ['pos', 'neg'];\n  const axes = ['x', 'y', 'z'];\n  const textures = {\n    pos: {},\n    neg: {}\n  };\n\n  let face = 0;\n  const canvas =\n    typeof document === 'undefined'\n      ? new OffscreenCanvas(size, size)\n      : document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  for (const axis of axes) {\n    for (const sign of signs) {\n      // reset canvas\n      canvas.width = size;\n      canvas.height = size;\n      drawTexture({ctx, sign, axis, size});\n      textures[TextureCube.FACES[face++]] = ctx.getImageData(0, 0, size, size);\n    }\n  }\n  return textures;\n}\n\n// Use canvas API to generate a texture for each side\nfunction drawTexture({ctx, sign, axis, size}) {\n  const color = 'rgb(0,64,128)';\n  ctx.fillStyle = color;\n  ctx.fillRect(0, 0, size, size);\n  ctx.fillStyle = 'white';\n  ctx.fillRect(8, 8, size - 16, size - 16);\n  ctx.fillStyle = color;\n  ctx.font = `${size / 4}px serif`;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  ctx.fillText(`${sign}-${axis}`, size / 2, size / 2);\n  ctx.strokeStyle = color;\n  ctx.strokeRect(0, 0, size, size);\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/core/cubemap/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import {uid, assert} from '../utils';\n\n// Rendering primitives - specify how to extract primitives from vertices.\n// NOTE: These are numerically identical to the corresponding WebGL/OpenGL constants\nexport const DRAW_MODE = {\n  POINTS: 0x0000, // draw single points.\n  LINES: 0x0001, // draw lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // draw lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // draw a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // draw triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // draw a connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // draw a connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\nexport default class Geometry {\n  static get DRAW_MODE() {\n    return DRAW_MODE;\n  }\n\n  constructor(props = {}) {\n    const {\n      id = uid('geometry'),\n      drawMode = DRAW_MODE.TRIANGLES,\n      attributes = {},\n      indices = null,\n      vertexCount = null\n    } = props;\n\n    this.id = id;\n    this.drawMode = drawMode | 0;\n    this.attributes = {};\n    this.userData = {};\n\n    this._setAttributes(attributes, indices);\n\n    this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n\n    // stubRemovedMethods(this, [\n    //   'setNeedsRedraw', 'needsRedraw', 'setAttributes'\n    // ], 'Immutable');\n\n    // stubRemovedMethods(this, [\n    //   'hasAttribute', 'getAttribute', 'getArray'\n    // ], 'Use geometry.attributes and geometry.indices');\n\n    // deprecateMethods(this, ['getAttributes'])\n  }\n\n  get mode() {\n    return this.drawMode;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  // Return an object with all attributes plus indices added as a field.\n  getAttributes() {\n    return this.indices ? {indices: this.indices, ...this.attributes} : this.attributes;\n  }\n\n  // PRIVATE\n\n  _print(attributeName) {\n    return `Geometry ${this.id} attribute ${attributeName}`;\n  }\n\n  // Attribute\n  // value: typed array\n  // type: indices, vertices, uvs\n  // size: elements per vertex\n  // target: WebGL buffer type (string or constant)\n  _setAttributes(attributes, indices) {\n    if (indices) {\n      this.indices = ArrayBuffer.isView(indices) ? {value: indices, size: 1} : indices;\n    }\n\n    for (const attributeName in attributes) {\n      let attribute = attributes[attributeName];\n\n      // Wrap \"unwrapped\" arrays and try to autodetect their type\n      attribute = ArrayBuffer.isView(attribute) ? {value: attribute} : attribute;\n\n      assert(\n        ArrayBuffer.isView(attribute.value),\n        `${this._print(attributeName)}: must be typed array or object with value as typed array`\n      );\n\n      if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\n        attribute.size = 3;\n      }\n\n      // Move indices to separate field\n      if (attributeName === 'indices') {\n        assert(!this.indices);\n        this.indices = attribute;\n      } else {\n        this.attributes[attributeName] = attribute;\n      }\n    }\n\n    if (this.indices && this.indices.isIndexed !== undefined) {\n      this.indices = Object.assign({}, this.indices);\n      delete this.indices.isIndexed;\n    }\n\n    return this;\n  }\n\n  _calculateVertexCount(attributes, indices) {\n    if (indices) {\n      return indices.value.length;\n    }\n    let vertexCount = Infinity;\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const {value, size, constant} = attribute;\n      if (!constant && value && size >= 1) {\n        vertexCount = Math.min(vertexCount, value.length / size);\n      }\n    }\n\n    assert(Number.isFinite(vertexCount));\n    return vertexCount;\n  }\n}\n","'use strict';\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n}; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nvar isBrowser = typeof window !== 'undefined' && window.addEventListener;\nvar timers = new Map();\n/**\n * Ready check for Seer initialization\n *\n * @returns {Boolean}\n */\n\nvar isReady = function isReady() {\n  return isBrowser && window.__SEER_INITIALIZED__;\n};\n/**\n * Utility method allowing to throttle a user action based on a key and a minimun delay.\n *\n * @param key {String} A unique key\n * @param delay {Number} The minimal delay to throttle\n * @returns {Boolean}\n */\n\n\nvar throttle = function throttle(key, delay) {\n  var time = timers.get(key);\n  var now = Date.now();\n\n  if (time && now - time < delay) {\n    return true;\n  }\n\n  timers.set(key, now);\n  return false;\n};\n\nvar replacer = function replacer(seen) {\n  return function (key, value) {\n    if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && seen.has(value)) {\n      return;\n    }\n\n    seen.add(value);\n    var isArray = Object.prototype.toString.call(value).slice(8, -1).includes('Array');\n\n    if (isArray) {\n      return Array.prototype.slice.call(value, 0, 20);\n    }\n\n    return value;\n  };\n};\n/**\n * Low-level api leveraging window.postMessage\n *\n * @param type {String} The action type\n * @param payload {Any} The action payload\n */\n\n\nvar send = function send(type) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isBrowser || !isReady()) {\n    return;\n  }\n\n  var seen = new Set();\n  var payload = JSON.stringify(data, replacer(seen));\n\n  try {\n    window.postMessage({\n      type: type,\n      payload: payload,\n      source: 'seer-agent'\n    }, '*');\n  } catch (e) {\n    if (throttle('seer-log', 2E3)) {\n      return;\n    }\n\n    console.log(e); // eslint-disable-line\n  }\n};\n\nvar listeners = new Map();\n\nvar listener = function listener(message) {\n  if (!message || !message.data || message.data.source !== 'seer-core') {\n    return;\n  }\n\n  var _message$data = message.data,\n      type = _message$data.type,\n      payload = _message$data.payload;\n  var typeListeners = listeners.get(type);\n\n  if (typeListeners) {\n    typeListeners.forEach(function (cb) {\n      return cb(payload);\n    });\n  }\n};\n/**\n * Initilize window listener. There will be only one for the whole process\n * to prevent too many registrations.\n *\n * This method will be called automatically if you use the `listenFor` method.\n */\n\n\nvar init = function init() {\n  if (!isBrowser || window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.addEventListener('message', listener);\n  window.__SEER_LISTENER__ = true;\n};\n/**\n * Clean listener. Can be useful in case you want to unregister upcoming events\n * or liberate memory.\n */\n\n\nvar clean = function clean() {\n  if (!isBrowser || !window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.removeEventListener('message', listener);\n  delete window.__SEER_LISTENER__;\n};\n/**\n * Create a listener that will be called upon events of the given key.\n *\n * @param key {String} The unique tab key\n * @param cb {Function} A callback that will receive the message payload\n */\n\n\nvar listenFor = function listenFor(type, cb) {\n  if (!isBrowser) {\n    return;\n  }\n\n  if (!type || !cb) {\n    throw new Error('Please provide a type and callback');\n  }\n\n  if (!listeners.has(type)) {\n    listeners.set(type, []);\n  }\n\n  if (!window.__SEER_LISTENER__) {\n    init();\n  }\n\n  listeners.get(type).push(cb);\n};\n/**\n * Remove an identity listener\n *\n * @param cb {Function} The callback to remove\n */\n\n\nvar removeListener = function removeListener(cb) {\n  listeners.forEach(function (typeListeners, key) {\n    listeners.set(key, typeListeners.filter(function (l) {\n      return l !== cb;\n    }));\n  });\n};\n/**\n * Creates a new indexed list.\n * It works by index to get O(1) accessing and performance.\n *\n * @param key {String} The key of the tab\n * @param data {Object} The indexed object\n */\n\n\nvar list = function list(key, data) {\n  return send('LIST', {\n    key: key,\n    data: data\n  });\n};\n/**\n * Creates an element in the indexed list, based on the itemKey.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param data {Any} The value of the item\n */\n\n\nvar listItem = function listItem(key, itemKey) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return send('LIST_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    data: data\n  });\n};\n/**\n * Update an item property, can be deeply nested.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param path {String} The path of the variable you want to update\n * @param data {Object} The new value\n */\n\n\nvar updateItem = function updateItem(key, itemKey, path, data) {\n  return send('UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    path: path,\n    data: data\n  });\n};\n/**\n * Similar to updateItem, but allows to pass an array with {path,data} pairs for\n * multiple update of the same item without having to send multiple messages.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param array {Array} The array of updates\n * @param array.path {String} The path for this update\n * @param array.data {Object} The value of this update\n */\n\n\nvar multiUpdate = function multiUpdate(key, itemKey, array) {\n  return send('MULTI_UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    array: array\n  });\n};\n/**\n * Remove a specific item in a specific tab.\n *\n * @param key {String} They key of the tab\n * @param itemKey {String} The key of the item\n */\n\n\nvar deleteItem = function deleteItem(key, itemKey) {\n  return send('DELETE_ITEM', {\n    key: key,\n    itemKey: itemKey\n  });\n};\n/**\n * Will create a log message to an item, that will be displayde with the current time.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param msg {String} The message to display\n */\n\n\nvar addLog = function addLog(key, itemKey, msg) {\n  return send('ADD_LOG', {\n    key: key,\n    itemKey: itemKey,\n    msg: msg\n  });\n};\n\nexports[\"default\"] = {\n  send: send,\n  throttle: throttle,\n  isReady: isReady,\n  list: list,\n  listItem: listItem,\n  updateItem: updateItem,\n  multiUpdate: multiUpdate,\n  deleteItem: deleteItem,\n  addLog: addLog,\n  listeners: listeners,\n  listenFor: listenFor,\n  removeListener: removeListener,\n  init: init,\n  clean: clean\n};","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n"],"sourceRoot":""}