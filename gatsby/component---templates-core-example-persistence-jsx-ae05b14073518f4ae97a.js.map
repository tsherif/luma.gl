{"version":3,"sources":["webpack:///../modules/core/src/geometries/ico-sphere-geometry.js","webpack:///../examples/core/persistence/app.js","webpack:///./templates/core/example-persistence.jsx","webpack:///../modules/core/src/geometry/geometry.js","webpack:///../node_modules/seer/dist/index.js","webpack:///../modules/core/src/scenegraph/nodes/scenegraph-node.js","webpack:///../modules/core/src/scenegraph/nodes/model-node.js"],"names":["ICO_POSITIONS","ICO_INDICES","IcoSphereGeometry","props","_props$id","id","uid","_tesselateIcosaHedron","_props$iterations","iterations","PI","Math","PI2","positions","concat","indices","getMiddlePoint","pointMemo","i1","i2","mini","maxi","key","x1","y1","z1","x2","y2","z2","xm","ym","zm","len","i","indices2","j","length","a","b","c","normals","Array","texCoords","i3","in1","in2","in3","iu1","iu2","iu3","theta1","phi1","v1","u1","theta2","phi2","v2","u2","x3","y3","z3","theta3","phi3","v3","u3","vec1","vec2","normal","vector3","cross","normalize","newIndex","size","value","Uint16Array","attributes","POSITION","Float32Array","NORMAL","TEXCOORD_0","tesselateIcosaHedron","_Geometry","call","this","Object","assign","Geometry","mainFramebuffer","pingpongFramebuffers","quad","persistenceQuad","sphere","SCREEN_QUAD_VS","ePos","eRot","nPos","AppAnimationLoop","getInfo","onInitialize","gl","_ref","width","height","setParameters","clearColor","clearDepth","depthTest","depthFunc","LEQUAL","faceCulling","cullFace","BACK","framebuffer","quadGeometry","geometry","aPosition","vertexCount","model","program","vs","fs","model_node","ico_sphere_geometry_IcoSphereGeometry","pos","distanceFromCenter","q","axis","theta","rot","matrix4","rotateAxis","onRender","_ref2","tick","aspect","projection","perspective","fov","radians","view","lookAt","eye","clear","color","depth","modelMatrix","translate","uniforms","uModelView","matrix","uView","uProjection","uColor","uLighting","rotateXYZ","_i2","ppi","currentFramebuffer","nextFramebuffer","uScene","texture","uPersistence","uRes","uTexture","AnimationLoop","window","website","app_AppAnimationLoop","animationLoop","Example","render","react_default","createElement","animation_loop_example_page","exampleConfig","pageContext","React","Component","DRAW_MODE","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","_props","_props$drawMode","drawMode","_props$attributes","_props$indices","_props$vertexCount","userData","_setAttributes","_calculateVertexCount","getVertexCount","getAttributes","_print","attributeName","ArrayBuffer","isView","attribute","assert","undefined","isIndexed","Infinity","constant","Number","__webpack_require__","defineProperty","exports","_typeof","Symbol","iterator","obj","constructor","prototype","isBrowser","addEventListener","timers","Map","isReady","__SEER_INITIALIZED__","throttle","delay","time","get","now","Date","set","send","type","data","arguments","seen","Set","payload","JSON","stringify","has","add","toString","slice","includes","replacer","postMessage","source","e","console","log","listeners","listener","message","_message$data","typeListeners","forEach","cb","init","__SEER_LISTENER__","list","listItem","itemKey","updateItem","path","multiUpdate","array","deleteItem","addLog","msg","listenFor","Error","push","removeListener","filter","l","clean","removeEventListener","ScenegraphNode","name","display","position","rotation","scale","_setScenegraphNodeProps","delete","setProps","setPosition","setRotation","setScale","setMatrix","copyMatrix","copy","setMatrixComponents","_ref$update","update","updateMatrix","identity","_temp","getCoordinateUniforms","worldMatrix","viewMatrix","multiplyRight","worldInverse","invert","worldInverseTranspose","transpose","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","ModelNode","_this","_ScenegraphNode","onBeforeRender","AfterRender","_setModelNodeProps","managedResources","resource","draw","_this$model","apply","setUniforms","_this$model2","setAttributes","_this$model3","updateModuleSettings","_this$model4"],"mappings":"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","file":"component---templates-core-example-persistence-jsx-ae05b14073518f4ae97a.js","sourcesContent":["import {Vector3} from 'math.gl';\nimport Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n/* eslint-disable comma-spacing, max-statements, complexity */\n\nconst ICO_POSITIONS = [-1, 0, 0, 0, 1, 0, 0, 0, -1, 0, 0, 1, 0, -1, 0, 1, 0, 0];\nconst ICO_INDICES = [3, 4, 5, 3, 5, 1, 3, 1, 0, 3, 0, 4, 4, 0, 2, 4, 2, 5, 2, 0, 1, 5, 2, 1];\n\nexport default class IcoSphereGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('ico-sphere-geometry')} = props;\n    const {indices, attributes} = tesselateIcosaHedron(props);\n    super({\n      ...props,\n      id,\n      indices,\n      attributes: {...attributes, ...props.attributes}\n    });\n  }\n}\n\nfunction tesselateIcosaHedron(props) {\n  const {iterations = 0} = props;\n\n  const PI = Math.PI;\n  const PI2 = PI * 2;\n\n  const positions = [...ICO_POSITIONS];\n  let indices = [...ICO_INDICES];\n\n  positions.push();\n  indices.push();\n\n  const getMiddlePoint = (() => {\n    const pointMemo = {};\n\n    return (i1, i2) => {\n      i1 *= 3;\n      i2 *= 3;\n      const mini = i1 < i2 ? i1 : i2;\n      const maxi = i1 > i2 ? i1 : i2;\n      const key = `${mini}|${maxi}`;\n\n      if (key in pointMemo) {\n        return pointMemo[key];\n      }\n\n      const x1 = positions[i1];\n      const y1 = positions[i1 + 1];\n      const z1 = positions[i1 + 2];\n      const x2 = positions[i2];\n      const y2 = positions[i2 + 1];\n      const z2 = positions[i2 + 2];\n      let xm = (x1 + x2) / 2;\n      let ym = (y1 + y2) / 2;\n      let zm = (z1 + z2) / 2;\n      const len = Math.sqrt(xm * xm + ym * ym + zm * zm);\n\n      xm /= len;\n      ym /= len;\n      zm /= len;\n\n      positions.push(xm, ym, zm);\n\n      return (pointMemo[key] = positions.length / 3 - 1);\n    };\n  })();\n\n  for (let i = 0; i < iterations; i++) {\n    const indices2 = [];\n    for (let j = 0; j < indices.length; j += 3) {\n      const a = getMiddlePoint(indices[j + 0], indices[j + 1]);\n      const b = getMiddlePoint(indices[j + 1], indices[j + 2]);\n      const c = getMiddlePoint(indices[j + 2], indices[j + 0]);\n\n      indices2.push(c, indices[j + 0], a, a, indices[j + 1], b, b, indices[j + 2], c, a, b, c);\n    }\n    indices = indices2;\n  }\n\n  // Calculate texCoords and normals\n  const normals = new Array(positions.length);\n  const texCoords = new Array((positions.length / 3) * 2);\n\n  const l = indices.length;\n  for (let i = l - 3; i >= 0; i -= 3) {\n    const i1 = indices[i + 0];\n    const i2 = indices[i + 1];\n    const i3 = indices[i + 2];\n    const in1 = i1 * 3;\n    const in2 = i2 * 3;\n    const in3 = i3 * 3;\n    const iu1 = i1 * 2;\n    const iu2 = i2 * 2;\n    const iu3 = i3 * 2;\n    const x1 = positions[in1 + 0];\n    const y1 = positions[in1 + 1];\n    const z1 = positions[in1 + 2];\n    const theta1 = Math.acos(z1 / Math.sqrt(x1 * x1 + y1 * y1 + z1 * z1));\n    const phi1 = Math.atan2(y1, x1) + PI;\n    const v1 = theta1 / PI;\n    const u1 = 1 - phi1 / PI2;\n    const x2 = positions[in2 + 0];\n    const y2 = positions[in2 + 1];\n    const z2 = positions[in2 + 2];\n    const theta2 = Math.acos(z2 / Math.sqrt(x2 * x2 + y2 * y2 + z2 * z2));\n    const phi2 = Math.atan2(y2, x2) + PI;\n    const v2 = theta2 / PI;\n    const u2 = 1 - phi2 / PI2;\n    const x3 = positions[in3 + 0];\n    const y3 = positions[in3 + 1];\n    const z3 = positions[in3 + 2];\n    const theta3 = Math.acos(z3 / Math.sqrt(x3 * x3 + y3 * y3 + z3 * z3));\n    const phi3 = Math.atan2(y3, x3) + PI;\n    const v3 = theta3 / PI;\n    const u3 = 1 - phi3 / PI2;\n    const vec1 = [x3 - x2, y3 - y2, z3 - z2];\n    const vec2 = [x1 - x2, y1 - y2, z1 - z2];\n    const normal = new Vector3(vec1).cross(vec2).normalize();\n    let newIndex;\n\n    if (\n      (u1 === 0 || u2 === 0 || u3 === 0) &&\n      (u1 === 0 || u1 > 0.5) &&\n      (u2 === 0 || u2 > 0.5) &&\n      (u3 === 0 || u3 > 0.5)\n    ) {\n      positions.push(positions[in1 + 0], positions[in1 + 1], positions[in1 + 2]);\n      newIndex = positions.length / 3 - 1;\n      indices.push(newIndex);\n      texCoords[newIndex * 2 + 0] = 1;\n      texCoords[newIndex * 2 + 1] = v1;\n      normals[newIndex * 3 + 0] = normal.x;\n      normals[newIndex * 3 + 1] = normal.y;\n      normals[newIndex * 3 + 2] = normal.z;\n\n      positions.push(positions[in2 + 0], positions[in2 + 1], positions[in2 + 2]);\n      newIndex = positions.length / 3 - 1;\n      indices.push(newIndex);\n      texCoords[newIndex * 2 + 0] = 1;\n      texCoords[newIndex * 2 + 1] = v2;\n      normals[newIndex * 3 + 0] = normal.x;\n      normals[newIndex * 3 + 1] = normal.y;\n      normals[newIndex * 3 + 2] = normal.z;\n\n      positions.push(positions[in3 + 0], positions[in3 + 1], positions[in3 + 2]);\n      newIndex = positions.length / 3 - 1;\n      indices.push(newIndex);\n      texCoords[newIndex * 2 + 0] = 1;\n      texCoords[newIndex * 2 + 1] = v3;\n      normals[newIndex * 3 + 0] = normal.x;\n      normals[newIndex * 3 + 1] = normal.y;\n      normals[newIndex * 3 + 2] = normal.z;\n    }\n\n    normals[in1 + 0] = normals[in2 + 0] = normals[in3 + 0] = normal.x;\n    normals[in1 + 1] = normals[in2 + 1] = normals[in3 + 1] = normal.y;\n    normals[in1 + 2] = normals[in2 + 2] = normals[in3 + 2] = normal.z;\n\n    texCoords[iu1 + 0] = u1;\n    texCoords[iu1 + 1] = v1;\n\n    texCoords[iu2 + 0] = u2;\n    texCoords[iu2 + 1] = v2;\n\n    texCoords[iu3 + 0] = u3;\n    texCoords[iu3 + 1] = v3;\n  }\n\n  return {\n    indices: {size: 1, value: new Uint16Array(indices)},\n    attributes: {\n      POSITION: {size: 3, value: new Float32Array(positions)},\n      NORMAL: {size: 3, value: new Float32Array(normals)},\n      TEXCOORD_0: {size: 2, value: new Float32Array(texCoords)}\n    }\n  };\n}\n","import {\n  AnimationLoop,\n  setParameters,\n  Model,\n  clear,\n  Framebuffer,\n  Program,\n  Geometry,\n  IcoSphereGeometry,\n  ModelNode\n} from '@luma.gl/core';\nimport {Matrix4, Vector3, radians} from 'math.gl';\n\nconst INFO_HTML = `\n<p>\n  Electron trails renderings persist across multiple frames.\n<p>\n  Uses multiple luma.gl <code>Framebuffer</code>s to hold previously rendered data between frames.\n</p>\n`;\n\nconst SCREEN_QUAD_VS = `\\\nattribute vec2 aPosition;\n\nvoid main(void) {\n  gl_Position = vec4(aPosition, 0, 1);\n}\n`;\n\nconst SCREEN_QUAD_FS = `\\\nprecision highp float;\n\nuniform sampler2D uTexture;\nuniform vec2 uRes;\n\nvoid main(void) {\n  vec2 p = gl_FragCoord.xy/uRes.xy;\n  gl_FragColor = texture2D(uTexture, p);\n}\n`;\n\nconst PERSISTENCE_FS = `\\\nprecision highp float;\n\nuniform sampler2D uScene;\nuniform sampler2D uPersistence;\nuniform vec2 uRes;\n\nvoid main(void) {\n  vec2 p = gl_FragCoord.xy / uRes.xy;\n  vec4 cS = texture2D(uScene, p);\n  vec4 cP = texture2D(uPersistence, p);\n  gl_FragColor = mix(cS*4.0, cP, 0.9);\n}\n`;\n\nconst SPHERE_VS = `\\\nattribute vec3 positions;\nattribute vec3 normals;\n\nuniform mat4 uModelView;\nuniform mat4 uProjection;\n\nvarying vec3 normal;\n\nvoid main(void) {\n  gl_Position = uProjection * uModelView * vec4(positions, 1.0);\n  normal = vec3((uModelView * vec4(normals, 0.0)));\n}\n`;\n\nconst SPHERE_FS = `\\\nprecision highp float;\n\nuniform vec3 uColor;\nuniform bool uLighting;\n\nvarying vec3 normal;\n\nvoid main(void) {\n  float d = 1.0;\n  if (uLighting) {\n    vec3 l = normalize(vec3(1,1,2));\n    d = dot(normal, l);\n  }\n  gl_FragColor = vec4(uColor * d, 1);\n}\n`;\n\nconst ELECTRON_COUNT = 64;\nconst ePos = [];\nconst eRot = [];\nconst nPos = [];\n\nlet mainFramebuffer;\nlet pingpongFramebuffers;\nlet quad;\nlet persistenceQuad;\nlet sphere;\n\n/* eslint-disable max-statements */\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({gl, width, height}) {\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      depthTest: true,\n      depthFunc: gl.LEQUAL,\n      faceCulling: true,\n      cullFace: gl.BACK\n    });\n\n    mainFramebuffer = new Framebuffer(gl, {width, height});\n\n    pingpongFramebuffers = [\n      new Framebuffer(gl, {width, height}),\n      new Framebuffer(gl, {width, height})\n    ];\n\n    const QUAD_POSITIONS = [-1, -1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1];\n\n    const quadGeometry = new Geometry({\n      attributes: {\n        aPosition: {\n          value: new Float32Array(QUAD_POSITIONS),\n          size: 2\n        }\n      },\n      vertexCount: 6\n    });\n\n    quad = new Model(gl, {\n      id: 'quad',\n      program: new Program(gl, {vs: SCREEN_QUAD_VS, fs: SCREEN_QUAD_FS}),\n      geometry: quadGeometry\n    });\n\n    persistenceQuad = new Model(gl, {\n      id: 'persistence-quad',\n      program: new Program(gl, {vs: SCREEN_QUAD_VS, fs: PERSISTENCE_FS}),\n      geometry: quadGeometry\n    });\n\n    sphere = new ModelNode(gl, {\n      id: 'electron',\n      geometry: new IcoSphereGeometry({\n        iterations: 4\n      }),\n      program: new Program(gl, {vs: SPHERE_VS, fs: SPHERE_FS})\n    });\n\n    const dt = 0.0125;\n\n    for (let i = 0; i < ELECTRON_COUNT; i++) {\n      // Place electron cloud at random positions\n      const pos = new Vector3(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5);\n\n      // Push them out a bit\n      const distanceFromCenter = Math.random() + 1.0;\n      pos.normalize().scale(distanceFromCenter);\n      const s = 1.25;\n      pos.scale(s);\n      ePos.push(pos);\n\n      // Get a random vector and cross\n      const q = new Vector3(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5);\n      const axis = pos\n        .clone()\n        .cross(q)\n        .normalize();\n\n      const theta = (4 / distanceFromCenter) * dt;\n      const rot = new Matrix4().rotateAxis(theta, axis);\n      eRot.push(rot);\n    }\n\n    for (let i = 0; i < ELECTRON_COUNT; i++) {\n      let pos = new Vector3(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5);\n      pos = pos.normalize().scale(0.5);\n      nPos.push(pos);\n    }\n  }\n\n  onRender({gl, tick, width, height, aspect}) {\n    mainFramebuffer.resize({width, height});\n    pingpongFramebuffers[0].resize({width, height});\n    pingpongFramebuffers[1].resize({width, height});\n\n    const projection = new Matrix4().perspective({fov: radians(75), aspect});\n    const view = new Matrix4().lookAt({eye: [0, 0, 4]});\n\n    clear(gl, {framebuffer: mainFramebuffer, color: [0, 0, 0, 1.0], depth: 1});\n\n    // Render electrons to framebuffer\n    for (let i = 0; i < ELECTRON_COUNT; i++) {\n      ePos[i] = eRot[i].transformVector(ePos[i]);\n      const modelMatrix = new Matrix4().translate(ePos[i]);\n\n      sphere\n        .setPosition([modelMatrix[12], modelMatrix[13], modelMatrix[14]])\n        .setScale([0.06125, 0.06125, 0.06125])\n        .updateMatrix()\n        .draw({\n          framebuffer: mainFramebuffer,\n          uniforms: {\n            uModelView: view.clone().multiplyRight(sphere.matrix),\n            uView: view,\n            uProjection: projection,\n            uColor: [0.0, 0.5, 1],\n            uLighting: 0\n          }\n        });\n    }\n\n    // Render core to framebuffer\n    for (let i = 0; i < ELECTRON_COUNT; i++) {\n      const modelMatrix = new Matrix4()\n        .rotateXYZ([tick * 0.013, 0, 0])\n        .rotateXYZ([0, tick * 0.021, 0])\n        .translate(nPos[i]);\n\n      sphere\n        .setPosition([modelMatrix[12], modelMatrix[13], modelMatrix[14]])\n        .setScale([0.25, 0.25, 0.25])\n        .updateMatrix()\n        .draw({\n          framebuffer: mainFramebuffer,\n          uniforms: {\n            uModelView: view.clone().multiplyRight(sphere.matrix),\n            uProjection: projection,\n            uColor: [1, 0.25, 0.25],\n            uLighting: 1\n          }\n        });\n    }\n\n    const ppi = tick % 2;\n    const currentFramebuffer = pingpongFramebuffers[ppi];\n    const nextFramebuffer = pingpongFramebuffers[1 - ppi];\n\n    // Accumulate in persistence buffer\n    clear(gl, {framebuffer: currentFramebuffer, color: true, depth: true});\n    persistenceQuad.draw({\n      framebuffer: currentFramebuffer,\n      uniforms: {\n        uScene: mainFramebuffer.texture,\n        uPersistence: nextFramebuffer.texture,\n        uRes: [width, height]\n      }\n    });\n\n    // Render to screen\n    clear(gl, {color: true, depth: true});\n    quad.draw({\n      uniforms: {\n        uTexture: currentFramebuffer.texture,\n        uRes: [width, height]\n      }\n    });\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/core/persistence/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import {uid, assert} from '../utils';\n\n// Rendering primitives - specify how to extract primitives from vertices.\n// NOTE: These are numerically identical to the corresponding WebGL/OpenGL constants\nexport const DRAW_MODE = {\n  POINTS: 0x0000, // draw single points.\n  LINES: 0x0001, // draw lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // draw lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // draw a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // draw triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // draw a connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // draw a connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\nexport default class Geometry {\n  static get DRAW_MODE() {\n    return DRAW_MODE;\n  }\n\n  constructor(props = {}) {\n    const {\n      id = uid('geometry'),\n      drawMode = DRAW_MODE.TRIANGLES,\n      attributes = {},\n      indices = null,\n      vertexCount = null\n    } = props;\n\n    this.id = id;\n    this.drawMode = drawMode | 0;\n    this.attributes = {};\n    this.userData = {};\n\n    this._setAttributes(attributes, indices);\n\n    this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n\n    // stubRemovedMethods(this, [\n    //   'setNeedsRedraw', 'needsRedraw', 'setAttributes'\n    // ], 'Immutable');\n\n    // stubRemovedMethods(this, [\n    //   'hasAttribute', 'getAttribute', 'getArray'\n    // ], 'Use geometry.attributes and geometry.indices');\n\n    // deprecateMethods(this, ['getAttributes'])\n  }\n\n  get mode() {\n    return this.drawMode;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  // Return an object with all attributes plus indices added as a field.\n  getAttributes() {\n    return this.indices ? {indices: this.indices, ...this.attributes} : this.attributes;\n  }\n\n  // PRIVATE\n\n  _print(attributeName) {\n    return `Geometry ${this.id} attribute ${attributeName}`;\n  }\n\n  // Attribute\n  // value: typed array\n  // type: indices, vertices, uvs\n  // size: elements per vertex\n  // target: WebGL buffer type (string or constant)\n  _setAttributes(attributes, indices) {\n    if (indices) {\n      this.indices = ArrayBuffer.isView(indices) ? {value: indices, size: 1} : indices;\n    }\n\n    for (const attributeName in attributes) {\n      let attribute = attributes[attributeName];\n\n      // Wrap \"unwrapped\" arrays and try to autodetect their type\n      attribute = ArrayBuffer.isView(attribute) ? {value: attribute} : attribute;\n\n      assert(\n        ArrayBuffer.isView(attribute.value),\n        `${this._print(attributeName)}: must be typed array or object with value as typed array`\n      );\n\n      if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\n        attribute.size = 3;\n      }\n\n      // Move indices to separate field\n      if (attributeName === 'indices') {\n        assert(!this.indices);\n        this.indices = attribute;\n      } else {\n        this.attributes[attributeName] = attribute;\n      }\n    }\n\n    if (this.indices && this.indices.isIndexed !== undefined) {\n      this.indices = Object.assign({}, this.indices);\n      delete this.indices.isIndexed;\n    }\n\n    return this;\n  }\n\n  _calculateVertexCount(attributes, indices) {\n    if (indices) {\n      return indices.value.length;\n    }\n    let vertexCount = Infinity;\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const {value, size, constant} = attribute;\n      if (!constant && value && size >= 1) {\n        vertexCount = Math.min(vertexCount, value.length / size);\n      }\n    }\n\n    assert(Number.isFinite(vertexCount));\n    return vertexCount;\n  }\n}\n","'use strict';\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n}; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nvar isBrowser = typeof window !== 'undefined' && window.addEventListener;\nvar timers = new Map();\n/**\n * Ready check for Seer initialization\n *\n * @returns {Boolean}\n */\n\nvar isReady = function isReady() {\n  return isBrowser && window.__SEER_INITIALIZED__;\n};\n/**\n * Utility method allowing to throttle a user action based on a key and a minimun delay.\n *\n * @param key {String} A unique key\n * @param delay {Number} The minimal delay to throttle\n * @returns {Boolean}\n */\n\n\nvar throttle = function throttle(key, delay) {\n  var time = timers.get(key);\n  var now = Date.now();\n\n  if (time && now - time < delay) {\n    return true;\n  }\n\n  timers.set(key, now);\n  return false;\n};\n\nvar replacer = function replacer(seen) {\n  return function (key, value) {\n    if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && seen.has(value)) {\n      return;\n    }\n\n    seen.add(value);\n    var isArray = Object.prototype.toString.call(value).slice(8, -1).includes('Array');\n\n    if (isArray) {\n      return Array.prototype.slice.call(value, 0, 20);\n    }\n\n    return value;\n  };\n};\n/**\n * Low-level api leveraging window.postMessage\n *\n * @param type {String} The action type\n * @param payload {Any} The action payload\n */\n\n\nvar send = function send(type) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isBrowser || !isReady()) {\n    return;\n  }\n\n  var seen = new Set();\n  var payload = JSON.stringify(data, replacer(seen));\n\n  try {\n    window.postMessage({\n      type: type,\n      payload: payload,\n      source: 'seer-agent'\n    }, '*');\n  } catch (e) {\n    if (throttle('seer-log', 2E3)) {\n      return;\n    }\n\n    console.log(e); // eslint-disable-line\n  }\n};\n\nvar listeners = new Map();\n\nvar listener = function listener(message) {\n  if (!message || !message.data || message.data.source !== 'seer-core') {\n    return;\n  }\n\n  var _message$data = message.data,\n      type = _message$data.type,\n      payload = _message$data.payload;\n  var typeListeners = listeners.get(type);\n\n  if (typeListeners) {\n    typeListeners.forEach(function (cb) {\n      return cb(payload);\n    });\n  }\n};\n/**\n * Initilize window listener. There will be only one for the whole process\n * to prevent too many registrations.\n *\n * This method will be called automatically if you use the `listenFor` method.\n */\n\n\nvar init = function init() {\n  if (!isBrowser || window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.addEventListener('message', listener);\n  window.__SEER_LISTENER__ = true;\n};\n/**\n * Clean listener. Can be useful in case you want to unregister upcoming events\n * or liberate memory.\n */\n\n\nvar clean = function clean() {\n  if (!isBrowser || !window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.removeEventListener('message', listener);\n  delete window.__SEER_LISTENER__;\n};\n/**\n * Create a listener that will be called upon events of the given key.\n *\n * @param key {String} The unique tab key\n * @param cb {Function} A callback that will receive the message payload\n */\n\n\nvar listenFor = function listenFor(type, cb) {\n  if (!isBrowser) {\n    return;\n  }\n\n  if (!type || !cb) {\n    throw new Error('Please provide a type and callback');\n  }\n\n  if (!listeners.has(type)) {\n    listeners.set(type, []);\n  }\n\n  if (!window.__SEER_LISTENER__) {\n    init();\n  }\n\n  listeners.get(type).push(cb);\n};\n/**\n * Remove an identity listener\n *\n * @param cb {Function} The callback to remove\n */\n\n\nvar removeListener = function removeListener(cb) {\n  listeners.forEach(function (typeListeners, key) {\n    listeners.set(key, typeListeners.filter(function (l) {\n      return l !== cb;\n    }));\n  });\n};\n/**\n * Creates a new indexed list.\n * It works by index to get O(1) accessing and performance.\n *\n * @param key {String} The key of the tab\n * @param data {Object} The indexed object\n */\n\n\nvar list = function list(key, data) {\n  return send('LIST', {\n    key: key,\n    data: data\n  });\n};\n/**\n * Creates an element in the indexed list, based on the itemKey.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param data {Any} The value of the item\n */\n\n\nvar listItem = function listItem(key, itemKey) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return send('LIST_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    data: data\n  });\n};\n/**\n * Update an item property, can be deeply nested.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param path {String} The path of the variable you want to update\n * @param data {Object} The new value\n */\n\n\nvar updateItem = function updateItem(key, itemKey, path, data) {\n  return send('UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    path: path,\n    data: data\n  });\n};\n/**\n * Similar to updateItem, but allows to pass an array with {path,data} pairs for\n * multiple update of the same item without having to send multiple messages.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param array {Array} The array of updates\n * @param array.path {String} The path for this update\n * @param array.data {Object} The value of this update\n */\n\n\nvar multiUpdate = function multiUpdate(key, itemKey, array) {\n  return send('MULTI_UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    array: array\n  });\n};\n/**\n * Remove a specific item in a specific tab.\n *\n * @param key {String} They key of the tab\n * @param itemKey {String} The key of the item\n */\n\n\nvar deleteItem = function deleteItem(key, itemKey) {\n  return send('DELETE_ITEM', {\n    key: key,\n    itemKey: itemKey\n  });\n};\n/**\n * Will create a log message to an item, that will be displayde with the current time.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param msg {String} The message to display\n */\n\n\nvar addLog = function addLog(key, itemKey, msg) {\n  return send('ADD_LOG', {\n    key: key,\n    itemKey: itemKey,\n    msg: msg\n  });\n};\n\nexports[\"default\"] = {\n  send: send,\n  throttle: throttle,\n  isReady: isReady,\n  list: list,\n  listItem: listItem,\n  updateItem: updateItem,\n  multiUpdate: multiUpdate,\n  deleteItem: deleteItem,\n  addLog: addLog,\n  listeners: listeners,\n  listenFor: listenFor,\n  removeListener: removeListener,\n  init: init,\n  clean: clean\n};","import {Vector3, Matrix4} from 'math.gl';\nimport {assert, uid} from '../../utils';\n\nexport default class ScenegraphNode {\n  constructor(props = {}) {\n    const {id} = props;\n\n    this.id = id || uid(this.constructor.name);\n\n    this.display = true; // whether to display the object at all\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n    this.userData = {};\n\n    this.props = {};\n    this._setScenegraphNodeProps(props);\n  }\n\n  delete() {}\n\n  setProps(props) {\n    this._setScenegraphNodeProps(props);\n    return this;\n  }\n\n  toString() {\n    return `{type: ScenegraphNode, id: ${this.id})}`;\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrix(matrix, copyMatrix = true) {\n    if (copyMatrix) {\n      this.matrix.copy(matrix);\n    } else {\n      this.matrix = matrix;\n    }\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update({position, rotation, scale} = {}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  /*\n  transform() {\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n  */\n\n  _setScenegraphNodeProps(props) {\n    if ('display' in props) {\n      this.display = props.display;\n    }\n\n    if ('position' in props) {\n      this.setPosition(props.position);\n    }\n    if ('rotation' in props) {\n      this.setRotation(props.rotation);\n    }\n    if ('scale' in props) {\n      this.setScale(props.scale);\n    }\n\n    // Matrix overwrites other props\n    if ('matrix' in props) {\n      this.setMatrix(props.matrix);\n    }\n\n    Object.assign(this.props, props);\n  }\n}\n","import Model from '../../lib/model';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n"],"sourceRoot":""}