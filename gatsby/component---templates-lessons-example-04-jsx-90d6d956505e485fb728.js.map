{"version":3,"sources":["webpack:///../examples/lessons/04/app.js","webpack:///./templates/lessons/example-04.jsx","webpack:///../modules/core/src/geometry/geometry.js","webpack:///../node_modules/seer/dist/index.js","webpack:///../modules/core/src/geometries/cube-geometry.js"],"names":["VERTEX_SHADER","FRAGMENT_SHADER","ColoredPyramidGeometry","props","_Geometry","call","this","Object","assign","attributes","positions","Float32Array","colors","size","value","Geometry","ColoredCubeGeometry","_CubeGeometry","CubeGeometry","AppAnimationLoop","getInfo","onInitialize","gl","_ref","setParameters","clearColor","clearDepth","depthTest","depthFunc","GL","LEQUAL","pyramid","model","vs","fs","geometry","cube","onRender","_ref2","tick","aspect","projection","matrix4","perspective","view","lookAt","eye","uPMatrix","uMVMatrix","phi","AnimationLoop","window","website","app_AppAnimationLoop","animationLoop","Example","render","react_default","a","createElement","animation_loop_example_page","exampleConfig","pageContext","React","Component","DRAW_MODE","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","_props","_props$id","id","uid","_props$drawMode","drawMode","_props$attributes","_props$indices","indices","_props$vertexCount","vertexCount","userData","_setAttributes","_calculateVertexCount","getVertexCount","getAttributes","_print","attributeName","ArrayBuffer","isView","attribute","assert","undefined","isIndexed","length","Infinity","constant","Math","Number","__webpack_require__","defineProperty","exports","_typeof","Symbol","iterator","obj","constructor","prototype","isBrowser","addEventListener","timers","Map","isReady","__SEER_INITIALIZED__","throttle","key","delay","time","get","now","Date","set","send","type","data","arguments","seen","Set","payload","JSON","stringify","has","add","toString","slice","includes","Array","replacer","postMessage","source","e","console","log","listeners","listener","message","_message$data","typeListeners","forEach","cb","init","__SEER_LISTENER__","list","listItem","itemKey","updateItem","path","multiUpdate","array","deleteItem","addLog","msg","listenFor","Error","push","removeListener","filter","l","clean","removeEventListener","CUBE_INDICES","Uint16Array","CUBE_POSITIONS","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","POSITION","NORMAL","TEXCOORD_0"],"mappings":"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","file":"component---templates-lessons-example-04-jsx-90d6d956505e485fb728.js","sourcesContent":["import GL from '@luma.gl/constants';\nimport {AnimationLoop, Model, Geometry, CubeGeometry, setParameters} from '@luma.gl/core';\nimport {Matrix4} from 'math.gl';\n\nconst INFO_HTML = `\n<p>\n  <a href=\"http://learningwebgl.com/blog/?p=370\" target=\"_blank\">\n    Some Real 3D Objects\n  </a>\n<p>\nThe classic WebGL Lessons in luma.gl\n`;\n\nconst VERTEX_SHADER = `\\\nattribute vec3 positions;\nattribute vec4 colors;\n\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_Position = uPMatrix * uMVMatrix * vec4(positions, 1.0);\n  vColor = colors;\n}\n`;\n\nconst FRAGMENT_SHADER = `\\\nprecision highp float;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n}\n`;\n\n// Makes a colored pyramid\nclass ColoredPyramidGeometry extends Geometry {\n  constructor(props) {\n    super({\n      ...props,\n      attributes: {\n        /* eslint-disable indent, no-multi-spaces */\n\n        // prettier-ignore\n        positions: new Float32Array([\n           0,  1,  0,\n          -1, -1,  1,\n           1, -1,  1,\n           0,  1,  0,\n           1, -1,  1,\n           1, -1, -1,\n           0,  1,  0,\n           1, -1, -1,\n          -1, -1, -1,\n           0,  1,  0,\n          -1, -1, -1,\n          -1, -1,  1\n        ]),\n        colors: {\n          size: 4,\n          // prettier-ignore\n          value: new Float32Array([\n            1, 0, 0, 1,\n            0, 1, 0, 1,\n            0, 0, 1, 1,\n            1, 0, 0, 1,\n            0, 0, 1, 1,\n            0, 1, 0, 1,\n            1, 0, 0, 1,\n            0, 1, 0, 1,\n            0, 0, 1, 1,\n            1, 0, 0, 1,\n            0, 0, 1, 1,\n            0, 1, 0, 1\n          ])\n        }\n      }\n    });\n  }\n}\n\n// Make a colored cube\nclass ColoredCubeGeometry extends CubeGeometry {\n  constructor(props) {\n    super({\n      ...props,\n      // Add one attribute to the geometry\n      attributes: {\n        colors: {\n          size: 4,\n          // prettier-ignore\n          value: new Float32Array([\n            1, 0, 0, 1,\n            1, 0, 0, 1,\n            1, 0, 0, 1,\n            1, 0, 0, 1,\n            1, 1, 0, 1,\n            1, 1, 0, 1,\n            1, 1, 0, 1,\n            1, 1, 0, 1,\n            0, 1, 0, 1,\n            0, 1, 0, 1,\n            0, 1, 0, 1,\n            0, 1, 0, 1,\n            1, 0.5, 0.5, 1,\n            1, 0.5, 0.5, 1,\n            1, 0.5, 0.5, 1,\n            1, 0.5, 0.5, 1,\n            1, 0, 1, 1,\n            1, 0, 1, 1,\n            1, 0, 1, 1,\n            1, 0, 1, 1,\n            0, 0, 1, 1,\n            0, 0, 1, 1,\n            0, 0, 1, 1,\n            0, 0, 1, 1\n          ])\n        }\n      }\n    });\n  }\n}\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  // .context(() => createGLContext({canvas: 'lesson04-canvas'}))\n  static getInfo() {\n    return INFO_HTML;\n  }\n  onInitialize({gl}) {\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    return {\n      pyramid: new Model(gl, {\n        vs: VERTEX_SHADER,\n        fs: FRAGMENT_SHADER,\n        geometry: new ColoredPyramidGeometry()\n      }),\n      cube: new Model(gl, {\n        vs: VERTEX_SHADER,\n        fs: FRAGMENT_SHADER,\n        geometry: new ColoredCubeGeometry()\n      })\n    };\n  }\n  onRender({gl, tick, aspect, pyramid, cube}) {\n    gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n\n    const projection = new Matrix4().perspective({aspect});\n    const view = new Matrix4().lookAt({eye: [0, 0, 0]});\n\n    pyramid\n      .setUniforms({\n        uPMatrix: projection,\n        uMVMatrix: view\n          .clone()\n          .translate([-1.5, 0, -8])\n          .rotateY(tick * 0.01)\n      })\n      .draw();\n\n    const phi = tick * 0.01;\n    cube\n      .setUniforms({\n        uPMatrix: projection,\n        uMVMatrix: view\n          .clone()\n          .translate([1.5, 0, -8])\n          .rotateXYZ([phi, phi, phi])\n      })\n      .draw();\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/lessons/04/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import {uid, assert} from '../utils';\n\n// Rendering primitives - specify how to extract primitives from vertices.\n// NOTE: These are numerically identical to the corresponding WebGL/OpenGL constants\nexport const DRAW_MODE = {\n  POINTS: 0x0000, // draw single points.\n  LINES: 0x0001, // draw lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // draw lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // draw a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // draw triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // draw a connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // draw a connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\nexport default class Geometry {\n  static get DRAW_MODE() {\n    return DRAW_MODE;\n  }\n\n  constructor(props = {}) {\n    const {\n      id = uid('geometry'),\n      drawMode = DRAW_MODE.TRIANGLES,\n      attributes = {},\n      indices = null,\n      vertexCount = null\n    } = props;\n\n    this.id = id;\n    this.drawMode = drawMode | 0;\n    this.attributes = {};\n    this.userData = {};\n\n    this._setAttributes(attributes, indices);\n\n    this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n\n    // stubRemovedMethods(this, [\n    //   'setNeedsRedraw', 'needsRedraw', 'setAttributes'\n    // ], 'Immutable');\n\n    // stubRemovedMethods(this, [\n    //   'hasAttribute', 'getAttribute', 'getArray'\n    // ], 'Use geometry.attributes and geometry.indices');\n\n    // deprecateMethods(this, ['getAttributes'])\n  }\n\n  get mode() {\n    return this.drawMode;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  // Return an object with all attributes plus indices added as a field.\n  getAttributes() {\n    return this.indices ? {indices: this.indices, ...this.attributes} : this.attributes;\n  }\n\n  // PRIVATE\n\n  _print(attributeName) {\n    return `Geometry ${this.id} attribute ${attributeName}`;\n  }\n\n  // Attribute\n  // value: typed array\n  // type: indices, vertices, uvs\n  // size: elements per vertex\n  // target: WebGL buffer type (string or constant)\n  _setAttributes(attributes, indices) {\n    if (indices) {\n      this.indices = ArrayBuffer.isView(indices) ? {value: indices, size: 1} : indices;\n    }\n\n    for (const attributeName in attributes) {\n      let attribute = attributes[attributeName];\n\n      // Wrap \"unwrapped\" arrays and try to autodetect their type\n      attribute = ArrayBuffer.isView(attribute) ? {value: attribute} : attribute;\n\n      assert(\n        ArrayBuffer.isView(attribute.value),\n        `${this._print(attributeName)}: must be typed array or object with value as typed array`\n      );\n\n      if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\n        attribute.size = 3;\n      }\n\n      // Move indices to separate field\n      if (attributeName === 'indices') {\n        assert(!this.indices);\n        this.indices = attribute;\n      } else {\n        this.attributes[attributeName] = attribute;\n      }\n    }\n\n    if (this.indices && this.indices.isIndexed !== undefined) {\n      this.indices = Object.assign({}, this.indices);\n      delete this.indices.isIndexed;\n    }\n\n    return this;\n  }\n\n  _calculateVertexCount(attributes, indices) {\n    if (indices) {\n      return indices.value.length;\n    }\n    let vertexCount = Infinity;\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const {value, size, constant} = attribute;\n      if (!constant && value && size >= 1) {\n        vertexCount = Math.min(vertexCount, value.length / size);\n      }\n    }\n\n    assert(Number.isFinite(vertexCount));\n    return vertexCount;\n  }\n}\n","'use strict';\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n}; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nvar isBrowser = typeof window !== 'undefined' && window.addEventListener;\nvar timers = new Map();\n/**\n * Ready check for Seer initialization\n *\n * @returns {Boolean}\n */\n\nvar isReady = function isReady() {\n  return isBrowser && window.__SEER_INITIALIZED__;\n};\n/**\n * Utility method allowing to throttle a user action based on a key and a minimun delay.\n *\n * @param key {String} A unique key\n * @param delay {Number} The minimal delay to throttle\n * @returns {Boolean}\n */\n\n\nvar throttle = function throttle(key, delay) {\n  var time = timers.get(key);\n  var now = Date.now();\n\n  if (time && now - time < delay) {\n    return true;\n  }\n\n  timers.set(key, now);\n  return false;\n};\n\nvar replacer = function replacer(seen) {\n  return function (key, value) {\n    if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && seen.has(value)) {\n      return;\n    }\n\n    seen.add(value);\n    var isArray = Object.prototype.toString.call(value).slice(8, -1).includes('Array');\n\n    if (isArray) {\n      return Array.prototype.slice.call(value, 0, 20);\n    }\n\n    return value;\n  };\n};\n/**\n * Low-level api leveraging window.postMessage\n *\n * @param type {String} The action type\n * @param payload {Any} The action payload\n */\n\n\nvar send = function send(type) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isBrowser || !isReady()) {\n    return;\n  }\n\n  var seen = new Set();\n  var payload = JSON.stringify(data, replacer(seen));\n\n  try {\n    window.postMessage({\n      type: type,\n      payload: payload,\n      source: 'seer-agent'\n    }, '*');\n  } catch (e) {\n    if (throttle('seer-log', 2E3)) {\n      return;\n    }\n\n    console.log(e); // eslint-disable-line\n  }\n};\n\nvar listeners = new Map();\n\nvar listener = function listener(message) {\n  if (!message || !message.data || message.data.source !== 'seer-core') {\n    return;\n  }\n\n  var _message$data = message.data,\n      type = _message$data.type,\n      payload = _message$data.payload;\n  var typeListeners = listeners.get(type);\n\n  if (typeListeners) {\n    typeListeners.forEach(function (cb) {\n      return cb(payload);\n    });\n  }\n};\n/**\n * Initilize window listener. There will be only one for the whole process\n * to prevent too many registrations.\n *\n * This method will be called automatically if you use the `listenFor` method.\n */\n\n\nvar init = function init() {\n  if (!isBrowser || window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.addEventListener('message', listener);\n  window.__SEER_LISTENER__ = true;\n};\n/**\n * Clean listener. Can be useful in case you want to unregister upcoming events\n * or liberate memory.\n */\n\n\nvar clean = function clean() {\n  if (!isBrowser || !window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.removeEventListener('message', listener);\n  delete window.__SEER_LISTENER__;\n};\n/**\n * Create a listener that will be called upon events of the given key.\n *\n * @param key {String} The unique tab key\n * @param cb {Function} A callback that will receive the message payload\n */\n\n\nvar listenFor = function listenFor(type, cb) {\n  if (!isBrowser) {\n    return;\n  }\n\n  if (!type || !cb) {\n    throw new Error('Please provide a type and callback');\n  }\n\n  if (!listeners.has(type)) {\n    listeners.set(type, []);\n  }\n\n  if (!window.__SEER_LISTENER__) {\n    init();\n  }\n\n  listeners.get(type).push(cb);\n};\n/**\n * Remove an identity listener\n *\n * @param cb {Function} The callback to remove\n */\n\n\nvar removeListener = function removeListener(cb) {\n  listeners.forEach(function (typeListeners, key) {\n    listeners.set(key, typeListeners.filter(function (l) {\n      return l !== cb;\n    }));\n  });\n};\n/**\n * Creates a new indexed list.\n * It works by index to get O(1) accessing and performance.\n *\n * @param key {String} The key of the tab\n * @param data {Object} The indexed object\n */\n\n\nvar list = function list(key, data) {\n  return send('LIST', {\n    key: key,\n    data: data\n  });\n};\n/**\n * Creates an element in the indexed list, based on the itemKey.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param data {Any} The value of the item\n */\n\n\nvar listItem = function listItem(key, itemKey) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return send('LIST_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    data: data\n  });\n};\n/**\n * Update an item property, can be deeply nested.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param path {String} The path of the variable you want to update\n * @param data {Object} The new value\n */\n\n\nvar updateItem = function updateItem(key, itemKey, path, data) {\n  return send('UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    path: path,\n    data: data\n  });\n};\n/**\n * Similar to updateItem, but allows to pass an array with {path,data} pairs for\n * multiple update of the same item without having to send multiple messages.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param array {Array} The array of updates\n * @param array.path {String} The path for this update\n * @param array.data {Object} The value of this update\n */\n\n\nvar multiUpdate = function multiUpdate(key, itemKey, array) {\n  return send('MULTI_UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    array: array\n  });\n};\n/**\n * Remove a specific item in a specific tab.\n *\n * @param key {String} They key of the tab\n * @param itemKey {String} The key of the item\n */\n\n\nvar deleteItem = function deleteItem(key, itemKey) {\n  return send('DELETE_ITEM', {\n    key: key,\n    itemKey: itemKey\n  });\n};\n/**\n * Will create a log message to an item, that will be displayde with the current time.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param msg {String} The message to display\n */\n\n\nvar addLog = function addLog(key, itemKey, msg) {\n  return send('ADD_LOG', {\n    key: key,\n    itemKey: itemKey,\n    msg: msg\n  });\n};\n\nexports[\"default\"] = {\n  send: send,\n  throttle: throttle,\n  isReady: isReady,\n  list: list,\n  listItem: listItem,\n  updateItem: updateItem,\n  multiUpdate: multiUpdate,\n  deleteItem: deleteItem,\n  addLog: addLog,\n  listeners: listeners,\n  listenFor: listenFor,\n  removeListener: removeListener,\n  init: init,\n  clean: clean\n};","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n"],"sourceRoot":""}