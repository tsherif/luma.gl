{"version":3,"sources":["webpack:///../examples/lessons/06/app.js","webpack:///./templates/lessons/example-06.jsx","webpack:///../modules/core/src/geometry/geometry.js","webpack:///../node_modules/seer/dist/index.js","webpack:///../modules/core/src/geometries/cube-geometry.js","webpack:///../modules/core/src/scenegraph/nodes/scenegraph-node.js","webpack:///../modules/core/src/scenegraph/nodes/model-node.js"],"names":["xRot","xSpeed","yRot","ySpeed","z","filter","filters","cycleFilter","newFilter","element","document","AppAnimationLoop","getInfo","onInitialize","_ref","canvas","_setParameters","_parameters","_pixelStore","_parameters2","_pixelStore2","_parameters3","_pixelStore3","gl","setParameters","clearColor","clearDepth","depthTest","depthFunc","GL","LEQUAL","UNPACK_FLIP_Y_WEBGL","image","loadImage","cube","model_node","geometry","cube_geometry","vs","fs","textures","nearest","texture_2d","data","parameters","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","pixelStore","linear","LINEAR","mipmap","LINEAR_MIPMAP_LINEAR","onRender","_ref2","tick","aspect","DEPTH_BUFFER_BIT","uMVMatrix","matrix4","lookAt","eye","translate","rotateXYZ","multiplyRight","matrix","uPMatrix","perspective","uSampler","onFinalize","AnimationLoop","keyboardEventHandler","e","code","window","website","app_AppAnimationLoop","animationLoop","Example","render","react_default","a","createElement","animation_loop_example_page","exampleConfig","this","props","pageContext","React","Component","DRAW_MODE","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","Geometry","_props","_props$id","id","uid","_props$drawMode","drawMode","_props$attributes","attributes","_props$indices","indices","_props$vertexCount","vertexCount","userData","_setAttributes","_calculateVertexCount","getVertexCount","getAttributes","Object","assign","_print","attributeName","ArrayBuffer","isView","value","size","attribute","assert","undefined","isIndexed","length","Infinity","constant","Math","Number","__webpack_require__","defineProperty","exports","_typeof","Symbol","iterator","obj","constructor","prototype","isBrowser","addEventListener","timers","Map","isReady","__SEER_INITIALIZED__","throttle","key","delay","time","get","now","Date","set","send","type","arguments","seen","Set","payload","JSON","stringify","has","add","toString","call","slice","includes","Array","replacer","postMessage","source","console","log","listeners","listener","message","_message$data","typeListeners","forEach","cb","init","__SEER_LISTENER__","list","listItem","itemKey","updateItem","path","multiUpdate","array","deleteItem","addLog","msg","listenFor","Error","push","removeListener","l","clean","removeEventListener","CUBE_INDICES","Uint16Array","CUBE_POSITIONS","Float32Array","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","POSITION","NORMAL","TEXCOORD_0","CubeGeometry","_Geometry","ScenegraphNode","name","display","position","vector3","rotation","scale","_setScenegraphNodeProps","delete","setProps","setPosition","setRotation","setScale","setMatrix","copyMatrix","copy","setMatrixComponents","_ref$update","update","updateMatrix","pos","rot","identity","_temp","getCoordinateUniforms","modelMatrix","worldMatrix","viewMatrix","worldInverse","invert","worldInverseTranspose","transpose","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","ModelNode","_this","_ScenegraphNode","onBeforeRender","AfterRender","model","_setModelNodeProps","managedResources","resource","draw","_this$model","apply","setUniforms","_this$model2","setAttributes","_this$model3","updateModuleSettings","_this$model4"],"mappings":"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","file":"component---templates-lessons-example-06-jsx-0fad4254c3c621c94aaa.js","sourcesContent":["import GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  Texture2D,\n  setParameters,\n  loadImage,\n  ModelNode,\n  CubeGeometry\n} from '@luma.gl/core';\nimport {Matrix4} from 'math.gl';\n\nconst INFO_HTML = `\n<p>\n  <a href=\"http://learningwebgl.com/blog/?p=571\" target=\"_blank\">\n    Keyboard input and texture filters\n  </a>\n\n  <br/>\n  <br/>\n\n  Use arrow keys to spin the box and <code>+</code>/<code>-</code> to zoom in/out.\n\n  <br/>\n  <br/>\n\n  Filter (<code>F</code>): <code><span id='filter'/></code>\n<p>\nThe classic WebGL Lessons in luma.gl\n`;\n\nconst VERTEX_SHADER = `\\\nattribute vec3 positions;\nattribute vec2 texCoords;\n\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\n\nvarying vec2 vTextureCoord;\n\n\nvoid main(void) {\n  gl_Position = uPMatrix * uMVMatrix * vec4(positions, 1.0);\n  vTextureCoord = texCoords;\n}\n`;\n\nconst FRAGMENT_SHADER = `\\\nprecision highp float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\n\nvoid main(void) {\n  gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\n}\n`;\n\nlet xRot = 0;\nlet xSpeed = 0.01;\nlet yRot = 0;\nlet ySpeed = 0.013;\nlet z = -5.0;\nlet filter = 0;\nconst filters = ['nearest', 'linear', 'mipmap'];\n\nfunction cycleFilter(newFilter) {\n  filter = newFilter !== undefined ? newFilter : (filter + 1) % 3;\n  /* global document */\n  const element = document.getElementById('filter');\n  if (element) {\n    element.textContent = `GL.${filters[filter].toUpperCase()}`;\n  }\n}\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({canvas, gl}) {\n    document.addEventListener('keydown', keyboardEventHandler);\n\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      depthTest: true,\n      depthFunc: GL.LEQUAL,\n      [GL.UNPACK_FLIP_Y_WEBGL]: true\n    });\n\n    cycleFilter(0);\n\n    // load image\n    const image = loadImage('crate.gif');\n\n    return {\n      cube: new ModelNode(gl, {\n        geometry: new CubeGeometry(),\n        vs: VERTEX_SHADER,\n        fs: FRAGMENT_SHADER\n      }),\n\n      textures: {\n        nearest: new Texture2D(gl, {\n          data: image,\n          parameters: {\n            [GL.TEXTURE_MIN_FILTER]: GL.NEAREST,\n            [GL.TEXTURE_MAG_FILTER]: GL.NEAREST\n          },\n          pixelStore: {\n            [GL.UNPACK_FLIP_Y_WEBGL]: true\n          }\n        }),\n        linear: new Texture2D(gl, {\n          data: image,\n          parameters: {\n            [GL.TEXTURE_MIN_FILTER]: GL.LINEAR,\n            [GL.TEXTURE_MAG_FILTER]: GL.LINEAR\n          },\n          pixelStore: {\n            [GL.UNPACK_FLIP_Y_WEBGL]: true\n          }\n        }),\n        mipmap: new Texture2D(gl, {\n          data: image,\n          mipmap: true,\n          parameters: {\n            [GL.TEXTURE_MIN_FILTER]: GL.LINEAR_MIPMAP_LINEAR,\n            [GL.TEXTURE_MAG_FILTER]: GL.LINEAR\n          },\n          pixelStore: {\n            [GL.UNPACK_FLIP_Y_WEBGL]: true\n          }\n        })\n      }\n    };\n  }\n  onRender({gl, tick, aspect, cube, textures}) {\n    xRot += xSpeed;\n    yRot += ySpeed;\n\n    gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n\n    // cube\n    //   .setUniforms({\n    //     uSampler: textures[filters[filter]],\n    //     uPMatrix: new Matrix4().perspective({aspect}),\n    //     uMVMatrix: new Matrix4()\n    //       .lookAt({eye: [0, 0, 0]})\n    //       .translate([0, 0, -5])\n    //   })\n    //   .draw();\n\n    // draw Cube\n\n    // update element matrix to rotate cube on its center\n    cube.setRotation([xRot, yRot, 0]).updateMatrix();\n\n    const uMVMatrix = new Matrix4()\n      .lookAt({eye: [0, 0, 0]})\n      .translate([0, 0, z])\n      .rotateXYZ([tick * 0.01, tick * 0.01, tick * 0.01])\n      .multiplyRight(cube.matrix);\n\n    cube\n      .setUniforms({\n        uMVMatrix,\n        uPMatrix: new Matrix4().perspective({aspect}),\n        uSampler: textures[filters[filter]]\n      })\n      .draw();\n  }\n\n  onFinalize() {\n    document.removeEventListener('keydown', keyboardEventHandler);\n  }\n}\n\nfunction keyboardEventHandler(e) {\n  switch (e.code) {\n    case 'KeyF':\n      cycleFilter();\n      break;\n    case 'ArrowUp':\n      xSpeed -= 0.01;\n      break;\n    case 'ArrowDown':\n      xSpeed += 0.01;\n      break;\n    case 'ArrowLeft':\n      ySpeed -= 0.01;\n      break;\n    case 'ArrowRight':\n      ySpeed += 0.01;\n      break;\n    case 'Equal': // '+'\n      z += 0.05;\n      break;\n    case 'Minus': // '-'\n      z -= 0.05;\n      break;\n    default:\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/lessons/06/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import {uid, assert} from '../utils';\n\n// Rendering primitives - specify how to extract primitives from vertices.\n// NOTE: These are numerically identical to the corresponding WebGL/OpenGL constants\nexport const DRAW_MODE = {\n  POINTS: 0x0000, // draw single points.\n  LINES: 0x0001, // draw lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // draw lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // draw a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // draw triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // draw a connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // draw a connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\nexport default class Geometry {\n  static get DRAW_MODE() {\n    return DRAW_MODE;\n  }\n\n  constructor(props = {}) {\n    const {\n      id = uid('geometry'),\n      drawMode = DRAW_MODE.TRIANGLES,\n      attributes = {},\n      indices = null,\n      vertexCount = null\n    } = props;\n\n    this.id = id;\n    this.drawMode = drawMode | 0;\n    this.attributes = {};\n    this.userData = {};\n\n    this._setAttributes(attributes, indices);\n\n    this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n\n    // stubRemovedMethods(this, [\n    //   'setNeedsRedraw', 'needsRedraw', 'setAttributes'\n    // ], 'Immutable');\n\n    // stubRemovedMethods(this, [\n    //   'hasAttribute', 'getAttribute', 'getArray'\n    // ], 'Use geometry.attributes and geometry.indices');\n\n    // deprecateMethods(this, ['getAttributes'])\n  }\n\n  get mode() {\n    return this.drawMode;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  // Return an object with all attributes plus indices added as a field.\n  getAttributes() {\n    return this.indices ? {indices: this.indices, ...this.attributes} : this.attributes;\n  }\n\n  // PRIVATE\n\n  _print(attributeName) {\n    return `Geometry ${this.id} attribute ${attributeName}`;\n  }\n\n  // Attribute\n  // value: typed array\n  // type: indices, vertices, uvs\n  // size: elements per vertex\n  // target: WebGL buffer type (string or constant)\n  _setAttributes(attributes, indices) {\n    if (indices) {\n      this.indices = ArrayBuffer.isView(indices) ? {value: indices, size: 1} : indices;\n    }\n\n    for (const attributeName in attributes) {\n      let attribute = attributes[attributeName];\n\n      // Wrap \"unwrapped\" arrays and try to autodetect their type\n      attribute = ArrayBuffer.isView(attribute) ? {value: attribute} : attribute;\n\n      assert(\n        ArrayBuffer.isView(attribute.value),\n        `${this._print(attributeName)}: must be typed array or object with value as typed array`\n      );\n\n      if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\n        attribute.size = 3;\n      }\n\n      // Move indices to separate field\n      if (attributeName === 'indices') {\n        assert(!this.indices);\n        this.indices = attribute;\n      } else {\n        this.attributes[attributeName] = attribute;\n      }\n    }\n\n    if (this.indices && this.indices.isIndexed !== undefined) {\n      this.indices = Object.assign({}, this.indices);\n      delete this.indices.isIndexed;\n    }\n\n    return this;\n  }\n\n  _calculateVertexCount(attributes, indices) {\n    if (indices) {\n      return indices.value.length;\n    }\n    let vertexCount = Infinity;\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const {value, size, constant} = attribute;\n      if (!constant && value && size >= 1) {\n        vertexCount = Math.min(vertexCount, value.length / size);\n      }\n    }\n\n    assert(Number.isFinite(vertexCount));\n    return vertexCount;\n  }\n}\n","'use strict';\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n}; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nvar isBrowser = typeof window !== 'undefined' && window.addEventListener;\nvar timers = new Map();\n/**\n * Ready check for Seer initialization\n *\n * @returns {Boolean}\n */\n\nvar isReady = function isReady() {\n  return isBrowser && window.__SEER_INITIALIZED__;\n};\n/**\n * Utility method allowing to throttle a user action based on a key and a minimun delay.\n *\n * @param key {String} A unique key\n * @param delay {Number} The minimal delay to throttle\n * @returns {Boolean}\n */\n\n\nvar throttle = function throttle(key, delay) {\n  var time = timers.get(key);\n  var now = Date.now();\n\n  if (time && now - time < delay) {\n    return true;\n  }\n\n  timers.set(key, now);\n  return false;\n};\n\nvar replacer = function replacer(seen) {\n  return function (key, value) {\n    if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && seen.has(value)) {\n      return;\n    }\n\n    seen.add(value);\n    var isArray = Object.prototype.toString.call(value).slice(8, -1).includes('Array');\n\n    if (isArray) {\n      return Array.prototype.slice.call(value, 0, 20);\n    }\n\n    return value;\n  };\n};\n/**\n * Low-level api leveraging window.postMessage\n *\n * @param type {String} The action type\n * @param payload {Any} The action payload\n */\n\n\nvar send = function send(type) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isBrowser || !isReady()) {\n    return;\n  }\n\n  var seen = new Set();\n  var payload = JSON.stringify(data, replacer(seen));\n\n  try {\n    window.postMessage({\n      type: type,\n      payload: payload,\n      source: 'seer-agent'\n    }, '*');\n  } catch (e) {\n    if (throttle('seer-log', 2E3)) {\n      return;\n    }\n\n    console.log(e); // eslint-disable-line\n  }\n};\n\nvar listeners = new Map();\n\nvar listener = function listener(message) {\n  if (!message || !message.data || message.data.source !== 'seer-core') {\n    return;\n  }\n\n  var _message$data = message.data,\n      type = _message$data.type,\n      payload = _message$data.payload;\n  var typeListeners = listeners.get(type);\n\n  if (typeListeners) {\n    typeListeners.forEach(function (cb) {\n      return cb(payload);\n    });\n  }\n};\n/**\n * Initilize window listener. There will be only one for the whole process\n * to prevent too many registrations.\n *\n * This method will be called automatically if you use the `listenFor` method.\n */\n\n\nvar init = function init() {\n  if (!isBrowser || window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.addEventListener('message', listener);\n  window.__SEER_LISTENER__ = true;\n};\n/**\n * Clean listener. Can be useful in case you want to unregister upcoming events\n * or liberate memory.\n */\n\n\nvar clean = function clean() {\n  if (!isBrowser || !window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.removeEventListener('message', listener);\n  delete window.__SEER_LISTENER__;\n};\n/**\n * Create a listener that will be called upon events of the given key.\n *\n * @param key {String} The unique tab key\n * @param cb {Function} A callback that will receive the message payload\n */\n\n\nvar listenFor = function listenFor(type, cb) {\n  if (!isBrowser) {\n    return;\n  }\n\n  if (!type || !cb) {\n    throw new Error('Please provide a type and callback');\n  }\n\n  if (!listeners.has(type)) {\n    listeners.set(type, []);\n  }\n\n  if (!window.__SEER_LISTENER__) {\n    init();\n  }\n\n  listeners.get(type).push(cb);\n};\n/**\n * Remove an identity listener\n *\n * @param cb {Function} The callback to remove\n */\n\n\nvar removeListener = function removeListener(cb) {\n  listeners.forEach(function (typeListeners, key) {\n    listeners.set(key, typeListeners.filter(function (l) {\n      return l !== cb;\n    }));\n  });\n};\n/**\n * Creates a new indexed list.\n * It works by index to get O(1) accessing and performance.\n *\n * @param key {String} The key of the tab\n * @param data {Object} The indexed object\n */\n\n\nvar list = function list(key, data) {\n  return send('LIST', {\n    key: key,\n    data: data\n  });\n};\n/**\n * Creates an element in the indexed list, based on the itemKey.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param data {Any} The value of the item\n */\n\n\nvar listItem = function listItem(key, itemKey) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return send('LIST_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    data: data\n  });\n};\n/**\n * Update an item property, can be deeply nested.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param path {String} The path of the variable you want to update\n * @param data {Object} The new value\n */\n\n\nvar updateItem = function updateItem(key, itemKey, path, data) {\n  return send('UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    path: path,\n    data: data\n  });\n};\n/**\n * Similar to updateItem, but allows to pass an array with {path,data} pairs for\n * multiple update of the same item without having to send multiple messages.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param array {Array} The array of updates\n * @param array.path {String} The path for this update\n * @param array.data {Object} The value of this update\n */\n\n\nvar multiUpdate = function multiUpdate(key, itemKey, array) {\n  return send('MULTI_UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    array: array\n  });\n};\n/**\n * Remove a specific item in a specific tab.\n *\n * @param key {String} They key of the tab\n * @param itemKey {String} The key of the item\n */\n\n\nvar deleteItem = function deleteItem(key, itemKey) {\n  return send('DELETE_ITEM', {\n    key: key,\n    itemKey: itemKey\n  });\n};\n/**\n * Will create a log message to an item, that will be displayde with the current time.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param msg {String} The message to display\n */\n\n\nvar addLog = function addLog(key, itemKey, msg) {\n  return send('ADD_LOG', {\n    key: key,\n    itemKey: itemKey,\n    msg: msg\n  });\n};\n\nexports[\"default\"] = {\n  send: send,\n  throttle: throttle,\n  isReady: isReady,\n  list: list,\n  listItem: listItem,\n  updateItem: updateItem,\n  multiUpdate: multiUpdate,\n  deleteItem: deleteItem,\n  addLog: addLog,\n  listeners: listeners,\n  listenFor: listenFor,\n  removeListener: removeListener,\n  init: init,\n  clean: clean\n};","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n","import {Vector3, Matrix4} from 'math.gl';\nimport {assert, uid} from '../../utils';\n\nexport default class ScenegraphNode {\n  constructor(props = {}) {\n    const {id} = props;\n\n    this.id = id || uid(this.constructor.name);\n\n    this.display = true; // whether to display the object at all\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n    this.userData = {};\n\n    this.props = {};\n    this._setScenegraphNodeProps(props);\n  }\n\n  delete() {}\n\n  setProps(props) {\n    this._setScenegraphNodeProps(props);\n    return this;\n  }\n\n  toString() {\n    return `{type: ScenegraphNode, id: ${this.id})}`;\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrix(matrix, copyMatrix = true) {\n    if (copyMatrix) {\n      this.matrix.copy(matrix);\n    } else {\n      this.matrix = matrix;\n    }\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update({position, rotation, scale} = {}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  /*\n  transform() {\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n  */\n\n  _setScenegraphNodeProps(props) {\n    if ('display' in props) {\n      this.display = props.display;\n    }\n\n    if ('position' in props) {\n      this.setPosition(props.position);\n    }\n    if ('rotation' in props) {\n      this.setRotation(props.rotation);\n    }\n    if ('scale' in props) {\n      this.setScale(props.scale);\n    }\n\n    // Matrix overwrites other props\n    if ('matrix' in props) {\n      this.setMatrix(props.matrix);\n    }\n\n    Object.assign(this.props, props);\n  }\n}\n","import Model from '../../lib/model';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n"],"sourceRoot":""}