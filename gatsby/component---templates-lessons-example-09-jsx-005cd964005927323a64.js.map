{"version":3,"sources":["webpack:///../examples/lessons/09/star.js","webpack:///../examples/lessons/09/app.js","webpack:///./templates/lessons/example-09.jsx","webpack:///../modules/core/src/geometry/geometry.js","webpack:///../node_modules/seer/dist/index.js","webpack:///../modules/core/src/scenegraph/nodes/scenegraph-node.js","webpack:///../modules/core/src/scenegraph/nodes/model-node.js"],"names":["VERTEX_SHADER","FRAGMENT_SHADER","Star","_ModelNode","gl","opts","_this","program","classes_program","fs","vs","call","this","geometry","attributes","positions","Float32Array","texCoords","indices","Uint16Array","uniforms","uSampler","texture","onBeforeRender","r","g","b","setUniforms","uColor","angle","dist","startingDistance","rotationSpeed","spin","randomiseColors","_proto","prototype","rd","Math","random","twinklerR","twinklerG","twinklerB","animate","position","set","setRotation","updateMatrix","model_node","zoom","tilt","AppAnimationLoop","getInfo","onInitialize","_ref","canvas","document","setParameters","clearColor","clearDepth","blendFunc","SRC_ALPHA","ONE","blend","texture_2d","stars","i","star_Star","onRender","_ref2","aspect","tick","radTilt","PI","cameraY","cameraZ","GL","uMVMatrix","matrix4","lookAt","eye","multiplyRight","matrix","uPMatrix","perspective","onFinalize","AnimationLoop","keyboardEventHandler","e","code","window","website","app_AppAnimationLoop","animationLoop","Example","render","react_default","a","createElement","animation_loop_example_page","exampleConfig","props","pageContext","React","Component","DRAW_MODE","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","Geometry","_props","_props$id","id","uid","_props$drawMode","drawMode","_props$attributes","_props$indices","_props$vertexCount","vertexCount","userData","_setAttributes","_calculateVertexCount","getVertexCount","getAttributes","Object","assign","_print","attributeName","ArrayBuffer","isView","value","size","attribute","assert","undefined","isIndexed","length","Infinity","constant","Number","__webpack_require__","defineProperty","exports","_typeof","Symbol","iterator","obj","constructor","isBrowser","addEventListener","timers","Map","isReady","__SEER_INITIALIZED__","throttle","key","delay","time","get","now","Date","send","type","data","arguments","seen","Set","payload","JSON","stringify","has","add","toString","slice","includes","Array","replacer","postMessage","source","console","log","listeners","listener","message","_message$data","typeListeners","forEach","cb","init","__SEER_LISTENER__","list","listItem","itemKey","updateItem","path","multiUpdate","array","deleteItem","addLog","msg","listenFor","Error","push","removeListener","filter","l","clean","removeEventListener","ScenegraphNode","name","display","vector3","rotation","scale","_setScenegraphNodeProps","delete","setProps","setPosition","setScale","setMatrix","copyMatrix","copy","setMatrixComponents","_ref$update","update","pos","rot","identity","translate","rotateXYZ","_temp","getCoordinateUniforms","modelMatrix","worldMatrix","viewMatrix","worldInverse","invert","worldInverseTranspose","transpose","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","ModelNode","_ScenegraphNode","AfterRender","model","_setModelNodeProps","managedResources","resource","draw","_this$model","apply","_this$model2","setAttributes","_this$model3","updateModuleSettings","_this$model4"],"mappings":"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","file":"component---templates-lessons-example-09-jsx-005cd964005927323a64.js","sourcesContent":["import {Program, Geometry, ModelNode} from '@luma.gl/core';\n\nconst VERTEX_SHADER = `\\\nattribute vec3 positions;\nattribute vec2 texCoords;\n\nuniform mat4 uMVMatrix;\nuniform mat4 uPMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void) {\n  gl_Position = uPMatrix * uMVMatrix * vec4(positions, 1.0);\n  vTextureCoord = texCoords;\n}\n`;\n\nconst FRAGMENT_SHADER = `\\\nprecision highp float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform vec3 uColor;\n\nvoid main(void) {\n  vec4 textureColor = vec4(texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t)).rgb, 1.0);\n  gl_FragColor = textureColor * vec4(uColor, 1.0);\n}\n`;\n\nexport class Star extends ModelNode {\n  constructor(gl, opts = {}) {\n    const program = new Program(gl, {\n      fs: FRAGMENT_SHADER,\n      vs: VERTEX_SHADER\n    });\n\n    super(gl, {\n      program,\n      geometry: new Geometry({\n        attributes: {\n          // prettier-ignore\n          positions: new Float32Array([\n            -1.0, -1.0, 0.0,\n            1.0, -1.0, 0.0,\n            -1.0, 1.0, 0.0,\n            1.0, 1.0, 0.0\n          ]),\n          // prettier-ignore\n          texCoords: new Float32Array([\n            0.0, 0.0,\n            1.0, 0.0,\n            0.0, 1.0,\n            1.0, 1.0\n          ]),\n          indices: new Uint16Array([0, 1, 3, 3, 2, 0])\n        }\n      }),\n      uniforms: {\n        uSampler: opts.texture\n      },\n      onBeforeRender: () => {\n        // TODO: Fix this so user can control this with a check-box\n        const isTwinkle = false; // twinkle.checked;\n        const r = isTwinkle ? Math.min(1, this.r + this.twinklerR) : this.r;\n        const g = isTwinkle ? Math.min(1, this.g + this.twinklerG) : this.g;\n        const b = isTwinkle ? Math.min(1, this.b + this.twinklerB) : this.b;\n        this.setUniforms({uColor: [r, g, b]});\n      }\n    });\n\n    this.angle = 0;\n    this.dist = opts.startingDistance;\n    this.rotationSpeed = opts.rotationSpeed;\n    this.spin = 0;\n\n    this.randomiseColors();\n  }\n\n  randomiseColors() {\n    const rd = Math.random;\n\n    this.r = rd();\n    this.g = rd();\n    this.b = rd();\n\n    this.twinklerR = rd();\n    this.twinklerG = rd();\n    this.twinklerB = rd();\n  }\n\n  animate(elapsedTime, twinkle) {\n    this.angle += this.rotationSpeed / 10;\n    this.dist -= 0.001;\n\n    if (this.dist < 0) {\n      this.dist += 5;\n      this.randomiseColors();\n    }\n\n    this.position.set(Math.cos(this.angle) * this.dist, Math.sin(this.angle) * this.dist, 0);\n    this.setRotation([0, 0, this.spin]);\n    this.spin += 0.1;\n    this.updateMatrix();\n  }\n}\n","import GL from '@luma.gl/constants';\nimport {AnimationLoop, Texture2D, setParameters} from '@luma.gl/core';\nimport {Matrix4} from 'math.gl';\nimport {Star} from './star';\n\nconst INFO_HTML = `\n<p>\n  <a href=\"http://learningwebgl.com/blog/?p=1008\" target=\"_blank\">\n    Improving the code structure with lots of moving objects\n  </a>\n  Up/Down/PageUp/PageDown to tilt and zoom.\n<p>\nThe classic WebGL Lessons in luma.gl\n`;\n\nlet zoom = -15;\nlet tilt = 90;\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({canvas, gl}) {\n    /* global document */\n    document.addEventListener('keydown', keyboardEventHandler);\n\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      blendFunc: [gl.SRC_ALPHA, gl.ONE],\n      blend: true\n    });\n\n    const texture = new Texture2D(gl, 'star.gif');\n\n    const stars = [];\n    const numStars = 50;\n    for (let i = 0; i < numStars; i++) {\n      stars.push(\n        new Star(gl, {\n          startingDistance: (i / numStars) * 5.0,\n          rotationSpeed: i / numStars,\n          texture\n        })\n      );\n    }\n\n    return {stars};\n  }\n\n  onRender({gl, tick, aspect, stars}) {\n    // Update Camera Position\n    const radTilt = (tilt / 180) * Math.PI;\n    const cameraY = Math.cos(radTilt) * zoom;\n    const cameraZ = Math.sin(radTilt) * zoom;\n\n    gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n\n    for (const i in stars) {\n      const uMVMatrix = new Matrix4()\n        .lookAt({eye: [0, cameraY, cameraZ]})\n        .multiplyRight(stars[i].matrix);\n\n      stars[i]\n        .setUniforms({\n          uMVMatrix,\n          uPMatrix: new Matrix4().perspective({aspect})\n        })\n        .draw();\n      stars[i].animate();\n    }\n  }\n\n  onFinalize() {\n    document.removeEventListener('keydown', keyboardEventHandler);\n  }\n}\n\nfunction keyboardEventHandler(e) {\n  switch (e.code) {\n    case 'ArrowUp':\n      tilt -= 1.5;\n      break;\n    case 'ArrowDown':\n      tilt += 1.5;\n      break;\n    case 'PageUp':\n      zoom -= 0.1;\n      break;\n    case 'PageDown':\n      zoom += 0.1;\n      break;\n    default:\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/lessons/09/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import {uid, assert} from '../utils';\n\n// Rendering primitives - specify how to extract primitives from vertices.\n// NOTE: These are numerically identical to the corresponding WebGL/OpenGL constants\nexport const DRAW_MODE = {\n  POINTS: 0x0000, // draw single points.\n  LINES: 0x0001, // draw lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // draw lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // draw a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // draw triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // draw a connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // draw a connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\nexport default class Geometry {\n  static get DRAW_MODE() {\n    return DRAW_MODE;\n  }\n\n  constructor(props = {}) {\n    const {\n      id = uid('geometry'),\n      drawMode = DRAW_MODE.TRIANGLES,\n      attributes = {},\n      indices = null,\n      vertexCount = null\n    } = props;\n\n    this.id = id;\n    this.drawMode = drawMode | 0;\n    this.attributes = {};\n    this.userData = {};\n\n    this._setAttributes(attributes, indices);\n\n    this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n\n    // stubRemovedMethods(this, [\n    //   'setNeedsRedraw', 'needsRedraw', 'setAttributes'\n    // ], 'Immutable');\n\n    // stubRemovedMethods(this, [\n    //   'hasAttribute', 'getAttribute', 'getArray'\n    // ], 'Use geometry.attributes and geometry.indices');\n\n    // deprecateMethods(this, ['getAttributes'])\n  }\n\n  get mode() {\n    return this.drawMode;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  // Return an object with all attributes plus indices added as a field.\n  getAttributes() {\n    return this.indices ? {indices: this.indices, ...this.attributes} : this.attributes;\n  }\n\n  // PRIVATE\n\n  _print(attributeName) {\n    return `Geometry ${this.id} attribute ${attributeName}`;\n  }\n\n  // Attribute\n  // value: typed array\n  // type: indices, vertices, uvs\n  // size: elements per vertex\n  // target: WebGL buffer type (string or constant)\n  _setAttributes(attributes, indices) {\n    if (indices) {\n      this.indices = ArrayBuffer.isView(indices) ? {value: indices, size: 1} : indices;\n    }\n\n    for (const attributeName in attributes) {\n      let attribute = attributes[attributeName];\n\n      // Wrap \"unwrapped\" arrays and try to autodetect their type\n      attribute = ArrayBuffer.isView(attribute) ? {value: attribute} : attribute;\n\n      assert(\n        ArrayBuffer.isView(attribute.value),\n        `${this._print(attributeName)}: must be typed array or object with value as typed array`\n      );\n\n      if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\n        attribute.size = 3;\n      }\n\n      // Move indices to separate field\n      if (attributeName === 'indices') {\n        assert(!this.indices);\n        this.indices = attribute;\n      } else {\n        this.attributes[attributeName] = attribute;\n      }\n    }\n\n    if (this.indices && this.indices.isIndexed !== undefined) {\n      this.indices = Object.assign({}, this.indices);\n      delete this.indices.isIndexed;\n    }\n\n    return this;\n  }\n\n  _calculateVertexCount(attributes, indices) {\n    if (indices) {\n      return indices.value.length;\n    }\n    let vertexCount = Infinity;\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const {value, size, constant} = attribute;\n      if (!constant && value && size >= 1) {\n        vertexCount = Math.min(vertexCount, value.length / size);\n      }\n    }\n\n    assert(Number.isFinite(vertexCount));\n    return vertexCount;\n  }\n}\n","'use strict';\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n}; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nvar isBrowser = typeof window !== 'undefined' && window.addEventListener;\nvar timers = new Map();\n/**\n * Ready check for Seer initialization\n *\n * @returns {Boolean}\n */\n\nvar isReady = function isReady() {\n  return isBrowser && window.__SEER_INITIALIZED__;\n};\n/**\n * Utility method allowing to throttle a user action based on a key and a minimun delay.\n *\n * @param key {String} A unique key\n * @param delay {Number} The minimal delay to throttle\n * @returns {Boolean}\n */\n\n\nvar throttle = function throttle(key, delay) {\n  var time = timers.get(key);\n  var now = Date.now();\n\n  if (time && now - time < delay) {\n    return true;\n  }\n\n  timers.set(key, now);\n  return false;\n};\n\nvar replacer = function replacer(seen) {\n  return function (key, value) {\n    if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && seen.has(value)) {\n      return;\n    }\n\n    seen.add(value);\n    var isArray = Object.prototype.toString.call(value).slice(8, -1).includes('Array');\n\n    if (isArray) {\n      return Array.prototype.slice.call(value, 0, 20);\n    }\n\n    return value;\n  };\n};\n/**\n * Low-level api leveraging window.postMessage\n *\n * @param type {String} The action type\n * @param payload {Any} The action payload\n */\n\n\nvar send = function send(type) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isBrowser || !isReady()) {\n    return;\n  }\n\n  var seen = new Set();\n  var payload = JSON.stringify(data, replacer(seen));\n\n  try {\n    window.postMessage({\n      type: type,\n      payload: payload,\n      source: 'seer-agent'\n    }, '*');\n  } catch (e) {\n    if (throttle('seer-log', 2E3)) {\n      return;\n    }\n\n    console.log(e); // eslint-disable-line\n  }\n};\n\nvar listeners = new Map();\n\nvar listener = function listener(message) {\n  if (!message || !message.data || message.data.source !== 'seer-core') {\n    return;\n  }\n\n  var _message$data = message.data,\n      type = _message$data.type,\n      payload = _message$data.payload;\n  var typeListeners = listeners.get(type);\n\n  if (typeListeners) {\n    typeListeners.forEach(function (cb) {\n      return cb(payload);\n    });\n  }\n};\n/**\n * Initilize window listener. There will be only one for the whole process\n * to prevent too many registrations.\n *\n * This method will be called automatically if you use the `listenFor` method.\n */\n\n\nvar init = function init() {\n  if (!isBrowser || window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.addEventListener('message', listener);\n  window.__SEER_LISTENER__ = true;\n};\n/**\n * Clean listener. Can be useful in case you want to unregister upcoming events\n * or liberate memory.\n */\n\n\nvar clean = function clean() {\n  if (!isBrowser || !window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.removeEventListener('message', listener);\n  delete window.__SEER_LISTENER__;\n};\n/**\n * Create a listener that will be called upon events of the given key.\n *\n * @param key {String} The unique tab key\n * @param cb {Function} A callback that will receive the message payload\n */\n\n\nvar listenFor = function listenFor(type, cb) {\n  if (!isBrowser) {\n    return;\n  }\n\n  if (!type || !cb) {\n    throw new Error('Please provide a type and callback');\n  }\n\n  if (!listeners.has(type)) {\n    listeners.set(type, []);\n  }\n\n  if (!window.__SEER_LISTENER__) {\n    init();\n  }\n\n  listeners.get(type).push(cb);\n};\n/**\n * Remove an identity listener\n *\n * @param cb {Function} The callback to remove\n */\n\n\nvar removeListener = function removeListener(cb) {\n  listeners.forEach(function (typeListeners, key) {\n    listeners.set(key, typeListeners.filter(function (l) {\n      return l !== cb;\n    }));\n  });\n};\n/**\n * Creates a new indexed list.\n * It works by index to get O(1) accessing and performance.\n *\n * @param key {String} The key of the tab\n * @param data {Object} The indexed object\n */\n\n\nvar list = function list(key, data) {\n  return send('LIST', {\n    key: key,\n    data: data\n  });\n};\n/**\n * Creates an element in the indexed list, based on the itemKey.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param data {Any} The value of the item\n */\n\n\nvar listItem = function listItem(key, itemKey) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return send('LIST_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    data: data\n  });\n};\n/**\n * Update an item property, can be deeply nested.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param path {String} The path of the variable you want to update\n * @param data {Object} The new value\n */\n\n\nvar updateItem = function updateItem(key, itemKey, path, data) {\n  return send('UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    path: path,\n    data: data\n  });\n};\n/**\n * Similar to updateItem, but allows to pass an array with {path,data} pairs for\n * multiple update of the same item without having to send multiple messages.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param array {Array} The array of updates\n * @param array.path {String} The path for this update\n * @param array.data {Object} The value of this update\n */\n\n\nvar multiUpdate = function multiUpdate(key, itemKey, array) {\n  return send('MULTI_UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    array: array\n  });\n};\n/**\n * Remove a specific item in a specific tab.\n *\n * @param key {String} They key of the tab\n * @param itemKey {String} The key of the item\n */\n\n\nvar deleteItem = function deleteItem(key, itemKey) {\n  return send('DELETE_ITEM', {\n    key: key,\n    itemKey: itemKey\n  });\n};\n/**\n * Will create a log message to an item, that will be displayde with the current time.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param msg {String} The message to display\n */\n\n\nvar addLog = function addLog(key, itemKey, msg) {\n  return send('ADD_LOG', {\n    key: key,\n    itemKey: itemKey,\n    msg: msg\n  });\n};\n\nexports[\"default\"] = {\n  send: send,\n  throttle: throttle,\n  isReady: isReady,\n  list: list,\n  listItem: listItem,\n  updateItem: updateItem,\n  multiUpdate: multiUpdate,\n  deleteItem: deleteItem,\n  addLog: addLog,\n  listeners: listeners,\n  listenFor: listenFor,\n  removeListener: removeListener,\n  init: init,\n  clean: clean\n};","import {Vector3, Matrix4} from 'math.gl';\nimport {assert, uid} from '../../utils';\n\nexport default class ScenegraphNode {\n  constructor(props = {}) {\n    const {id} = props;\n\n    this.id = id || uid(this.constructor.name);\n\n    this.display = true; // whether to display the object at all\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n    this.userData = {};\n\n    this.props = {};\n    this._setScenegraphNodeProps(props);\n  }\n\n  delete() {}\n\n  setProps(props) {\n    this._setScenegraphNodeProps(props);\n    return this;\n  }\n\n  toString() {\n    return `{type: ScenegraphNode, id: ${this.id})}`;\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrix(matrix, copyMatrix = true) {\n    if (copyMatrix) {\n      this.matrix.copy(matrix);\n    } else {\n      this.matrix = matrix;\n    }\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update({position, rotation, scale} = {}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  /*\n  transform() {\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n  */\n\n  _setScenegraphNodeProps(props) {\n    if ('display' in props) {\n      this.display = props.display;\n    }\n\n    if ('position' in props) {\n      this.setPosition(props.position);\n    }\n    if ('rotation' in props) {\n      this.setRotation(props.rotation);\n    }\n    if ('scale' in props) {\n      this.setScale(props.scale);\n    }\n\n    // Matrix overwrites other props\n    if ('matrix' in props) {\n      this.setMatrix(props.matrix);\n    }\n\n    Object.assign(this.props, props);\n  }\n}\n","import Model from '../../lib/model';\nimport ScenegraphNode from './scenegraph-node';\n\nexport default class ModelNode extends ScenegraphNode {\n  constructor(gl, props = {}) {\n    super(props);\n\n    // pverride callbacks to make sure we call them with this\n    this.onBeforeRender = null;\n    this.AfterRender = null;\n\n    // Create new Model or used supplied Model\n    if (gl instanceof Model) {\n      this.model = gl;\n      this._setModelNodeProps(props);\n    } else {\n      this.model = new Model(gl, props);\n    }\n\n    this.managedResources = props.managedResources || [];\n  }\n\n  setProps(props) {\n    super.setProps(props);\n    this._setModelNodeProps(props);\n    return this;\n  }\n\n  delete() {\n    if (this.model) {\n      this.model.delete();\n      this.model = null;\n    }\n\n    this.managedResources.forEach(resource => resource.delete());\n    this.managedResources = [];\n  }\n\n  // Forward node methods\n  draw(...args) {\n    // Return value indicates if something was actually drawn\n    return this.model.draw(...args);\n  }\n\n  setUniforms(...args) {\n    this.model.setUniforms(...args);\n    return this;\n  }\n\n  setAttributes(...args) {\n    this.model.setAttributes(...args);\n    return this;\n  }\n\n  updateModuleSettings(...args) {\n    this.model.updateModuleSettings(...args);\n    return this;\n  }\n\n  // PRIVATE\n\n  _setModelNodeProps(props) {\n    this.model.setProps(props);\n  }\n}\n"],"sourceRoot":""}