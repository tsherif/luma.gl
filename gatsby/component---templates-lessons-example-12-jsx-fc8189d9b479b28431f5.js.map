{"version":3,"sources":["webpack:///../examples/lessons/12/app.js","webpack:///./templates/lessons/example-12.jsx","webpack:///../modules/core/src/geometry/geometry.js","webpack:///../node_modules/seer/dist/index.js","webpack:///../modules/core/src/geometries/cube-geometry.js","webpack:///../modules/core/src/geometries/sphere-geometry.js"],"names":["VERTEX_SHADER","FRAGMENT_SHADER","appState","moonRotationMatrix","matrix4","rotateY","radians","translate","cubeRotationMatrix","lastTime","AppAnimationLoop","getInfo","onInitialize","_ref","canvas","gl","setParameters","clearColor","clearDepth","depthTest","moon","model","geometry","sphere_geometry","nlat","nlong","radius","fs","vs","uniforms","uSampler","texture_2d","cube","cube_geometry","onRender","_ref2","aspect","tick","GL","uVMatrix","lookAt","eye","center","up","getElementValue","id","defaultValue","element","document","value","lighting","checked","uUseLighting","ambientColor","vector3","parseFloat","pointLightingLocation","pointLightColor","uAmbientColor","uPointLightingLocation","uPointLightingColor","uMMatrix","uPMatrix","perspective","fov","Math","PI","near","far","timeNow","Date","now","elapsed","newMatrix","animateAppState","AnimationLoop","window","website","app_AppAnimationLoop","animationLoop","Example","render","react_default","a","createElement","animation_loop_example_page","exampleConfig","this","props","pageContext","React","Component","DRAW_MODE","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","Geometry","_props","_props$id","uid","_props$drawMode","drawMode","_props$attributes","attributes","_props$indices","indices","_props$vertexCount","vertexCount","userData","_setAttributes","_calculateVertexCount","getVertexCount","getAttributes","Object","assign","_print","attributeName","ArrayBuffer","isView","size","attribute","assert","undefined","isIndexed","length","Infinity","constant","Number","__webpack_require__","defineProperty","exports","_typeof","Symbol","iterator","obj","constructor","prototype","isBrowser","addEventListener","timers","Map","isReady","__SEER_INITIALIZED__","throttle","key","delay","time","get","set","send","type","data","arguments","seen","Set","payload","JSON","stringify","has","add","toString","call","slice","includes","Array","replacer","postMessage","source","e","console","log","listeners","listener","message","_message$data","typeListeners","forEach","cb","init","__SEER_LISTENER__","list","listItem","itemKey","updateItem","path","multiUpdate","array","deleteItem","addLog","msg","listenFor","Error","push","removeListener","filter","l","clean","removeEventListener","CUBE_INDICES","Uint16Array","CUBE_POSITIONS","Float32Array","CUBE_NORMALS","CUBE_TEX_COORDS","ATTRIBUTES","POSITION","NORMAL","TEXCOORD_0","CubeGeometry","_Geometry","SphereGeometry","_tesselateSphere","_props$nlat","_props$nlong","_props$radius","latRange","longRange","numVertices","n1","n2","n3","u","v","positions","normals","texCoords","y","x","index","i2","i3","theta","phi","sinTheta","cosTheta","sinPhi","cosPhi","ux","uy","uz","r","numVertsAround","_y","_x","tesselateSphere"],"mappings":"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","file":"component---templates-lessons-example-12-jsx-fc8189d9b479b28431f5.js","sourcesContent":["import GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  Texture2D,\n  setParameters,\n  Model,\n  SphereGeometry,\n  CubeGeometry\n} from '@luma.gl/core';\nimport {Vector3, Matrix4, radians} from 'math.gl';\n/* eslint-disable complexity */\n\nconst VERTEX_SHADER = `\\\nattribute vec3 positions;\nattribute vec3 normals;\nattribute vec2 texCoords;\n\nuniform mat4 uMMatrix;\nuniform mat4 uVMatrix;\nuniform mat4 uPMatrix;\n\nuniform vec3 uAmbientColor;\n\nuniform vec3 uPointLightingLocation;\nuniform vec3 uPointLightingColor;\n\nuniform bool uUseLighting;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vLightWeighting;\n\nvoid main(void) {\n    vec4 mPosition = uMMatrix * vec4(positions, 1.0);\n    gl_Position = uPMatrix * uVMatrix * mPosition;\n    vTextureCoord = texCoords;\n\n    if (!uUseLighting) {\n        vLightWeighting = vec3(1.0, 1.0, 1.0);\n    } else {\n        vec3 lightDirection = normalize(uPointLightingLocation - mPosition.xyz);\n        vec4 transformedNormal = uMMatrix * vec4(normals, 0.0);\n        float pointLightWeighting = max(dot(transformedNormal.xyz, lightDirection), 0.0);\n        vLightWeighting = uAmbientColor + uPointLightingColor * pointLightWeighting;\n    }\n}\n`;\n\nconst FRAGMENT_SHADER = `\\\nprecision highp float;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vLightWeighting;\n\nuniform sampler2D uSampler;\n\nvoid main(void) {\n  vec4 textureColor = texture2D(uSampler, vec2(1.0 - vTextureCoord.s, 1.0 - vTextureCoord.t));\n  gl_FragColor = vec4(textureColor.rgb * vLightWeighting, textureColor.a);\n}\n`;\n\nconst INFO_HTML = `\n<p>\n  <a href=\"http://learningwebgl.com/blog/?p=1359\" target=\"_blank\">\n  Point lighting\n  </a>\n<p>\n  The classic WebGL Lessons in luma.gl\n`;\n\nconst appState = {\n  moonRotationMatrix: new Matrix4().rotateY(radians(180)).translate([5, 0, 0]),\n  cubeRotationMatrix: new Matrix4().translate([5, 0, 0]),\n  lastTime: 0\n};\n\nfunction animateAppState() {\n  const timeNow = Date.now();\n  if (appState.lastTime !== 0) {\n    const elapsed = timeNow - appState.lastTime;\n    const newMatrix = new Matrix4().rotateY(radians(elapsed / 20));\n    appState.moonRotationMatrix.multiplyLeft(newMatrix);\n    appState.cubeRotationMatrix.multiplyLeft(newMatrix);\n  }\n  appState.lastTime = timeNow;\n}\n\nexport default class AppAnimationLoop extends AnimationLoop {\n  static getInfo() {\n    return INFO_HTML;\n  }\n\n  onInitialize({canvas, gl}) {\n    setParameters(gl, {\n      clearColor: [0, 0, 0, 1],\n      clearDepth: 1,\n      depthTest: true\n    });\n\n    return {\n      moon: new Model(gl, {\n        geometry: new SphereGeometry({\n          nlat: 30,\n          nlong: 30,\n          radius: 2\n        }),\n        fs: FRAGMENT_SHADER,\n        vs: VERTEX_SHADER,\n        uniforms: {\n          uSampler: new Texture2D(gl, 'moon.gif')\n        }\n      }),\n      cube: new Model(gl, {\n        geometry: new CubeGeometry(),\n        vs: VERTEX_SHADER,\n        fs: FRAGMENT_SHADER,\n        uniforms: {\n          uSampler: new Texture2D(gl, 'crate.gif')\n        }\n      })\n    };\n  }\n\n  onRender({gl, tick, aspect, moon, cube}) {\n    // eslint-disable-line complexity\n    // set camera position\n    const eyePos = [0, 0, 20];\n\n    gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n\n    const uVMatrix = new Matrix4().lookAt({eye: eyePos, center: [0, 0, 0], up: [0, 1, 0]});\n\n    /* global document */\n    function getElementValue(id, defaultValue) {\n      const element = document.getElementById(id);\n      return element ? element.value : defaultValue;\n    }\n\n    const element = document.getElementById('lighting');\n    const lighting = element ? element.checked : true;\n\n    moon.setUniforms({uUseLighting: lighting});\n    cube.setUniforms({uUseLighting: lighting});\n\n    if (lighting) {\n      const ambientColor = new Vector3(\n        parseFloat(getElementValue('ambientR', 0.2)),\n        parseFloat(getElementValue('ambientG', 0.2)),\n        parseFloat(getElementValue('ambientB', 0.2))\n      );\n\n      const pointLightingLocation = new Vector3(\n        parseFloat(getElementValue('lightPositionX', 0)),\n        parseFloat(getElementValue('lightPositionY', 0)),\n        parseFloat(getElementValue('lightPositionZ', 0))\n      );\n\n      const pointLightColor = new Vector3(\n        parseFloat(getElementValue('pointR', 0.8)),\n        parseFloat(getElementValue('pointG', 0.8)),\n        parseFloat(getElementValue('pointB', 0.8))\n      );\n\n      moon.setUniforms({\n        uAmbientColor: ambientColor,\n        uPointLightingLocation: pointLightingLocation,\n        uPointLightingColor: pointLightColor\n      });\n\n      cube.setUniforms({\n        uAmbientColor: ambientColor,\n        uPointLightingLocation: pointLightingLocation,\n        uPointLightingColor: pointLightColor\n      });\n    }\n\n    moon\n      .setUniforms({\n        uMMatrix: appState.moonRotationMatrix,\n        uVMatrix,\n        uPMatrix: new Matrix4().perspective({\n          fov: (45 * Math.PI) / 180,\n          aspect,\n          near: 0.1,\n          far: 100\n        })\n      })\n      .draw();\n\n    cube\n      .setUniforms({\n        uMMatrix: appState.cubeRotationMatrix,\n        uVMatrix,\n        uPMatrix: new Matrix4().perspective({\n          fov: (45 * Math.PI) / 180,\n          aspect,\n          near: 0.1,\n          far: 100\n        })\n      })\n      .draw();\n\n    animateAppState();\n  }\n}\n\n/* global window */\nif (typeof window !== 'undefined' && !window.website) {\n  const animationLoop = new AppAnimationLoop();\n  animationLoop.start();\n}\n","import React from 'react';\nimport AnimationLoopExamplePage from '../../src/components/animation-loop-example-page';\nimport AnimationLoop from '../../../examples/lessons/12/app';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <AnimationLoopExamplePage AnimationLoop={AnimationLoop} exampleConfig={this.props.pageContext.exampleConfig} />\n    );\n  }\n}\n","import {uid, assert} from '../utils';\n\n// Rendering primitives - specify how to extract primitives from vertices.\n// NOTE: These are numerically identical to the corresponding WebGL/OpenGL constants\nexport const DRAW_MODE = {\n  POINTS: 0x0000, // draw single points.\n  LINES: 0x0001, // draw lines. Each vertex connects to the one after it.\n  LINE_LOOP: 0x0002, // draw lines. Each set of two vertices is treated as a separate line segment.\n  LINE_STRIP: 0x0003, // draw a connected group of line segments from the first vertex to the last\n  TRIANGLES: 0x0004, // draw triangles. Each set of three vertices creates a separate triangle.\n  TRIANGLE_STRIP: 0x0005, // draw a connected group of triangles.\n  TRIANGLE_FAN: 0x0006 // draw a connected group of triangles.\n  // Each vertex connects to the previous and the first vertex in the fan.\n};\n\nexport default class Geometry {\n  static get DRAW_MODE() {\n    return DRAW_MODE;\n  }\n\n  constructor(props = {}) {\n    const {\n      id = uid('geometry'),\n      drawMode = DRAW_MODE.TRIANGLES,\n      attributes = {},\n      indices = null,\n      vertexCount = null\n    } = props;\n\n    this.id = id;\n    this.drawMode = drawMode | 0;\n    this.attributes = {};\n    this.userData = {};\n\n    this._setAttributes(attributes, indices);\n\n    this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\n\n    // stubRemovedMethods(this, [\n    //   'setNeedsRedraw', 'needsRedraw', 'setAttributes'\n    // ], 'Immutable');\n\n    // stubRemovedMethods(this, [\n    //   'hasAttribute', 'getAttribute', 'getArray'\n    // ], 'Use geometry.attributes and geometry.indices');\n\n    // deprecateMethods(this, ['getAttributes'])\n  }\n\n  get mode() {\n    return this.drawMode;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  // Return an object with all attributes plus indices added as a field.\n  getAttributes() {\n    return this.indices ? {indices: this.indices, ...this.attributes} : this.attributes;\n  }\n\n  // PRIVATE\n\n  _print(attributeName) {\n    return `Geometry ${this.id} attribute ${attributeName}`;\n  }\n\n  // Attribute\n  // value: typed array\n  // type: indices, vertices, uvs\n  // size: elements per vertex\n  // target: WebGL buffer type (string or constant)\n  _setAttributes(attributes, indices) {\n    if (indices) {\n      this.indices = ArrayBuffer.isView(indices) ? {value: indices, size: 1} : indices;\n    }\n\n    for (const attributeName in attributes) {\n      let attribute = attributes[attributeName];\n\n      // Wrap \"unwrapped\" arrays and try to autodetect their type\n      attribute = ArrayBuffer.isView(attribute) ? {value: attribute} : attribute;\n\n      assert(\n        ArrayBuffer.isView(attribute.value),\n        `${this._print(attributeName)}: must be typed array or object with value as typed array`\n      );\n\n      if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\n        attribute.size = 3;\n      }\n\n      // Move indices to separate field\n      if (attributeName === 'indices') {\n        assert(!this.indices);\n        this.indices = attribute;\n      } else {\n        this.attributes[attributeName] = attribute;\n      }\n    }\n\n    if (this.indices && this.indices.isIndexed !== undefined) {\n      this.indices = Object.assign({}, this.indices);\n      delete this.indices.isIndexed;\n    }\n\n    return this;\n  }\n\n  _calculateVertexCount(attributes, indices) {\n    if (indices) {\n      return indices.value.length;\n    }\n    let vertexCount = Infinity;\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const {value, size, constant} = attribute;\n      if (!constant && value && size >= 1) {\n        vertexCount = Math.min(vertexCount, value.length / size);\n      }\n    }\n\n    assert(Number.isFinite(vertexCount));\n    return vertexCount;\n  }\n}\n","'use strict';\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.map\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n}; // Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nvar isBrowser = typeof window !== 'undefined' && window.addEventListener;\nvar timers = new Map();\n/**\n * Ready check for Seer initialization\n *\n * @returns {Boolean}\n */\n\nvar isReady = function isReady() {\n  return isBrowser && window.__SEER_INITIALIZED__;\n};\n/**\n * Utility method allowing to throttle a user action based on a key and a minimun delay.\n *\n * @param key {String} A unique key\n * @param delay {Number} The minimal delay to throttle\n * @returns {Boolean}\n */\n\n\nvar throttle = function throttle(key, delay) {\n  var time = timers.get(key);\n  var now = Date.now();\n\n  if (time && now - time < delay) {\n    return true;\n  }\n\n  timers.set(key, now);\n  return false;\n};\n\nvar replacer = function replacer(seen) {\n  return function (key, value) {\n    if (value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && seen.has(value)) {\n      return;\n    }\n\n    seen.add(value);\n    var isArray = Object.prototype.toString.call(value).slice(8, -1).includes('Array');\n\n    if (isArray) {\n      return Array.prototype.slice.call(value, 0, 20);\n    }\n\n    return value;\n  };\n};\n/**\n * Low-level api leveraging window.postMessage\n *\n * @param type {String} The action type\n * @param payload {Any} The action payload\n */\n\n\nvar send = function send(type) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isBrowser || !isReady()) {\n    return;\n  }\n\n  var seen = new Set();\n  var payload = JSON.stringify(data, replacer(seen));\n\n  try {\n    window.postMessage({\n      type: type,\n      payload: payload,\n      source: 'seer-agent'\n    }, '*');\n  } catch (e) {\n    if (throttle('seer-log', 2E3)) {\n      return;\n    }\n\n    console.log(e); // eslint-disable-line\n  }\n};\n\nvar listeners = new Map();\n\nvar listener = function listener(message) {\n  if (!message || !message.data || message.data.source !== 'seer-core') {\n    return;\n  }\n\n  var _message$data = message.data,\n      type = _message$data.type,\n      payload = _message$data.payload;\n  var typeListeners = listeners.get(type);\n\n  if (typeListeners) {\n    typeListeners.forEach(function (cb) {\n      return cb(payload);\n    });\n  }\n};\n/**\n * Initilize window listener. There will be only one for the whole process\n * to prevent too many registrations.\n *\n * This method will be called automatically if you use the `listenFor` method.\n */\n\n\nvar init = function init() {\n  if (!isBrowser || window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.addEventListener('message', listener);\n  window.__SEER_LISTENER__ = true;\n};\n/**\n * Clean listener. Can be useful in case you want to unregister upcoming events\n * or liberate memory.\n */\n\n\nvar clean = function clean() {\n  if (!isBrowser || !window.__SEER_LISTENER__) {\n    return;\n  }\n\n  window.removeEventListener('message', listener);\n  delete window.__SEER_LISTENER__;\n};\n/**\n * Create a listener that will be called upon events of the given key.\n *\n * @param key {String} The unique tab key\n * @param cb {Function} A callback that will receive the message payload\n */\n\n\nvar listenFor = function listenFor(type, cb) {\n  if (!isBrowser) {\n    return;\n  }\n\n  if (!type || !cb) {\n    throw new Error('Please provide a type and callback');\n  }\n\n  if (!listeners.has(type)) {\n    listeners.set(type, []);\n  }\n\n  if (!window.__SEER_LISTENER__) {\n    init();\n  }\n\n  listeners.get(type).push(cb);\n};\n/**\n * Remove an identity listener\n *\n * @param cb {Function} The callback to remove\n */\n\n\nvar removeListener = function removeListener(cb) {\n  listeners.forEach(function (typeListeners, key) {\n    listeners.set(key, typeListeners.filter(function (l) {\n      return l !== cb;\n    }));\n  });\n};\n/**\n * Creates a new indexed list.\n * It works by index to get O(1) accessing and performance.\n *\n * @param key {String} The key of the tab\n * @param data {Object} The indexed object\n */\n\n\nvar list = function list(key, data) {\n  return send('LIST', {\n    key: key,\n    data: data\n  });\n};\n/**\n * Creates an element in the indexed list, based on the itemKey.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param data {Any} The value of the item\n */\n\n\nvar listItem = function listItem(key, itemKey) {\n  var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return send('LIST_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    data: data\n  });\n};\n/**\n * Update an item property, can be deeply nested.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param path {String} The path of the variable you want to update\n * @param data {Object} The new value\n */\n\n\nvar updateItem = function updateItem(key, itemKey, path, data) {\n  return send('UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    path: path,\n    data: data\n  });\n};\n/**\n * Similar to updateItem, but allows to pass an array with {path,data} pairs for\n * multiple update of the same item without having to send multiple messages.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param array {Array} The array of updates\n * @param array.path {String} The path for this update\n * @param array.data {Object} The value of this update\n */\n\n\nvar multiUpdate = function multiUpdate(key, itemKey, array) {\n  return send('MULTI_UPDATE_ITEM', {\n    key: key,\n    itemKey: itemKey,\n    array: array\n  });\n};\n/**\n * Remove a specific item in a specific tab.\n *\n * @param key {String} They key of the tab\n * @param itemKey {String} The key of the item\n */\n\n\nvar deleteItem = function deleteItem(key, itemKey) {\n  return send('DELETE_ITEM', {\n    key: key,\n    itemKey: itemKey\n  });\n};\n/**\n * Will create a log message to an item, that will be displayde with the current time.\n *\n * @param key {String} The key of the tab\n * @param itemKey {String} The key of the item\n * @param msg {String} The message to display\n */\n\n\nvar addLog = function addLog(key, itemKey, msg) {\n  return send('ADD_LOG', {\n    key: key,\n    itemKey: itemKey,\n    msg: msg\n  });\n};\n\nexports[\"default\"] = {\n  send: send,\n  throttle: throttle,\n  isReady: isReady,\n  list: list,\n  listItem: listItem,\n  updateItem: updateItem,\n  multiUpdate: multiUpdate,\n  deleteItem: deleteItem,\n  addLog: addLog,\n  listeners: listeners,\n  listenFor: listenFor,\n  removeListener: removeListener,\n  init: init,\n  clean: clean\n};","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\n// prettier-ignore\nconst CUBE_INDICES = new Uint16Array([\n  0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13,\n  14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23\n]);\n\n// prettier-ignore\nconst CUBE_POSITIONS = new Float32Array([\n  -1,  -1,  1, 1,  -1,  1,  1,  1,  1,  -1,  1,  1,\n  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1,  -1,\n  -1,  1,  -1,  -1,  1,  1,  1,  1,  1,  1,  1,  -1,\n  -1,  -1,  -1,  1,  -1,  -1,  1,  -1,  1,  -1,  -1,  1,\n  1,  -1,  -1,  1,  1,  -1,  1,  1,  1,  1,  -1,  1,\n  -1,  -1,  -1,  -1,  -1,  1,  -1,  1,  1,  -1,  1,  -1\n]);\n\n// TODO - could be Uint8\n// prettier-ignore\nconst CUBE_NORMALS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,\n  // Back face\n  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,\n  // Top face\n  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,\n  // Bottom face\n  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,\n  // Right face\n  1,  0,  0,  1,  0,  0,  1,  0,  0,  1,  0,  0,\n  // Left face\n  -1,  0,  0,  -1,  0,  0,  -1,  0,  0,  -1,  0,  0\n]);\n\n// prettier-ignore\nconst CUBE_TEX_COORDS = new Float32Array([\n  // Front face\n  0,  0,  1,  0,  1,  1,  0,  1,\n  // Back face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Top face\n  0,  1,  0,  0,  1,  0,  1,  1,\n  // Bottom face\n  1,  1,  0,  1,  0,  0,  1,  0,\n  // Right face\n  1,  0,  1,  1,  0,  1,  0,  0,\n  // Left face\n  0,  0,  1,  0,  1,  1,  0,  1\n]);\n\nconst ATTRIBUTES = {\n  POSITION: {size: 3, value: new Float32Array(CUBE_POSITIONS)},\n  NORMAL: {size: 3, value: new Float32Array(CUBE_NORMALS)},\n  TEXCOORD_0: {size: 2, value: new Float32Array(CUBE_TEX_COORDS)}\n};\n\nexport default class CubeGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('cube-geometry')} = props;\n    super({\n      ...props,\n      id,\n      indices: {size: 1, value: new Uint16Array(CUBE_INDICES)},\n      attributes: {...ATTRIBUTES, ...props.attributes}\n    });\n  }\n}\n","import Geometry from '../geometry/geometry';\nimport {uid} from '../utils';\n\nexport default class SphereGeometry extends Geometry {\n  constructor(props = {}) {\n    const {id = uid('sphere-geometry')} = props;\n    const {indices, attributes} = tesselateSphere(props);\n    super({\n      ...props,\n      id,\n      indices,\n      attributes: {...attributes, ...props.attributes}\n    });\n  }\n}\n\n// Primitives inspired by TDL http://code.google.com/p/webglsamples/,\n// copyright 2011 Google Inc. new BSD License\n// (http://www.opensource.org/licenses/bsd-license.php).\n/* eslint-disable max-statements, complexity */\nfunction tesselateSphere(props) {\n  const {nlat = 10, nlong = 10} = props;\n  let {radius = 1} = props;\n\n  const startLat = 0;\n  const endLat = Math.PI;\n  const latRange = endLat - startLat;\n  const startLong = 0;\n  const endLong = 2 * Math.PI;\n  const longRange = endLong - startLong;\n  const numVertices = (nlat + 1) * (nlong + 1);\n\n  if (typeof radius === 'number') {\n    const value = radius;\n    radius = (n1, n2, n3, u, v) => value;\n  }\n\n  const positions = new Float32Array(numVertices * 3);\n  const normals = new Float32Array(numVertices * 3);\n  const texCoords = new Float32Array(numVertices * 2);\n  const indices = new Uint16Array(nlat * nlong * 6);\n\n  // Create positions, normals and texCoords\n  for (let y = 0; y <= nlat; y++) {\n    for (let x = 0; x <= nlong; x++) {\n      const u = x / nlong;\n      const v = y / nlat;\n\n      const index = x + y * (nlong + 1);\n      const i2 = index * 2;\n      const i3 = index * 3;\n\n      const theta = longRange * u;\n      const phi = latRange * v;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n\n      const r = radius(ux, uy, uz, u, v);\n\n      positions[i3 + 0] = r * ux;\n      positions[i3 + 1] = r * uy;\n      positions[i3 + 2] = r * uz;\n\n      normals[i3 + 0] = ux;\n      normals[i3 + 1] = uy;\n      normals[i3 + 2] = uz;\n\n      texCoords[i2 + 0] = u;\n      texCoords[i2 + 1] = 1 - v;\n    }\n  }\n\n  // Create indices\n  const numVertsAround = nlat + 1;\n  for (let x = 0; x < nlat; x++) {\n    for (let y = 0; y < nlong; y++) {\n      const index = (x * nlong + y) * 6;\n\n      indices[index + 0] = y * numVertsAround + x;\n      indices[index + 1] = y * numVertsAround + x + 1;\n      indices[index + 2] = (y + 1) * numVertsAround + x;\n\n      indices[index + 3] = (y + 1) * numVertsAround + x;\n      indices[index + 4] = y * numVertsAround + x + 1;\n      indices[index + 5] = (y + 1) * numVertsAround + x + 1;\n    }\n  }\n\n  return {\n    indices: {size: 1, value: indices},\n    attributes: {\n      POSITION: {size: 3, value: positions},\n      NORMAL: {size: 3, value: normals},\n      TEXCOORD_0: {size: 2, value: texCoords}\n    }\n  };\n}\n"],"sourceRoot":""}