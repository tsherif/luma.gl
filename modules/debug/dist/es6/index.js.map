{"version":3,"sources":["../../src/index.js"],"names":["log","global","COLOR_MODE","default","_DebugContext","compileShaderModule","compileVertexShader","compileFragmentShader","makeDebugContext","info"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,MAAb,QAA0B,eAA1B;AAEA,SAAQC,UAAR,QAAyB,kCAAzB;AACA,SAAQC,OAAO,IAAIC,aAAnB,QAAuC,qCAAvC;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,qBAHF,QAIO,sCAJP;AAMA,SAAQC,gBAAR,QAA+B,yCAA/B;AAIA,SAAQA,gBAAR,QAA+B,yCAA/B;AACAP,MAAM,CAACO,gBAAP,GAA0BA,gBAA1B;AASAR,GAAG,CAACS,IAAJ,CAAS,+CAAT","sourcesContent":["import {log, global} from '@luma.gl/core';\n\nexport {COLOR_MODE} from './glsl-to-js-compiler/draw-model';\nexport {default as _DebugContext} from './glsl-to-js-compiler/debug-context';\nexport {\n  compileShaderModule,\n  compileVertexShader,\n  compileFragmentShader\n} from './glsl-to-js-compiler/compile-shader';\n\nexport {makeDebugContext} from './webgl-api-tracing/webgl-debug-context';\n\n// Register the Khronons WebGLDebugger module that lets us instrument WebGLContexts\n// TODO - move the instrumentation code into this module\nimport {makeDebugContext} from './webgl-api-tracing/webgl-debug-context';\nglobal.makeDebugContext = makeDebugContext;\n\n// Install additional parameter definitions on luma.gl classes\n// TODO: This needs a bit more plumbing\n// import {installParameterDefinitions} from './webgl-api-tracing/parameter-definitions';\n// installParameterDefinitions();\n\n// Since debug support has been explicitly installed, no qualms about printing to console\n// TODO - That said: We could import probe.gl from luma.gl\nlog.info('@luma.gl/debug: WebGL debug support installed'); // eslint-disable-line\n"],"file":"index.js"}