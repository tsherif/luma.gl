{"version":3,"sources":["../../../src/modules/pack.js"],"names":["fs","DEFAULT_PROPS","name","vs","getUniforms","props"],"mappings":";;;;;;AAGA,IAAMA,EAAE,6lBAAR;AAoBA,IAAMC,aAAa,GAAG,EAAtB;eAEe;AACbC,EAAAA,IAAI,EAAE,MADO;AAEbF,EAAAA,EAAE,EAAFA,EAFa;AAGbG,EAAAA,EAAE,EAAEH,EAHS;AAIbC,EAAAA,aAAa,EAAbA,aAJa;AAKbG,EAAAA,WAAW,EAAE,qBAAAC,KAAK;AAAA,WAAIA,KAAJ;AAAA;AALL,C","sourcesContent":["// Packing of floats into RGBA8\n/* eslint-disable camelcase */\n\nconst fs = `\\\nconst float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\n\nconst float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\n\nconst float ShiftRight8 = 1. / 256.;\n\nvec4 pack_floatToRGBA8( const in float v ) {\n  vec4 r = vec4( fract( v * PackFactors ), v );\n  r.yzw -= r.xyz * ShiftRight8; // tidy overflow\n  return r * PackUpscale;\n}\n\nfloat pack_RGBA8ToFloat( const in vec4 v ) {\n  return dot(v, UnpackFactors);\n}\n`;\n\nconst DEFAULT_PROPS = {};\n\nexport default {\n  name: 'pack',\n  fs,\n  vs: fs,\n  DEFAULT_PROPS,\n  getUniforms: props => props\n};\n"],"file":"pack.js"}