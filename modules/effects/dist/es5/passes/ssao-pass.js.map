{"version":3,"sources":["../../../src/passes/ssao-pass.js"],"names":["SSAOPass","gl","props","Object","assign","id","swap","ssao","DEFAULT_PROPS","renderToScreen","depthFramebuffer","Framebuffer","clipspace","ClipSpace","modules","fs","setProps","width","height","resize","setUniforms","inputBuffer","outputBuffer","animationProps","framebuffer","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","models","model","depth_uEnabled","draw","drawParams","uniforms","tDepth","tDiffuse","size","Pass"],"mappings":"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","sourcesContent":["/**\n * Screen-space ambient occlusion pass.\n *\n * Ported to luma.gl from THREE.js (MIT license).\n * Attributions (per comments in original THREE.js files):\n * @author alteredq / http://alteredqualia.com/\n * @author tentone\n */\n\n/* eslint-disable camelcase */\nimport {_Pass as Pass, Framebuffer, ClipSpace, withParameters} from '@luma.gl/core';\nimport ssao from '../modules/ssao';\n\nexport default class SSAOPass extends Pass {\n  constructor(gl, props) {\n    super(gl, Object.assign({id: 'ssao-pass', swap: true}, ssao.DEFAULT_PROPS, props));\n\n    this.renderToScreen = false;\n\n    // Depth render target, for `depth` shader module\n    this.depthFramebuffer = new Framebuffer(gl, {id: 'ssao-pass-depth-map'});\n\n    this.clipspace = new ClipSpace(gl, {\n      id: 'ssao-pass',\n      modules: [ssao],\n      fs: `\n        varying vec2 uv;\n        void main() {\n          gl_FragColor = ssao_getColor(uv);\n        }\n      `\n    });\n\n    this.setProps(props);\n  }\n\n  setProps(props) {\n    super.setProps(props);\n\n    const {width = 512, height = 512} = this.props;\n    this.depthFramebuffer.resize({width, height});\n    this.clipspace.setUniforms(this.props);\n\n    // Shader uniforms\n    // this.uniforms['cameraNear' ].value = this.camera2.near;\n    // this.uniforms[ 'cameraFar' ].value = this.camera2.far;\n  }\n\n  _renderPass({inputBuffer, outputBuffer, animationProps}) {\n    const {width, height} = inputBuffer;\n    this.depthFramebuffer.resize({width, height});\n\n    // Render depth into depthRenderTarget\n    withParameters(this.gl, {framebuffer: this.depthFramebuffer}, () => {\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n      for (const model of this.props.models) {\n        model.setUniforms({depth_uEnabled: true});\n        model.draw(Object.assign({}, this.props.drawParams, {animationProps}));\n        model.setUniforms({depth_uEnabled: false});\n      }\n    });\n\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n    this.clipspace.draw({\n      animationProps,\n      uniforms: {\n        tDepth: this.depthFramebuffer,\n        tDiffuse: inputBuffer,\n        size: [this.depthFramebuffer.width, this.depthFramebuffer.height]\n      }\n    });\n  }\n}\n"],"file":"ssao-pass.js"}