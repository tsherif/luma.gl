{"version":3,"sources":["../../../src/passes/convolution-pass.js"],"names":["_Pass","Pass","ClipSpace","convolution","ConvolutionPass","KERNEL","constructor","gl","props","Object","assign","id","swap","kernel","NORMAL","clipspace","modules","fs","setProps","setUniforms","uKernel","uKernelWeight","reduce","sum","x","_renderPass","inputBuffer","outputBuffer","width","height","draw","uniforms","tDiffuse","uTextureSize","parameters","depthWrite","depthTest"],"mappings":"AAGA,SAAQA,KAAK,IAAIC,IAAjB,EAAuBC,SAAvB,QAAuC,eAAvC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,eAAe,MAAMC,eAAN,SAA8BH,IAA9B,CAAmC;AAChD,aAAWI,MAAX,GAAoB;AAClB,WAAOF,WAAW,CAACE,MAAnB;AACD;;AAEDC,EAAAA,WAAW,CAACC,EAAD,EAAiB;AAAA,QAAZC,KAAY,uEAAJ,EAAI;AAC1B,UACED,EADF,EAEEE,MAAM,CAACC,MAAP,CACE;AACEC,MAAAA,EAAE,EAAE,kBADN;AAEEC,MAAAA,IAAI,EAAE,IAFR;AAGEC,MAAAA,MAAM,EAAEV,WAAW,CAACE,MAAZ,CAAmBS;AAH7B,KADF,EAMEN,KANF,CAFF;AAYA,SAAKO,SAAL,GAAiB,IAAIb,SAAJ,CAAcK,EAAd,EAAkB;AACjCI,MAAAA,EAAE,EAAE,kBAD6B;AAEjCK,MAAAA,OAAO,EAAE,CAACb,WAAD,CAFwB;AAGjCc,MAAAA,EAAE;AAH+B,KAAlB,CAAjB;AAYA,SAAKC,QAAL,CAAcV,KAAd;AACD;;AAEDU,EAAAA,QAAQ,CAACV,KAAD,EAAQ;AACdC,IAAAA,MAAM,CAACC,MAAP,CAAc,KAAKF,KAAnB,EAA0BA,KAA1B;AACA,SAAKO,SAAL,CAAeI,WAAf,CAA2B;AACzBC,MAAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWK,MADK;AAEzBQ,MAAAA,aAAa,EAAE,KAAKb,KAAL,CAAWK,MAAX,CAAkBS,MAAlB,CAAyB,CAACC,GAAD,EAAMC,CAAN,KAAYD,GAAG,GAAGC,CAA3C,EAA8C,CAA9C;AAFU,KAA3B;AAID;;AAEDC,EAAAA,WAAW,OAA8B;AAAA,QAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,QAAfC,YAAe,QAAfA,YAAe;AAAA,UAChCC,KADgC,GACfF,WADe,CAChCE,KADgC;AAAA,UACzBC,MADyB,GACfH,WADe,CACzBG,MADyB;AAEvC,SAAKd,SAAL,CAAee,IAAf,CAAoB;AAClBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAEN,WADF;AAERO,QAAAA,YAAY,EAAE,CAACL,KAAD,EAAQC,MAAR;AAFN,OADQ;AAKlBK,MAAAA,UAAU,EAAE;AACVC,QAAAA,UAAU,EAAE,KADF;AAEVC,QAAAA,SAAS,EAAE;AAFD;AALM,KAApB;AAUD;;AArD+C","sourcesContent":["// A convolution render pass\n// Based on https://webglfundamentals.org/webgl/lessons/webgl-image-processing-continued.html\n\nimport {_Pass as Pass, ClipSpace} from '@luma.gl/core';\nimport convolution from '../modules/convolution';\n\nexport default class ConvolutionPass extends Pass {\n  static get KERNEL() {\n    return convolution.KERNEL;\n  }\n\n  constructor(gl, props = {}) {\n    super(\n      gl,\n      Object.assign(\n        {\n          id: 'convolution-pass',\n          swap: true,\n          kernel: convolution.KERNEL.NORMAL\n        },\n        props\n      )\n    );\n\n    this.clipspace = new ClipSpace(gl, {\n      id: 'convolution-pass',\n      modules: [convolution],\n      fs: `\n        uniform sampler2D tDiffuse;\n        varying vec2 uv; // the texCoords passed in from the vertex shader.\n        void main() {\n          gl_FragColor = convolution_getColor(tDiffuse, uv);\n        }\n      `\n    });\n\n    this.setProps(props);\n  }\n\n  setProps(props) {\n    Object.assign(this.props, props);\n    this.clipspace.setUniforms({\n      uKernel: this.props.kernel,\n      uKernelWeight: this.props.kernel.reduce((sum, x) => sum + x, 0)\n    });\n  }\n\n  _renderPass({inputBuffer, outputBuffer}) {\n    const {width, height} = inputBuffer;\n    this.clipspace.draw({\n      uniforms: {\n        tDiffuse: inputBuffer,\n        uTextureSize: [width, height]\n      },\n      parameters: {\n        depthWrite: false,\n        depthTest: false\n      }\n    });\n  }\n}\n"],"file":"convolution-pass.js"}