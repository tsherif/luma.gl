{"version":3,"sources":["../../../src/passes/outline-pass.js"],"names":["_Pass","Pass","withParameters","setParameters","OutlinePass","constructor","gl","props","Object","assign","id","setProps","_renderPass","animationProps","stencilTest","stencilOp","stencilFunc","stencilMask","clear","model","models","setUniforms","normalUniforms","draw","drawParams","depthTest","outlineUniforms"],"mappings":"AAKA,SAAQA,KAAK,IAAIC,IAAjB,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA2D,eAA3D;AAEA,eAAe,MAAMC,WAAN,SAA0BH,IAA1B,CAA+B;AAC5CI,EAAAA,WAAW,CAACC,EAAD,EAAiB;AAAA,QAAZC,KAAY,uEAAJ,EAAI;AAC1B,UAAMD,EAAN,EAAUE,MAAM,CAACC,MAAP,CAAc;AAACC,MAAAA,EAAE,EAAE;AAAL,KAAd,EAA2CH,KAA3C,CAAV;AACA,SAAKI,QAAL,CAAcJ,KAAd;AACD;;AAEDI,EAAAA,QAAQ,CAACJ,KAAD,EAAQ;AACd,SAAKA,KAAL,GAAaC,MAAM,CAACC,MAAP,CAAc,KAAKF,KAAnB,EAA0BA,KAA1B,CAAb;AAED;;AAEDK,EAAAA,WAAW,OAAuB;AAAA,QAArBN,EAAqB,QAArBA,EAAqB;AAAA,QAAjBO,cAAiB,QAAjBA,cAAiB;AAChCX,IAAAA,cAAc,CACZI,EADY,EAEZ;AACEQ,MAAAA,WAAW,EAAE,IADf;AAEEC,MAAAA,SAAS,EAAE;AAFb,KAFY,EAMZ,MAAM;AAEJZ,MAAAA,aAAa,CAACG,EAAD,EAAK;AAChBU,QAAAA,WAAW,EAAE,MAAY,CAAZ,EAAe,IAAf,CADG;AAEhBC,QAAAA,WAAW,EAAE;AAFG,OAAL,CAAb;AAKAX,MAAAA,EAAE,CAACY,KAAH;;AAGA,WAAK,MAAMC,KAAX,IAAoB,KAAKZ,KAAL,CAAWa,MAA/B,EAAuC;AACrCD,QAAAA,KAAK,CAACE,WAAN,CAAkB,KAAKd,KAAL,CAAWe,cAA7B;AACAH,QAAAA,KAAK,CAACI,IAAN,CAAW,KAAKhB,KAAL,CAAWiB,UAAtB;AACD;;AAGDrB,MAAAA,aAAa,CAACG,EAAD,EAAK;AAChBU,QAAAA,WAAW,EAAE,MAAc,CAAd,EAAiB,IAAjB,CADG;AAEhBC,QAAAA,WAAW,EAAE,IAFG;AAGhBQ,QAAAA,SAAS,EAAE;AAHK,OAAL,CAAb;;AAMA,WAAK,MAAMN,KAAX,IAAoB,KAAKZ,KAAL,CAAWa,MAA/B,EAAuC;AACrCD,QAAAA,KAAK,CAACE,WAAN,CAAkB,KAAKd,KAAL,CAAWmB,eAA7B;AACAP,QAAAA,KAAK,CAACI,IAAN,CAAW,KAAKhB,KAAL,CAAWiB,UAAtB;AACAL,QAAAA,KAAK,CAACE,WAAN,CAAkB,KAAKd,KAAL,CAAWe,cAA7B;AACD;AAGF,KAnCW,CAAd;AAqCD;;AAjD2C","sourcesContent":["/**\n * A traditional stencil buffer based outline pass.\n */\n\nimport GL from '@luma.gl/constants';\nimport {_Pass as Pass, withParameters, setParameters} from '@luma.gl/core';\n\nexport default class OutlinePass extends Pass {\n  constructor(gl, props = {}) {\n    super(gl, Object.assign({id: 'simple-outline-pass'}, props));\n    this.setProps(props);\n  }\n\n  setProps(props) {\n    this.props = Object.assign(this.props, props);\n    // this.clipspace.setUniforms(pixelation.getUniforms(this.props));\n  }\n\n  _renderPass({gl, animationProps}) {\n    withParameters(\n      gl,\n      {\n        stencilTest: true, // turn on stencil buffers\n        stencilOp: [GL.KEEP, GL.KEEP, GL.REPLACE] // update stencil if both stencil+depth tests pass\n      },\n      () => {\n        // Enable writing to stencil buffer plane 0\n        setParameters(gl, {\n          stencilFunc: [GL.ALWAYS, 1, 0xff], // update stencil buffer, regardless of current value\n          stencilMask: 0x01\n        });\n\n        gl.clear(GL.STENCIL_BUFFER_BIT);\n\n        // draw\n        for (const model of this.props.models) {\n          model.setUniforms(this.props.normalUniforms);\n          model.draw(this.props.drawParams);\n        }\n\n        // Disable stencil writing, mask to stencil plane 0\n        setParameters(gl, {\n          stencilFunc: [GL.NOTEQUAL, 1, 0x01],\n          stencilMask: 0x00, // disable writing to the stencil buffer\n          depthTest: false\n        });\n\n        for (const model of this.props.models) {\n          model.setUniforms(this.props.outlineUniforms);\n          model.draw(this.props.drawParams);\n          model.setUniforms(this.props.normalUniforms);\n        }\n\n        // All GL settings will reset here...\n      }\n    );\n  }\n}\n"],"file":"outline-pass.js"}