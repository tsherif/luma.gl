{"version":3,"sources":["../../../src/passes/ssao-pass.js"],"names":["_Pass","Pass","Framebuffer","ClipSpace","withParameters","ssao","SSAOPass","constructor","gl","props","Object","assign","id","swap","DEFAULT_PROPS","renderToScreen","depthFramebuffer","clipspace","modules","fs","setProps","width","height","resize","setUniforms","_renderPass","inputBuffer","outputBuffer","animationProps","framebuffer","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","model","models","depth_uEnabled","draw","drawParams","uniforms","tDepth","tDiffuse","size"],"mappings":"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","sourcesContent":["/**\n * Screen-space ambient occlusion pass.\n *\n * Ported to luma.gl from THREE.js (MIT license).\n * Attributions (per comments in original THREE.js files):\n * @author alteredq / http://alteredqualia.com/\n * @author tentone\n */\n\n/* eslint-disable camelcase */\nimport {_Pass as Pass, Framebuffer, ClipSpace, withParameters} from '@luma.gl/core';\nimport ssao from '../modules/ssao';\n\nexport default class SSAOPass extends Pass {\n  constructor(gl, props) {\n    super(gl, Object.assign({id: 'ssao-pass', swap: true}, ssao.DEFAULT_PROPS, props));\n\n    this.renderToScreen = false;\n\n    // Depth render target, for `depth` shader module\n    this.depthFramebuffer = new Framebuffer(gl, {id: 'ssao-pass-depth-map'});\n\n    this.clipspace = new ClipSpace(gl, {\n      id: 'ssao-pass',\n      modules: [ssao],\n      fs: `\n        varying vec2 uv;\n        void main() {\n          gl_FragColor = ssao_getColor(uv);\n        }\n      `\n    });\n\n    this.setProps(props);\n  }\n\n  setProps(props) {\n    super.setProps(props);\n\n    const {width = 512, height = 512} = this.props;\n    this.depthFramebuffer.resize({width, height});\n    this.clipspace.setUniforms(this.props);\n\n    // Shader uniforms\n    // this.uniforms['cameraNear' ].value = this.camera2.near;\n    // this.uniforms[ 'cameraFar' ].value = this.camera2.far;\n  }\n\n  _renderPass({inputBuffer, outputBuffer, animationProps}) {\n    const {width, height} = inputBuffer;\n    this.depthFramebuffer.resize({width, height});\n\n    // Render depth into depthRenderTarget\n    withParameters(this.gl, {framebuffer: this.depthFramebuffer}, () => {\n      this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n      for (const model of this.props.models) {\n        model.setUniforms({depth_uEnabled: true});\n        model.draw(Object.assign({}, this.props.drawParams, {animationProps}));\n        model.setUniforms({depth_uEnabled: false});\n      }\n    });\n\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n    this.clipspace.draw({\n      animationProps,\n      uniforms: {\n        tDepth: this.depthFramebuffer,\n        tDiffuse: inputBuffer,\n        size: [this.depthFramebuffer.width, this.depthFramebuffer.height]\n      }\n    });\n  }\n}\n"],"file":"ssao-pass.js"}