{"expireTime":9007200809748943000,"key":"transformer-remark-markdown-html-e78363a67fa965bc7bfce0164e2a41dd-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-autolink-headers-","val":"<h1 id=\"module-structure\"><a href=\"#module-structure\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Module Structure</h1>\n<p>luma.gl contains a lot of classes and functions that might make new users wonder where to get started. luma.gl therefore organize classes and functions into groups, as shown in the following table and also in the folder structure of the source code</p>\n<table>\n<thead>\n<tr>\n<th>Module</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src/webgl</td>\n<td>A set of classes covering all <strong>WebGL objects</strong>. Currently luma.gl supports WebGL 2.0. These classes organize the WebGL2 API and makes it easy to work with in JavaScript.</td>\n</tr>\n<tr>\n<td>src/core</td>\n<td>A set of common classes across all 3D graphics applications. They are on a higher abstraction level than the WebGL API. luma.gl's signature <a href=\"/docs/api-reference/core/model.md\"><code class=\"language-text\">Model</code></a> class is in this folder.</td>\n</tr>\n<tr>\n<td>src/geometry</td>\n<td>This folder contains a collection of geometric primitives extending from the base <code class=\"language-text\">Geometry</code> class, including <code class=\"language-text\">ConeGeometry</code>, <code class=\"language-text\">CubeGeometry</code>, <code class=\"language-text\">IcoSphereGeometry</code>, <code class=\"language-text\">PlaneGeometry</code>, <code class=\"language-text\">SphereGeometry</code>, <code class=\"language-text\">SphereGeometry</code>. They can be used to create <a href=\"/docs/api-reference/core/model.md\"><code class=\"language-text\">Models</code></a> class with common geometries</td>\n</tr>\n<tr>\n<td>src/models</td>\n<td>Some predefined subclasses of <a href=\"/docs/api-reference/core/model.md\"><code class=\"language-text\">Models</code></a> created from simple geometries from the <code class=\"language-text\">src/geometry</code> folder</td>\n</tr>\n<tr>\n<td>src/io</td>\n<td>Node.js and browser file loaders. Also enables using streams in browser.</td>\n</tr>\n<tr>\n<td>src/packages/events</td>\n<td>A very simple browser event handling class used by luma.gl examples</td>\n</tr>\n<tr>\n<td>src/shadertools</td>\n<td>luma.gl's internal shader module system and shader assembler utility</td>\n</tr>\n<tr>\n<td>src/webgl-utils</td>\n<td>Miscellaneous utilies</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"webgl-classes\"><a href=\"#webgl-classes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WebGL Classes</h2>\n<p>The heart of luma.gl is the <code class=\"language-text\">webgl</code> module, a set of JavaScript class wrappers covering all WebGL objects. From luma.gl v4,\nAfter creating a context, perhaps with luma.gl's <a href=\"/docs/api-reference/webgl/context/context.md\"><code class=\"language-text\">createGLContext</code></a> function, you have can start instantiating luma.gl's WebGL2 classes: <a href=\"/docs/api-reference/webgl/buffer.md\"><code class=\"language-text\">Buffer</code></a>, <a href=\"/docs/api-reference/webgl/framebuffer.md\"><code class=\"language-text\">FrameBuffer</code></a>, <a href=\"/docs/api-reference/webgl/renderbuffer.md\"><code class=\"language-text\">RenderBuffer</code></a>, <a href=\"/docs/api-reference/webgl/program.md\"><code class=\"language-text\">Program</code></a>, <a href=\"/docs/api-reference/webgl/shader.md\"><code class=\"language-text\">Shader</code></a>, <a href=\"/docs/api-reference/webgl/texture-2d.md\"><code class=\"language-text\">Texture2D</code></a>, <a href=\"/docs/api-reference/webgl/texture-2d-array.md\"><code class=\"language-text\">Texture2DArray</code></a>, <a href=\"/docs/api-reference/webgl/texture-3d.md\"><code class=\"language-text\">Texture3D</code></a>, <a href=\"/docs/api-reference/webgl/texture-cube.md\"><code class=\"language-text\">TextureCube</code></a>, <a href=\"/docs/api-reference/webgl/query.md\"><code class=\"language-text\">Query</code></a>, <a href=\"/docs/api-reference/webgl/sampler.md\"><code class=\"language-text\">Sampler</code></a>, <a href=\"/docs/api-reference/webgl/transform-feedback.md\"><code class=\"language-text\">TransformFeedback</code></a>, <a href=\"/docs/api-reference/webgl/vertex-array.md\"><code class=\"language-text\">VertexArrayObject</code></a></p>\n<h2 id=\"core-classes\"><a href=\"#core-classes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Core Classes</h2>\n<p>The <code class=\"language-text\">core</code> classes, with the signature <a href=\"/docs/api-reference/core/model.md\"><code class=\"language-text\">Model</code></a> class, represents a set of objects that is common in most 3D rendering libraries or engines. These objects are at higher abstraction levels than the actual WebGL objects and that can serve as the basic building blocks for most 3D applications.</p>\n<ul>\n<li><a href=\"/docs/api-reference/core/model.md\"><code class=\"language-text\">Model</code></a> - A renderable object with program, attributes, uniforms and other state required for rendering 3D objects on the screen</li>\n<li><a href=\"/docs/api-reference/core/geometry.md\"><code class=\"language-text\">Geometry</code></a> - Holds attributes and drawType for a primitive geometric object</li>\n<li><a href=\"/docs/api-reference/core/animation-loop.md\"><code class=\"language-text\">AnimationLoop</code></a> - A simple animation loop that connects with browser's animation mechanism</li>\n</ul>\n<!---\n* [`Object3D`](api-reference/core/object3d) - Base class, golds position, rotation, scale (TBD)\n* [`Group`](api-reference/core/group) - Supports recursive travesal and matrix transformation\n-->\n<h2 id=\"basic-geometries-and-models\"><a href=\"#basic-geometries-and-models\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Geometries and Models</h2>\n<p>A <code class=\"language-text\">Geometry</code> object holds a set of attributes (native JavaScript arrays) (vertices, normals, texCoords, indices) and a <code class=\"language-text\">drawMode</code> prop to indicate how to interpret those vertices and normals as actual geometries.</p>\n<p>There are several basic geometry classes predefined in luma.gl: <code class=\"language-text\">Geometry</code>, <code class=\"language-text\">ConeGeometry</code>, <code class=\"language-text\">CubeGeometry</code>, <code class=\"language-text\">IcoSphereGeometry</code>, <code class=\"language-text\">PlaneGeometry</code>, <code class=\"language-text\">SphereGeometry</code>, <code class=\"language-text\">SphereGeometry</code>. They are all subclasses of the <code class=\"language-text\">Geometry</code> class.</p>\n<p>Corresponding to those geometry objects, luma.gl also provides commonly used <a href=\"/docs/api-reference/core/model.md\"><code class=\"language-text\">Model</code></a> classes that consist of basic geometries. These include <a href=\"/docs/api-reference/core/model.md\"><code class=\"language-text\">Cone</code></a>, <a href=\"/docs/api-reference/models/cube.md\"><code class=\"language-text\">Cube</code></a>, <a href=\"/docs/api-reference/models/cylinder.md\"><code class=\"language-text\">Cylinder</code></a>, <a href=\"/docs/api-reference/models/ico-sphere.md\"><code class=\"language-text\">IcoSphere</code></a>, <a href=\"/docs/api-reference/models/plane.md\"><code class=\"language-text\">Plane</code></a> and <a href=\"/docs/api-reference/models/sphere.md\"><code class=\"language-text\">Sphere</code></a>, etc...</p>\n<p>Users are encouraged to write their own geometries and models and luma.gl could include them in its future releases.</p>"}