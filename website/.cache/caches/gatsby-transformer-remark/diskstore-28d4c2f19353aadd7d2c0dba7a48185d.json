{"expireTime":9007200809748933000,"key":"transformer-remark-markdown-ast-caf5340b46946e795391aa91fcbee8c4-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-autolink-headers-","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"link","url":"#using-shader-modules","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Using Shader Modules","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":23,"offset":22},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":23,"offset":22},"indent":[]},"data":{"id":"using-shader-modules","htmlAttributes":{"id":"using-shader-modules"},"hProperties":{"id":"using-shader-modules"}}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#usage","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Usage","position":{"start":{"line":3,"column":4,"offset":27},"end":{"line":3,"column":9,"offset":32},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":24},"end":{"line":3,"column":9,"offset":32},"indent":[]},"data":{"id":"usage","htmlAttributes":{"id":"usage"},"hProperties":{"id":"usage"}}},{"type":"paragraph","children":[{"type":"text","value":"To add/inject existing modules into your shaders, just add the modules parameter to your ","position":{"start":{"line":5,"column":1,"offset":34},"end":{"line":5,"column":90,"offset":123},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">assembleShaders</code>","position":{"start":{"line":5,"column":90,"offset":123},"end":{"line":5,"column":107,"offset":140},"indent":[]}},{"type":"text","value":" call:","position":{"start":{"line":5,"column":107,"offset":140},"end":{"line":5,"column":113,"offset":146},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":34},"end":{"line":5,"column":113,"offset":146},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>shaderModule<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'library-of-shader-modules'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>vs<span class=\"token punctuation\">,</span> fs<span class=\"token punctuation\">,</span> getUniforms<span class=\"token punctuation\">,</span> moduleMap<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">assembleShaders</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  fs<span class=\"token punctuation\">:</span> <span class=\"token string\">'...'</span><span class=\"token punctuation\">,</span>\n  vs<span class=\"token punctuation\">:</span> <span class=\"token string\">'...'</span><span class=\"token punctuation\">,</span>\n  modules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>shaderModule<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":7,"column":1,"offset":148},"end":{"line":15,"column":4,"offset":338},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To configure the shader module uniforms:","position":{"start":{"line":17,"column":1,"offset":340},"end":{"line":17,"column":41,"offset":380},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":340},"end":{"line":17,"column":41,"offset":380},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const {vs, fs, getUniforms, ...} = assembleShaders(gl, {..., modules: [...]});\n\n// create a program with the returned shaders using your preferred WebGL library\n\nconst uniforms = getUniforms(props);\n\n// set returned uniforms on the program using your preferred WebGL library</code></pre></div>","position":{"start":{"line":19,"column":1,"offset":382},"end":{"line":28,"column":4,"offset":665},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#glsl-versions-and-shader-module-transpilation","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"GLSL Versions and Shader Module Transpilation","position":{"start":{"line":31,"column":4,"offset":671},"end":{"line":31,"column":49,"offset":716},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":668},"end":{"line":31,"column":49,"offset":716},"indent":[]},"data":{"id":"glsl-versions-and-shader-module-transpilation","htmlAttributes":{"id":"glsl-versions-and-shader-module-transpilation"},"hProperties":{"id":"glsl-versions-and-shader-module-transpilation"}}},{"type":"paragraph","children":[{"type":"text","value":"Shader Modules are automatically converted (\"transpiled\") to the version of the shader you are importing them into.","position":{"start":{"line":33,"column":1,"offset":718},"end":{"line":33,"column":116,"offset":833},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":718},"end":{"line":33,"column":116,"offset":833},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#shader-code-injection","title":null,"data":{"hProperties":{"aria-hidden":true,"class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Shader Code Injection","position":{"start":{"line":36,"column":4,"offset":839},"end":{"line":36,"column":25,"offset":860},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":836},"end":{"line":36,"column":25,"offset":860},"indent":[]},"data":{"id":"shader-code-injection","htmlAttributes":{"id":"shader-code-injection"},"hProperties":{"id":"shader-code-injection"}}},{"type":"paragraph","children":[{"type":"text","value":"By using the ","position":{"start":{"line":38,"column":1,"offset":862},"end":{"line":38,"column":14,"offset":875},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">inject</code>","position":{"start":{"line":38,"column":14,"offset":875},"end":{"line":38,"column":22,"offset":883},"indent":[]}},{"type":"text","value":" parameter, code can be injected into existing shaders.","position":{"start":{"line":38,"column":22,"offset":883},"end":{"line":38,"column":77,"offset":938},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":862},"end":{"line":38,"column":77,"offset":938},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":39,"column":1,"offset":939}}}}