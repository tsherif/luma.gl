{"expireTime":9007200809748944000,"key":"transformer-remark-markdown-html-374627c9fd4ad53297c1790a73ed1078-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-autolink-headers-","val":"<h1 id=\"accessor-experimental\"><a href=\"#accessor-experimental\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Accessor (Experimental)</h1>\n<p>The <code class=\"language-text\">Accessor</code> class is a helper class that describes how a buffers memory is structured and should be accessed. Accessors are used.</p>\n<p>The type of values, number of values per element, any offset and strides, etc. as well as some additional parameters relating to how the GPU should access buffer data (instance divisors, integer normalization etc).</p>\n<p>By using multiple <code class=\"language-text\">Accessor</code> instances, the application can defined different \"views\" of the data in a single buffer.</p>\n<p>Accessors are immutable by design. Once they have been created they cannot be changed.</p>\n<p>Accessors can be resolved (merged) into a new Accessor. This is useful since while some accessor properties can be extracted directly from a program's shaders (and some can be extracted when data is set to the buffer), some properties needs to be set by the application.</p>\n<h2 id=\"properties\"><a href=\"#properties\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Properties</h2>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Category</th>\n<th>Auto Deduce</th>\n<th>Default</th>\n<th>Comment</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">offset</code></td>\n<td>data layout</td>\n<td>N/A</td>\n<td><code class=\"language-text\">0</code></td>\n<td>Byte offset to start of data in buffer</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">stride</code></td>\n<td>data layout</td>\n<td>N/A</td>\n<td><code class=\"language-text\">0</code></td>\n<td>Extra bytes between each successive data element</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">type</code></td>\n<td>data type</td>\n<td>Vertex Shader/<code class=\"language-text\">Buffer.setData</code></td>\n<td><code class=\"language-text\">GL.FLOAT</code></td>\n<td>Low level data type (<code class=\"language-text\">GL.BYTE</code>, <code class=\"language-text\">GL.SHORT</code>, ...)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">size</code></td>\n<td>data type</td>\n<td>Vertex Shader</td>\n<td><code class=\"language-text\">1</code></td>\n<td>Components per element (<code class=\"language-text\">1</code>-<code class=\"language-text\">4</code>)</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">divisor</code></td>\n<td>instancing</td>\n<td>Attribute name</td>\n<td><code class=\"language-text\">0</code></td>\n<td>Enables/disables instancing</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">normalize</code></td>\n<td>data access</td>\n<td>N/A</td>\n<td><code class=\"language-text\">false</code></td>\n<td>Normalize integers to [-1,1], or [0,1] if unsigned</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">integer</code></td>\n<td>data access</td>\n<td>N/A</td>\n<td><code class=\"language-text\">false</code></td>\n<td>Disable conversion of integer values to floats <strong>WebGL2</strong></td>\n</tr>\n</tbody>\n</table>\n<p>Notes:</p>\n<ul>\n<li><code class=\"language-text\">type</code> and <code class=\"language-text\">size</code> values for attributes are read from the shaders when a program is created and linked, and normally do not need to be supplied. Also any attribute with <code class=\"language-text\">instance</code> in its name will automatically be given an instance divisor of <code class=\"language-text\">1</code>.</li>\n<li><code class=\"language-text\">divisor</code> is automatically set to <code class=\"language-text\">1</code> for any attribute that has some capitalization of <code class=\"language-text\">instance</code> in the name.</li>\n<li><code class=\"language-text\">offset</code> and <code class=\"language-text\">stride</code> are typically used to interleave data in buffers and are normally left undefined (i.e. <code class=\"language-text\">0</code>).</li>\n<li><code class=\"language-text\">normalize</code> and <code class=\"language-text\">integer</code> need to be enabled by applications through an <code class=\"language-text\">Accessor</code>.</li>\n</ul>\n<h3 id=\"code-classlanguage-textoffsetcode\"><a href=\"#code-classlanguage-textoffsetcode\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">offset</code></h3>\n<p>Byte offset to start of data in buffer</p>\n<h3 id=\"code-classlanguage-textstridecode\"><a href=\"#code-classlanguage-textstridecode\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">stride</code></h3>\n<h3 id=\"code-classlanguage-texttypecode\"><a href=\"#code-classlanguage-texttypecode\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">type</code></h3>\n<p>Low level data type (GL.BYTE, GL.SHORT, GL.FLOAT, GL.INT, ...)</p>\n<h3 id=\"code-classlanguage-textsizecode\"><a href=\"#code-classlanguage-textsizecode\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">size</code></h3>\n<p>Number of (1-4 values per vertex)</p>\n<h3 id=\"code-classlanguage-textdivisorcode-number\"><a href=\"#code-classlanguage-textdivisorcode-number\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">divisor</code>: Number</h3>\n<p>Enables/disables instancing.</p>\n<h3 id=\"code-classlanguage-textnormalizecode\"><a href=\"#code-classlanguage-textnormalizecode\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">normalize</code></h3>\n<p>If <code class=\"language-text\">true</code> normalizes integer values (<code class=\"language-text\">GL.BYTE</code>, ...). Signed values are normalized to [-1,1] and unsigned values are normalized to [0,1].</p>\n<h3 id=\"code-classlanguage-textintegercode-webgl2\"><a href=\"#code-classlanguage-textintegercode-webgl2\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">integer</code> <strong>WebGL2</strong></h3>\n<p>Disable conversion of integer values to floats.</p>\n<h2 id=\"static-methods\"><a href=\"#static-methods\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Static Methods</h2>\n<h3 id=\"accessormergeaccessor1-accessor2---accessor\"><a href=\"#accessormergeaccessor1-accessor2---accessor\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Accessor.merge(accessor1, accessor2, ...) : Accessor</h3>\n<p>Merges a number of partial accessors into a merged accessor that can be used to set vertex attributes. Any unspecified accessor properties will be set to their default values.</p>\n<p>Note: Most applications do not need to merge accessors directly. Merging is done by the <code class=\"language-text\">VertexArray.setAttributes</code> method.</p>\n<h2 id=\"methods\"><a href=\"#methods\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods</h2>\n<h3 id=\"constructorprops--object\"><a href=\"#constructorprops--object\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor(props : Object)</h3>\n<p>Creates a new partial <code class=\"language-text\">Accessor</code>. The new object will be immutable, i.e. its values cannot be changed after creation.</p>\n<h3 id=\"code-classlanguage-textbytes_per_elementcode--number\"><a href=\"#code-classlanguage-textbytes_per_elementcode--number\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">BYTES_PER_ELEMENT</code> : Number</h3>\n<p>Returns the number of bytes per \"element\", based on the <code class=\"language-text\">type</code> field in the accessor. Asserts if type is not set.</p>\n<h3 id=\"code-classlanguage-textbytes_per_vertexcode--number\"><a href=\"#code-classlanguage-textbytes_per_vertexcode--number\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">BYTES_PER_VERTEX</code> : Number</h3>\n<p>Returns the number of bytes per \"vertex\", based on the <code class=\"language-text\">type</code> and <code class=\"language-text\">size</code> fields in the accessor. Asserts if <code class=\"language-text\">type</code> and <code class=\"language-text\">size</code> are not set.</p>\n<h2 id=\"remarks-auto-deduction\"><a href=\"#remarks-auto-deduction\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remarks: Auto-deduction</h2>\n<ul>\n<li><code class=\"language-text\">type</code> and <code class=\"language-text\">size</code> are automatically inferred (through WebGL APIs that provide access to metadata extracted during compilation and linking of shader programs).</li>\n<li><code class=\"language-text\">divisor</code> - if attribute name starts with <code class=\"language-text\">instance...</code> this will be automatically set to <code class=\"language-text\">1</code>.</li>\n<li><code class=\"language-text\">offset</code> and <code class=\"language-text\">stride</code> are assumed to be 0 which corresponds to the simple non-interleaved case.</li>\n<li><code class=\"language-text\">integer</code> - if type is <code class=\"language-text\">GL.INT</code> or <code class=\"language-text\">GL.UINT</code>, then integer is automatically true, as floating point shader inputs cannot be mapped to such attributes.</li>\n</ul>"}