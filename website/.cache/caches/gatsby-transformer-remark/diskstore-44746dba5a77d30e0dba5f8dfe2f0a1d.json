{"expireTime":9007200809748944000,"key":"transformer-remark-markdown-html-42f7ba27e75b2336746231c998c20e60-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-autolink-headers-","val":"<h1 id=\"vertexarrayobject\"><a href=\"#vertexarrayobject\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VertexArrayObject</h1>\n<p>The WebGL <code class=\"language-text\">VertexArrayObject</code> object holds a map of \"buffers\" that will be made available as input data to shaders during a draw call, similar to how a <code class=\"language-text\">TransformFeedback</code> object holds a set of <code class=\"language-text\">Buffer</code> instances that will receive output data from shaders.For <code class=\"language-text\">Buffer</code> objects, the <code class=\"language-text\">VertexArrayObject</code> also stores some additional information about how that data in the buffer should be accessed, such as offsets, strides, etc.</p>\n<p>However, the use of <code class=\"language-text\">VertexArrayObject</code> is problematic in WebGL1. While it is crucial for the operation of a program, its presence under WebGL1 is dependent on an <a href=\"https://webglstats.com/webgl/extension/OES_vertex_array_object\">extension</a> that is fairly common, but not universally available. In particular it is not available in headless gl which is essential for running tests under Node.js.</p>\n<p>Therefore, in basic WebGL environments where the <code class=\"language-text\">VertexArrayObject</code> is not supported, luma.gl ensures that one (\"fake\") instance of the <code class=\"language-text\">VertexArrayObject</code> class can still be obtained, emulating the default (<code class=\"language-text\">null</code> handle) <code class=\"language-text\">VertexArrayObject</code>. This instance has the <code class=\"language-text\">isDefaultArray</code> flag set, and applications can adapt their behavior accordingly, while still using the same API to manage vertex attributes, albeit with a small performance loss. Since there is a considerable amount of work required to handle both cases, luma.gl also provides a higher level <code class=\"language-text\">VertexArray</code> class that works around these issues and provided additional conveniences.</p>\n<blockquote>\n<p>It is usually not necessary to create neither <code class=\"language-text\">VertexArrayObject</code> nor <code class=\"language-text\">VertexArray</code> instances in luma.gl applications. It is often simpler to just provides attributes directly to the <a href=\"/docs/api-reference/core/model.md\"><code class=\"language-text\">Model</code></a> class. Still, it can be useful to review this documentation to understand how attributes are handled by WebGL.</p>\n</blockquote>\n<p>For more information on WebGL <code class=\"language-text\">VertexArrayObject</code>s, see the <a href=\"https://www.khronos.org/opengl/wiki/Vertex_Specification#Vertex_Array_Object\">OpenGL Wiki</a>.</p>\n<h2 id=\"usage\"><a href=\"#usage\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<p>Import the <code class=\"language-text\">VertexArrayObject</code> class so that your app can use it:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>VertexArrayObject<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@luma.gl/core'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Getting the global <code class=\"language-text\">VertexArrayObject</code> for a WebGL context</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> vertexArray <span class=\"token operator\">=</span> VertexArray<span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultArray</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Create a new VertexArray</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> vao <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexArray</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Adding attributes to a VertexArray</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> vertexArray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexArray</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvertexArray<span class=\"token punctuation\">.</span><span class=\"token function\">setBuffer</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Deleting a VertexArray</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">vertexArrayObject<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Setting a constant vertex attribute</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>VertexArray<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@luma.gl/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> vao <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexArray</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvao<span class=\"token punctuation\">.</span><span class=\"token function\">setConstant</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"methods\"><a href=\"#methods\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods</h2>\n<p><code class=\"language-text\">VertexArrayObject</code> inherits from <code class=\"language-text\">Resource</code>.</p>\n<h3 id=\"vertexarraygl--webglrenderingcontext-props--object\"><a href=\"#vertexarraygl--webglrenderingcontext-props--object\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VertexArray(gl : WebGLRenderingContext, props : Object)</h3>\n<p>Creates a new VertexArray</p>\n<ul>\n<li><code class=\"language-text\">props</code> (Object) - passed through to <code class=\"language-text\">Resource</code> superclass constructor and to <code class=\"language-text\">initialize</code></li>\n</ul>\n<h3 id=\"vertexarraygetdefaultarray--vertexarray\"><a href=\"#vertexarraygetdefaultarray--vertexarray\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VertexArray.getDefaultArray() : VertexArray</h3>\n<p>Returns the \"global\" <code class=\"language-text\">VertexArrayObject</code>.</p>\n<p>Note: The global <code class=\"language-text\">VertexArrayObject</code> object is always available. Binds the <code class=\"language-text\">null</code> VertexArrayObject.</p>\n<h3 id=\"initializeprops--object--vertexarray\"><a href=\"#initializeprops--object--vertexarray\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>initialize(props : Object) : VertexArray</h3>\n<p>Reinitializes a <code class=\"language-text\">VertexArrayObject</code>.</p>\n<ul>\n<li><code class=\"language-text\">attributes</code>=<code class=\"language-text\">{}</code> (<code class=\"language-text\">Object</code>) - map of attributes, can be keyed by index or names, can be constants (small arrays), <code class=\"language-text\">Buffer</code>, arrays or typed arrays of numbers, or attribute descriptors.</li>\n<li><code class=\"language-text\">elements</code>=<code class=\"language-text\">null</code> (<code class=\"language-text\">Buffer</code>) - optional buffer representing elements array (i.e. indices)</li>\n<li><code class=\"language-text\">program</code> - Transfers information on vertex attribute locations and types to this vertex array.</li>\n</ul>\n<h3 id=\"setconstantvalues--array--vertexarray\"><a href=\"#setconstantvalues--array--vertexarray\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>setConstant(values : Array) : VertexArray</h3>\n<p>Sets a constant value for a vertex attribute. When this <code class=\"language-text\">VertexArrayObject</code> is used in a <code class=\"language-text\">Program.draw()</code> call, all Vertex Shader invocations will get the same value.</p>\n<p><code class=\"language-text\">VertexArray.setConstant(location, array);</code></p>\n<ul>\n<li><code class=\"language-text\">gl</code> (<code class=\"language-text\">WebGLRenderingContext</code>) - gl context</li>\n<li><code class=\"language-text\">location</code> (<em>GLuint</em>) - index of the attribute</li>\n</ul>\n<p>WebGL APIs:\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib\">vertexAttrib4[u]{f,i}v</a></p>\n<h3 id=\"setbuffernameorlocation-buffer--buffer--accessor--object--vertexarray\"><a href=\"#setbuffernameorlocation-buffer--buffer--accessor--object--vertexarray\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>setBuffer(nameOrLocation, buffer : Buffer [, accessor : Object]) : VertexArray</h3>\n<p>Binds the specified attribute in this vertex array to the supplied buffer</p>\n<ul>\n<li>Set a location in vertex attributes array to a buffer, specifying</li>\n<li>its data layout and integer to float conversion and normalization flags</li>\n</ul>\n<p><code class=\"language-text\">setBuffer(location, buffer);</code>\n<code class=\"language-text\">setBuffer(location, buffer, {offset = 0, stride = 0, normalized = false, integer = false});</code></p>\n<ul>\n<li><code class=\"language-text\">location</code> (<em>GLuint</em> | <em>String</em>) - index/ordinal number of the attribute</li>\n<li><code class=\"language-text\">buffer</code> (<em>WebGLBuffer</em>|<em>Buffer</em>) - WebGL buffer to set as value</li>\n</ul>\n<p><a href=\"\">gl.vertexAttrib{I}Pointer</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/vertexAttribDivisor\">gl.vertexAttribDivisor</a></p>\n<h3 id=\"getparameterpname-location--\"><a href=\"#getparameterpname-location--\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getParameter(pname, location) : *</h3>\n<p>Queries a vertex attribute location.</p>\n<ul>\n<li><code class=\"language-text\">pname</code> (GLenum) - Which parameter to query. See table of parameter constants below for values.</li>\n<li><strong>location</strong> (<em>Number</em>) - index of attributes</li>\n</ul>\n<p>Note that in WebGL queries are generally slow and should be avoided in performance critical code sections.</p>\n<h2 id=\"types-constants-enumarations\"><a href=\"#types-constants-enumarations\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Types, Constants, Enumarations</h2>\n<h3 id=\"getparameter-constants\"><a href=\"#getparameter-constants\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getParameter Constants</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">GL.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING</code></td>\n<td><code class=\"language-text\">WebGLBuffer</code> (not <code class=\"language-text\">Buffer</code>)</td>\n<td>Get currently bound buffer</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">GL.VERTEX_ATTRIB_ARRAY_ENABLED</code></td>\n<td><code class=\"language-text\">GLboolean</code></td>\n<td>true if the vertex attribute at this index is enabled</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">GL.VERTEX_ATTRIB_ARRAY_SIZE</code></td>\n<td><code class=\"language-text\">GLint</code></td>\n<td>indicating the size of an element of the vertex array.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">GL.VERTEX_ATTRIB_ARRAY_STRIDE</code></td>\n<td><code class=\"language-text\">GLint</code></td>\n<td>indicating the number of bytes between successive elements in</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">GL.VERTEX_ATTRIB_ARRAY_TYPE</code></td>\n<td><code class=\"language-text\">GLenum</code></td>\n<td>The array type. One of</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">GL.BYTE</code>, <code class=\"language-text\">GL.UNSIGNED_BYTE</code>, <code class=\"language-text\">GL.SHORT</code>, <code class=\"language-text\">GL.UNSIGNED_SHORT</code>, <code class=\"language-text\">GL.FIXED</code>, <code class=\"language-text\">GL.FLOAT</code>.</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">GL.VERTEX_ATTRIB_ARRAY_NORMALIZED</code></td>\n<td><code class=\"language-text\">GLboolean</code></td>\n<td>true if fixed-point data types are normalized for the vertex attribute array at the given index.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">GL.CURRENT_VERTEX_ATTRIB</code></td>\n<td><code class=\"language-text\">Float32Array(4)</code></td>\n<td>The current value of the vertex attribute at the given index.</td>\n</tr>\n</tbody>\n</table>\n<p>When using a WebGL 2 context, the following values are available additionally:\n| <code class=\"language-text\">GL.VERTEX_ATTRIB_ARRAY_INTEGER</code>    | <code class=\"language-text\">GLboolean</code>  | true if an integer data type is in the vertex attribute array at the given index. |\n| <code class=\"language-text\">GL.VERTEX_ATTRIB_ARRAY_DIVISOR</code>    | <code class=\"language-text\">GLint</code>      | The frequency divisor used for instanced rendering. |</p>\n<h2 id=\"attribute-accessors\"><a href=\"#attribute-accessors\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Attribute Accessors</h2>\n<p>When setting <code class=\"language-text\">Buffer</code> attributes, additional data can be provided to specify how the buffer should be accessed. This data can be stored directly on the <code class=\"language-text\">Buffer</code> accessor or supplied to <code class=\"language-text\">.setBuffer</code>.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">target</code>=<code class=\"language-text\">buffer.target</code> (<em>GLuint</em>, ) - which target to bind to</p>\n</li>\n<li>\n<p><code class=\"language-text\">size</code> (<em>GLuint</em>)  - number of values (components) per element (1-4)</p>\n</li>\n<li>\n<p><code class=\"language-text\">type</code> (<em>GLuint</em>)  - type of values (e.g. gl.FLOAT)</p>\n</li>\n<li>\n<p><code class=\"language-text\">normalized</code> (<em>boolean</em>, false) - normalize integers to [-1,1] or [0,1]</p>\n</li>\n<li>\n<p><code class=\"language-text\">integer</code> (<em>boolean</em>, false) - <code class=\"language-text\">WebGL2</code> disable int-to-float conversion</p>\n</li>\n<li>\n<p><code class=\"language-text\">stride</code> (<em>GLuint</em>, 0) - supports strided arrays</p>\n</li>\n<li>\n<p><code class=\"language-text\">offset</code> (<em>GLuint</em>, 0) - supports strided arrays</p>\n</li>\n<li>\n<p><code class=\"language-text\">layout.normalized</code>=<code class=\"language-text\">false</code> (GLbool) - normalize integers to [-1,1], [0,1]</p>\n</li>\n<li>\n<p><code class=\"language-text\">layout.integer</code>=<code class=\"language-text\">false</code> (GLuint) - WebGL2 only, disable int-to-float conv.</p>\n</li>\n<li>\n<p><code class=\"language-text\">divisor</code> - Sets the frequency divisor used for instanced rendering (instances that pass between updates of attribute). Usually simply set to 1 or 0 to enable/disable instanced rendering. 0 disables instancing, >=1 enables it.</p>\n</li>\n</ul>\n<p>Notes:</p>\n<ul>\n<li>The application can enable normalization by setting the <code class=\"language-text\">normalized</code> flag to <code class=\"language-text\">true</code> in the <code class=\"language-text\">setBuffer</code> call.</li>\n<li><strong>WebGL2</strong> The application can disable integer to float conversion when running under WebGL2, by setting the <code class=\"language-text\">integer</code> flag to <code class=\"language-text\">true</code>.</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/vertexAttribIPointer\"><code class=\"language-text\">glVertexAttribIPointer</code></a> specifies <em>integer</em> data formats and locations of vertex attributes. Values are always left as integer values. Only accepts the integer types gl.BYTE, gl.UNSIGNED<em>BYTE, gl.SHORT, gl.UNSIGNED</em>SHORT, gl.INT, gl.UNSIGNED_INT</li>\n</ul>\n<p>Notes about Instanced Rendering</p>\n<ul>\n<li>About setting <code class=\"language-text\">divisor</code> in attributes: Instanced attributes requires WebGL2 or a (widely supported) WebGL1 extension. Apps can use the luma.gl feature detection system to determine if instanced rendering is available, though the extension is so ubiquitously supported that many apps just make the assumption: <a href=\"https://webglstats.com/webgl/extension/ANGLE_instanced_arrays\">instanced_arrays</a>.</li>\n<li>An attribute is referred to as <strong>instanced</strong> if its divisor value is non-zero.</li>\n<li>The divisor modifies the rate at which vertex attributes advance when rendering multiple instances of primitives in a single draw call.</li>\n<li>If divisor is zero, the attribute at slot index advances once per vertex.</li>\n<li>If divisor is non-zero, the attribute advances once per divisor instances of the set(s) of vertices being rendered.</li>\n</ul>"}