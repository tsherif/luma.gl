{"expireTime":9007200809748944000,"key":"transformer-remark-markdown-html-3cda54ee42e33b0a7aab03f1d72cb0e6-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-autolink-headers-","val":"<h1 id=\"pbrmaterial\"><a href=\"#pbrmaterial\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PBRMaterial</h1>\n<p>Implements the PBR (Physically-Based Rendering) material system specified in the core glTF standard. The metallic-roughness material model specified in the glTF2 standard enables glTF files to be rendered consistently across platforms.</p>\n<blockquote>\n<p>glTF extensions that influence the material model are not currently supported.</p>\n</blockquote>\n<p>References:</p>\n<ul>\n<li>This page draws a lot of content from <a href=\"https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#materials\">glTF 2.0 Materials section</a>.</li>\n</ul>\n<h2 id=\"extends-material\"><a href=\"#extends-material\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extends Material</h2>\n<p><code class=\"language-text\">PBRMaterial</code> implements the common recommended material properties recommended in the base <code class=\"language-text\">Material</code> class.</p>\n<h3 id=\"metallic-roughness-material-model\"><a href=\"#metallic-roughness-material-model\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Metallic-Roughness Material Model</h3>\n<p>All parameters related to the metallic-roughness material model are defined under the <code class=\"language-text\">pbrMetallicRoughness</code> property of <code class=\"language-text\">material</code> object. The following example shows how a material like gold can be defined using the metallic-roughness parameters:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"baseColor\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">1.000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.766</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.336</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"metallic\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"roughness\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"baseColorTexture\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"metallicRoughnessTexture\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The metallic-roughness material model is defined by the following properties:</p>\n<ul>\n<li><code class=\"language-text\">baseColor</code> - The base color of the material</li>\n<li><code class=\"language-text\">metallic</code> - The metalness of the material</li>\n<li><code class=\"language-text\">roughness</code> - The roughness of the material</li>\n</ul>\n<p>The base color has two different interpretations depending on the value of metalness. When the material is a metal, the base color is the specific measured reflectance value at normal incidence (F0). For a non-metal the base color represents the reflected diffuse color of the material. In this model it is not possible to specify a F0 value for non-metals, and a linear value of 4% (0.04) is used.</p>\n<p>The value for each property (<code class=\"language-text\">baseColor</code>, <code class=\"language-text\">metallic</code>, <code class=\"language-text\">roughness</code>) can be defined using factors or textures. The <code class=\"language-text\">metallic</code> and <code class=\"language-text\">roughness</code> properties are packed together in a single texture called <code class=\"language-text\">metallicRoughnessTexture</code>. </p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"pbrMetallicRoughness\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"baseColor\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"baseColorTexture\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"baseColorTextureCoord\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"metallic\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"roughness\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"metallicRoughnessTexture\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"metallicRoughnessTexture\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"metallicRoughnessTextureCoord\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If a texture is not given, all respective texture components within this material model are assumed to have a value of <code class=\"language-text\">1.0</code>. If both factors and textures are present the factor value acts as a linear multiplier for the corresponding texture values. The <code class=\"language-text\">baseColorTexture</code> is in sRGB space and must be converted to linear space before it is used for any computations.</p>\n<p>For example, assume a value of <code class=\"language-text\">[0.9, 0.5, 0.3, 1.0]</code> in linear space is obtained from an RGBA <code class=\"language-text\">baseColorTexture</code>, and assume that <code class=\"language-text\">baseColorFactor</code> is given as <code class=\"language-text\">[0.2, 1.0, 0.7, 1.0]</code>.\nThen, the result would be</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[0.9 * 0.2, 0.5 * 1.0, 0.3 * 0.7, 1.0 * 1.0] = [0.18, 0.5, 0.21, 1.0]</code></pre></div>\n<h3 id=\"calculating-reflectance\"><a href=\"#calculating-reflectance\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Calculating Reflectance</h3>\n<p>The following equations show how to calculate bidirectional reflectance distribution function (BRDF) inputs (<em>c<sub>diff</sub></em>, <em>F<sub>0</sub></em>, <em>Î±</em>) from the metallic-roughness material properties. In addition to the material properties, if a primitive specifies a vertex color using the attribute semantic property <code class=\"language-text\">COLOR_0</code>, then this value acts as an additional linear multiplier to <code class=\"language-text\">baseColor</code>.</p>\n<p><code class=\"language-text\">const dielectricSpecular = rgb(0.04, 0.04, 0.04)</code>\n<br>\n<code class=\"language-text\">const black = rgb(0, 0, 0)</code></p>\n<p><em>c<sub>diff</sub></em> = <code class=\"language-text\">lerp(baseColor.rgb * (1 - dielectricSpecular.r), black, metallic)</code>\n<br>\n<em>F<sub>0</sub></em> = <code class=\"language-text\">lerp(dieletricSpecular, baseColor.rgb, metallic)</code>\n<br>\n<em>Î±</em> = <code class=\"language-text\">roughness ^ 2</code></p>"}