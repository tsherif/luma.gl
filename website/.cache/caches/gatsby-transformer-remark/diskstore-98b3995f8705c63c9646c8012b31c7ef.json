{"expireTime":9007200809748944000,"key":"transformer-remark-markdown-html-9d09aed2ce6005d8c87c2f4a245ca19d-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-autolink-headers-","val":"<h1 id=\"createglcontext\"><a href=\"#createglcontext\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>createGLContext</h1>\n<p>Provides functions to create and initialize a WebGL context, and to check for presence of WebGL and extensions.</p>\n<ul>\n<li>Provides the <code class=\"language-text\">createGLContext</code> method which can create WebGLContexts both in browsers and under Node.js.</li>\n</ul>\n<p>Note that the use of these functions is NOT required to use the remaining functions and classes in luma.gl.</p>\n<p>You could e.g. manually create a WebGLContext by using canvas.getContext, or use a context created by another WebGL library.\nIn fact, luma.gl is explicitly designed to work with any WebGL context, and in contrast to some other approaches, luma.gl maintains no \"hidden state\" that might complicate composing your code with other WebGL based modules.</p>\n<h2 id=\"usage\"><a href=\"#usage\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<p>Create a WebGL context, autocreating a canvas</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>createGLContext<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@luma.gl/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gl <span class=\"token operator\">=</span> <span class=\"token function\">createGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Prefers WebGL2 but falls back to WebGL1</span></code></pre></div>\n<p>Create a WebGL2 context, failing gracefully if WebGL2 is not supported.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>createGLContext<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@luma.gl/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gl <span class=\"token operator\">=</span> <span class=\"token function\">createGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  webgl1<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  throwOnError<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>gl<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'WebGL2 not supported'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Create a WebGL context in an existing canvas, setting WebGL context attributes</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>createGLContext<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@luma.gl/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gl <span class=\"token operator\">=</span> <span class=\"token function\">createGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  canvas<span class=\"token punctuation\">:</span> <span class=\"token string\">'my-canvas-id'</span><span class=\"token punctuation\">,</span>\n  stencil<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>       <span class=\"token comment\">// Default render target gets a stencil buffer of at least 8 bits.</span>\n  antialias<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// Turn of antialiasing</span>\n  premultipliedAlpha<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// turn off pre-multiplied alpha.</span>\n  preserveDrawingBuffer<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Default render target buffers will not be automatically cleared</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Create a headless WebGL context (under Node.js). <code class=\"language-text\">headless-gl</code> must be installed (<code class=\"language-text\">npm install gl</code>).</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>createGLContext<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@luma.gl/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gl <span class=\"token operator\">=</span> <span class=\"token function\">createGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"methods\"><a href=\"#methods\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods</h2>\n<h3 id=\"createglcontext-1\"><a href=\"#createglcontext-1\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>createGLContext</h3>\n<p>Creates and returns a WebGL context, both in browsers and in Node.js.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const gl = createGLContext(options);</code></pre></div>\n<ul>\n<li><code class=\"language-text\">options</code> (<em>Object</em>) - key/value pairs containing context creation options</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Browser default</th>\n<th>Headless default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">webgl2</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td>N/A</td>\n<td>If <code class=\"language-text\">true</code>, will attempt to create a WebGL2 context. Will silently fall back to WebGL1 contexts unless <code class=\"language-text\">webgl1</code> is set to <code class=\"language-text\">false</code>.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">webgl1</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td>If <code class=\"language-text\">true</code>, will attempt to create a WebGL1 context. The <code class=\"language-text\">webgl2</code> flag has higher priority.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">throwOnError</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td>Normally <code class=\"language-text\">createGLContext</code> will throw an error on failure. If <code class=\"language-text\">false</code>, it will return <code class=\"language-text\">null</code> instead.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">manageState</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td>Instrument the context to enable state caching and <code class=\"language-text\">withParameter</code> calls. Leave on unless you have special reasons not to.</td>\n</tr>\n<tr>\n<td><em>Browser-only</em></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">debug</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>N/A</td>\n<td>WebGL API calls will be logged to the console and WebGL errors will generate JavaScript exceptions. Note the enabling debug mode has a signficant performance impact.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">canvas</code></td>\n<td><code class=\"language-text\">null</code></td>\n<td>N/A</td>\n<td>A <em>string</em> containing the <code class=\"language-text\">id</code> of an existing HTML element or a <em>DOMElement</em> instance. If <code class=\"language-text\">null</code> or not provided, a new canvas will be created.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">alpha</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td>N/A</td>\n<td>Default render target has an alpha buffer.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">depth</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td>N/A</td>\n<td>Default render target has a depth buffer of at least 16 bits.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">stencil</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>N/A</td>\n<td>Default render target has a stencil buffer of at least 8 bits.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">antialias</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td>N/A</td>\n<td>Boolean that indicates whether or not to perform anti-aliasing.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">premultipliedAlpha</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td>N/A</td>\n<td>Boolean that indicates that the page compositor will assume the drawing buffer contains colors with pre-multiplied alpha.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">preserveDrawingBuffer</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>N/A</td>\n<td>Default render target buffers will not be automatically cleared and will preserve their values until cleared or overwritten</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">failIfMajorPerformanceCaveat</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>N/A</td>\n<td>Do not create if the system performance is low.</td>\n</tr>\n<tr>\n<td>Headless-only</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">width</code></td>\n<td>N/A</td>\n<td><code class=\"language-text\">800</code></td>\n<td>width (<em>number</em>) of the headless \"virtual screen\" render target. Ignored for browser contexts</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">height</code></td>\n<td>N/A</td>\n<td><code class=\"language-text\">600</code></td>\n<td>height (<em>number</em>) of the headless \"virtual screen\" render target. Ignored for browser contexts</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"remarks\"><a href=\"#remarks\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remarks</h2>\n<ul>\n<li>In browser environments, contexts are created via <code class=\"language-text\">HTMLCanvasElement.getContext</code>. If the <code class=\"language-text\">webgl2</code> option is set, this function will first try <code class=\"language-text\">webgl2</code> and then <code class=\"language-text\">experimental-webgl2</code>, before falling back to webgl1.</li>\n<li>In Node.js environments, the context is created using headless-gl. In this case width and height options must be supplied as there is no canvas element to use as reference.</li>\n</ul>"}