{"expireTime":9007200809748944000,"key":"transformer-remark-markdown-html-47ce2cc92f955e60ddb4b035a91067fe-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-autolink-headers-","val":"<h1 id=\"transformfeedback-webgl2\"><a href=\"#transformfeedback-webgl2\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TransformFeedback (WebGL2)</h1>\n<p><code class=\"language-text\">TransformFeedback</code> objects holds state needed to perform transform feedback operations. They store the buffer bindings that are being recorded to. This makes it easy to switch between different sets of feedback buffer bindings (somewhat similar to how <code class=\"language-text\">VertexArrayObjects</code> hold input vertex buffers.</p>\n<p>The state managed by <code class=\"language-text\">TransformFeedback</code> objects includes the buffers the GPU will use to record the requested varyings.</p>\n<p>When <code class=\"language-text\">TransformFeedback</code> objects must be \"activated\" (<code class=\"language-text\">TransformFeedback.begin</code>) before it can be used. There a number of caveats to be aware of when manually managing <code class=\"language-text\">TransformFeedback</code> object activation, see the remarks. For this reason, luma.gl <a href=\"/docs/api-reference/webgl/program.md\"><code class=\"language-text\">Program.draw</code></a> call takes an optional <code class=\"language-text\">TransformFeedback</code> object as a parameter and activates and deactivates it before and after the draw call.</p>\n<p>Finally, note that when using transform feedback it is frequently desirable to turn off rasterization: <code class=\"language-text\">gl.enable(GL.RASTERIZER_DISCARD)</code> to prevent the fragment shader from running.</p>\n<p>For more information, see <a href=\"https://www.khronos.org/opengl/wiki/Transform_Feedback\">OpenGL Wiki</a>.</p>\n<h2 id=\"usage\"><a href=\"#usage\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<p>Setting up a model object for transform feedback.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Model</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  vs<span class=\"token punctuation\">,</span>\n  fs<span class=\"token punctuation\">,</span>\n  varyings<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'gl_Position'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'outputColor'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Setting up a transform feedback object and binding buffers</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> transformFeedback <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TransformFeedback</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">setBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bufferPosition<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">setBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> bufferColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>When binding the buffers, index should be equal to the corresponding varying entry in <code class=\"language-text\">varyings</code> array passed to <code class=\"language-text\">Program</code> constructor.</p>\n<p>Buffers can also be bound using varying name if information about varyings are retrieved from <code class=\"language-text\">Program</code> object.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> transformFeedback <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TransformFeedback</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  program<span class=\"token punctuation\">:</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// linked program, configuration will be read from it</span>\n  buffers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    outputColor<span class=\"token punctuation\">:</span> bufferColor<span class=\"token punctuation\">,</span>\n    gl_Position<span class=\"token punctuation\">:</span> bufferPosition\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Running program (drawing) with implicit activation of transform feedback (will call <code class=\"language-text\">begin</code> and <code class=\"language-text\">end</code> on supplied <code class=\"language-text\">transformFeedback</code>)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">model<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  drawMode<span class=\"token punctuation\">,</span>\n  vertexCount<span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  transformFeedback\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Running a transform feedback operation while turning off rasterization (drawing):</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">model<span class=\"token punctuation\">.</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  drawMode<span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span>\n  transformFeedback\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>or equivalently, just call draw with an additional parameter:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> parameters <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token constant\">GL</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RASTERIZER_DISCARD</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>\nmodel<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">,</span> transformFeedback<span class=\"token punctuation\">,</span> parameters<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"methods\"><a href=\"#methods\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods</h2>\n<h3 id=\"constructorgl--webgl2renderingcontext-props-object\"><a href=\"#constructorgl--webgl2renderingcontext-props-object\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor(gl : WebGL2RenderingContext, props: Object)</h3>\n<p>See <code class=\"language-text\">TransformFeedback.setProps</code> for parameters.</p>\n<p>WebGL APIs <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/createTransformFeedback\"><code class=\"language-text\">gl.createTransformFeedback</code></a></p>\n<h3 id=\"initializeprops--object--transformfeedback\"><a href=\"#initializeprops--object--transformfeedback\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>initialize(props : Object) : TransformFeedback</h3>\n<p>Reinitializes an existing <code class=\"language-text\">TransformFeedback</code> object with new props.</p>\n<h3 id=\"setpropsprops--object--transformfeedback\"><a href=\"#setpropsprops--object--transformfeedback\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>setProps(props : Object) : TransformFeedback</h3>\n<ul>\n<li><code class=\"language-text\">props.program</code>= (Object) - Gets a mapping of varying name to buffer indices from a linked program if supplied.</li>\n<li>\n<p><code class=\"language-text\">props.buffers</code>=(Object) - Map of location index or name to Buffer object or buffer parameters object. If buffer parameters object is supplied, it contains following fields.</p>\n<ul>\n<li><code class=\"language-text\">buffer</code>=(Buffer) - Buffer object to be bound.</li>\n<li><code class=\"language-text\">byteOffset</code>=(Number, default: 0) - Byte offset that is used to start recording the data in the buffer.</li>\n<li><code class=\"language-text\">byteSize</code>=(Number, default: remaining buffer size) - Size in bytes that is used for recording the data.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">props.bindOnUse</code>=<code class=\"language-text\">true</code> - If true, binds and unbinds buffers before and after use, rather than right away when set. Workaround for a possible <a href=\"https://github.com/KhronosGroup/WebGL/issues/2346\">Khronos/Chrome bug</a>.</li>\n</ul>\n<p>Notes:</p>\n<ul>\n<li><code class=\"language-text\">buffers</code> - will get bound to indices in the <code class=\"language-text\">GL.TRANSFORM_FEEDBACK_BUFFER</code> target.</li>\n</ul>\n<h3 id=\"delete--transformfeedback\"><a href=\"#delete--transformfeedback\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>delete() : TransformFeedback</h3>\n<p>Destroys a <code class=\"language-text\">TransformFeedback</code> object.</p>\n<p>WebGL APIS <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/deleteTransformFeedback\"><code class=\"language-text\">gl.deleteTransformFeedback</code></a></p>\n<h3 id=\"setbuffersbuffers-object--transformfeedback\"><a href=\"#setbuffersbuffers-object--transformfeedback\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>setBuffers(buffers: Object) : TransformFeedback</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">buffers</code>=(Object) - Map of location index or name to Buffer object or buffer parameters object. If buffer parameters object is supplied, it contains following fields.</p>\n<ul>\n<li><code class=\"language-text\">buffer</code>=(Buffer) - Buffer object to be bound.</li>\n<li><code class=\"language-text\">byteOffset</code>=(Number, default: 0) - Byte offset that is used to start recording the data in the buffer.</li>\n<li><code class=\"language-text\">byteSize</code>=(Number, default: remaining buffer size) - Size in bytes that is used for recording the data.</li>\n</ul>\n</li>\n</ul>\n<p>Notes:</p>\n<ul>\n<li>To use <code class=\"language-text\">gl.bindBufferRange</code>, either <code class=\"language-text\">offsetInByts</code> or <code class=\"language-text\">byteSize</code> must be specified, when only one is specified, default value is used for the other, when both not specified, <code class=\"language-text\">gl.bindBufferBase</code> is used for binding.</li>\n</ul>\n<p>WebGL APIs <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/bindBufferBase\"><code class=\"language-text\">gl.bindBufferBase</code></a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/bindBufferRange\"><code class=\"language-text\">gl.bindBufferRange</code></a></p>\n<h3 id=\"beginprimitivemode--glenum--transformfeedback\"><a href=\"#beginprimitivemode--glenum--transformfeedback\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>begin(primitiveMode : GLEnum) : TransformFeedback</h3>\n<p>Activates transform feedback using the buffer bindings in this <code class=\"language-text\">TransformFeedback</code> object.</p>\n<ul>\n<li><code class=\"language-text\">primitiveMode</code> (<code class=\"language-text\">GLenum</code>) -</li>\n</ul>\n<p>returns (<code class=\"language-text\">TransformFeedback</code>) - returns self to enable chaining</p>\n<p>Notes:</p>\n<ul>\n<li>Buffers can not be accessed until <code class=\"language-text\">TransformFeedback.end</code> or <code class=\"language-text\">TransformFeedback.pause</code> have been called.</li>\n<li>Buffers can not be changed until <code class=\"language-text\">TransformFeedback.end</code> or has been called, which includes doing anything which reads from or writes to any part of these buffers (outside of feedback writes, of course, or reallocating storage for any of these buffers).</li>\n</ul>\n<p>WebGL APIs <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/beginTransformFeedback\"><code class=\"language-text\">gl.beginTransformFeedback</code></a></p>\n<h3 id=\"end--transformfeedback\"><a href=\"#end--transformfeedback\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>end() : TransformFeedback</h3>\n<p>returns (<code class=\"language-text\">TransformFeedback</code>) - returns self to enable chaining</p>\n<p>WebGL APIs <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/endTransformFeedback\"><code class=\"language-text\">gl.endTransformFeedback</code></a></p>\n<h2 id=\"see-also\"><a href=\"#see-also\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>See also</h2>\n<ul>\n<li><code class=\"language-text\">Program</code> constructor - <code class=\"language-text\">varyings</code> argument to specify which vertex shader outputs to expose to transform feedback operations.</li>\n</ul>\n<h2 id=\"enumerations\"><a href=\"#enumerations\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Enumerations</h2>\n<table>\n<thead>\n<tr>\n<th>Primitive Mode</th>\n<th>Compatible Draw Modes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">GL.POINTS</code></td>\n<td><code class=\"language-text\">GL.POINTS</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">GL.LINES</code></td>\n<td><code class=\"language-text\">GL.LINES</code>, <code class=\"language-text\">GL.LINE_LOOP</code>, <code class=\"language-text\">GL.LINE_STRIP</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">GL.TRIANGLES</code></td>\n<td><code class=\"language-text\">GL.TRIANGLES</code>, <code class=\"language-text\">GL.TRIANGLE_STRIP</code>, <code class=\"language-text\">GL.TRIANGLE_FAN</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"limits\"><a href=\"#limits\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Limits</h2>\n<table>\n<thead>\n<tr>\n<th>Limit</th>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS</code></td>\n<td>>=4</td>\n<td>total number of variables that can be captured }</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS</code></td>\n<td>>=4</td>\n<td>number of components that any particular variable can contain</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">GL.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS</code></td>\n<td>>= 64</td>\n<td>total number of components in interleaved capture</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">GL.MAX_TRANSFORM_FEEDBACK_BUFFERS</code></td>\n<td>TBD</td>\n<td>Advanced interleaving total number of buffers</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"remarks\"><a href=\"#remarks\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remarks</h2>\n<p>About <code class=\"language-text\">TransformFeedback</code> activation caveats</p>\n<ul>\n<li>When activated, <code class=\"language-text\">TransformFeedback</code> are coupled to the \"current\" <code class=\"language-text\">Program</code></li>\n<li>Note that a started and unpaused TransformFeedback prevents the app from changing or re-linking the current program. So for instance, <code class=\"language-text\">Program.use</code> (<code class=\"language-text\">gl.useProgram</code>) cannot be called.</li>\n</ul>"}