{"expireTime":9007200809748944000,"key":"transformer-remark-markdown-html-66324ced28f57fc1a7235d3aa028446d-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-autolink-headers-","val":"<h1 id=\"texture2d\"><a href=\"#texture2d\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Texture2D</h1>\n<p>2D textures hold basic \"single image\" textures (although technically they can contain multiple mipmap levels). They hold image memory of a certain format and size, determined at initialization time. They can be read from using shaders and written to by attaching them to frame buffers.</p>\n<p>Most texture related functionality is implemented by and documented on the <a href=\"/docs/api-reference/webgl/texture.md\">Texture</a> base class. For additional information, see <a href=\"https://www.khronos.org/opengl/wiki/Texture\">OpenGL Wiki</a>.</p>\n<h2 id=\"usage\"><a href=\"#usage\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<p>Construct a new texture from an image</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> texture <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Texture2D</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  data<span class=\"token punctuation\">:</span> image<span class=\"token punctuation\">,</span>\n  parameters<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">GL</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_MAG_FILTER</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">GL</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NEAREST</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">GL</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_MIN_FILTER</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">GL</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NEAREST</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  pixelStore<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">GL</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UNPACK_FLIP_Y_WEBGL</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  mipmaps<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Construct a texture initialized with a data array</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> texture <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Texture2D</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  width<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  height<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  format<span class=\"token punctuation\">:</span> <span class=\"token constant\">GL</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RGB</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  parameters<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">GL</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_MAG_FILTER</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">GL</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NEAREST</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">GL</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_MIN_FILTER</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">GL</span><span class=\"token punctuation\">.</span><span class=\"token constant\">NEAREST</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  pixelStore<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">GL</span><span class=\"token punctuation\">.</span><span class=\"token constant\">UNPACK_FLIP_Y_WEBGL</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  mipmaps<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Construct an empty 1x1 texture</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> texture <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Texture2D</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Resize it (this clears the texture).</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">texture<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>width<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Write a sub image into the texture</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">texture<span class=\"token punctuation\">.</span><span class=\"token function\">setSubImageData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>pixels<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> dataFormat<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Accessing elements</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  texture2D<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>\n  texture2D<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>\n  texture2D<span class=\"token punctuation\">.</span>format<span class=\"token punctuation\">,</span>\n  texture2D<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span>\n  texture2D<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token constant\">GL</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TEXTURE_MAG_FILTER</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"methods\"><a href=\"#methods\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Methods</h2>\n<h3 id=\"constructorgl--webglrenderingcontext-props--object--data--any\"><a href=\"#constructorgl--webglrenderingcontext-props--object--data--any\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor(gl : WebGLRenderingContext, props : Object | data : any)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import {Texture2D} from &#39;@luma.gl/core&#39;\nconst texture1 = new Texture2D(gl, {\n  data: ...,\n  width: ...,\n  height: ...,\n  mipmaps: ...,\n  format: ...,\n  type: ...,\n  dataFormat: ...,\n  parameters: ...\n});</code></pre></div>\n<p>There is also a short form where the image data (or a promise resolving to the image data) can be the second argument of the constructor:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import {Texture2D} from &#39;@luma.gl/core&#39;;\nimport {loadImage} from &#39;@loaders.gl/core&#39;;\n\nconst texture1 = new Texture2D(gl, loadImage(url));\n// equivalent to\nconst texture1 = new Texture2D(gl, {data: loadImage(url)});</code></pre></div>\n<ul>\n<li><code class=\"language-text\">gl</code> (WebGLRenderingContext) - gl context</li>\n<li><code class=\"language-text\">data</code>=null (*) - If not provided (null), a solid color texture will be allocated of the specified size.</li>\n<li><code class=\"language-text\">width</code>=<code class=\"language-text\">0</code> (<em>Number</em>) - The width of the texture.</li>\n<li><code class=\"language-text\">height</code>=<code class=\"language-text\">0</code> (<em>Number</em>) - The height of the texture.</li>\n<li><code class=\"language-text\">mipmaps</code>= - (<em>Boolean</em>) - Generates mipmaps when true.</li>\n<li><code class=\"language-text\">format</code>=<code class=\"language-text\">GL.RGBA</code> (<em>GLenum</em> ) - internal format that WebGL should use.</li>\n<li><code class=\"language-text\">type</code>= (<em>enum</em>) - type of pixel data (<code class=\"language-text\">GL.UNSIGNED_BYTE</code>, <code class=\"language-text\">GL.FLOAT</code> etc). Default is autodeduced from <code class=\"language-text\">format</code>.</li>\n<li><code class=\"language-text\">dataFormat</code>= (<em>GLenum</em>) - internal format that WebGL should use. Default is autodeduced from <code class=\"language-text\">format</code>.</li>\n<li><code class=\"language-text\">parameters</code>=<code class=\"language-text\">{}</code> (<em>object</em>) - map of texture sampler parameters.</li>\n<li><code class=\"language-text\">pixelStore</code>=<code class=\"language-text\">{}</code> (<em>object</em>) - map of pixel store parameters (controls how <code class=\"language-text\">data</code> is interpreted when Textures are initialized from memory)</li>\n</ul>\n<p>Notes:</p>\n<ul>\n<li>setting <code class=\"language-text\">mipmaps</code> to true when <code class=\"language-text\">format</code> set to <code class=\"language-text\">RGB32F</code> will fail, even though <code class=\"language-text\">RGB32F</code> is supported texture format (with EXT<em>color</em>buffer_float), it is not supported as renderable format.</li>\n</ul>\n<p>Note that since many of the constructor parameters are common to all the <code class=\"language-text\">Texture</code> classes they are detailed in <a href=\"/docs/api-reference/webgl/texture.md\"><code class=\"language-text\">Texture</code></a>. Sampler parameters are specified in <a href=\"/docs/api-reference/webgl/sampler.md\">Sampler</a>, and pixel store parameters are specified in <a href=\"/docs/api-reference/webgl/context/get-parameters.md\">State Management</a></p>"}